{"id":"c20842010f500b377d500089cd3d722d","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/phoneLink.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\n\ncontract phoneLink is\n  Initializable,\n  ERC20Upgradeable,\n  ReentrancyGuardUpgradeable,\n  OwnableUpgradeable\n{\n  address payable public marketowner;\n  \n  uint256 public platformFee;\n  //   using Counters for Counters.Counter;\n  //   Counters.Counter public _itemIds;\n  uint256 public _itemIds;\n  //   Counters.Counter public _escrowIds;\n\n  struct Details {\n    string name;\n    string identifier;\n    string typeOfIdentifier;\n    address connectedWalletAddress;\n    bool isPrimaryWallet;\n  }\n\n  mapping(uint256 => Details) public phoneToDetails;\n  mapping(string => Details) public phoneToDetailsUPI;\n  // address private _Forwarder;\n  // string _trustedForwarder;\n\n  // address _Forwarder = 0x9b4Aa70537676A41644B99fC204918A7Cc2C8307;\n  // constructor() ERC2771ContextUpgradeable(_trustedForwarder) {\n  // }\n\n  using ECDSA for bytes32;\n\n  event DetailsCreated(\n    string indexed name,\n    string indexed identifier,\n    string indexed typeOfIdentifier,\n    address connectedWalletAddress,\n    bool isPrimaryWallet\n  );\naddress private glltoken;\n  function initialize(address gll) public initializer {\n    __ERC20_init('', '');\n    __ReentrancyGuard_init();\n    __Ownable_init(msg.sender);\n    //  _trustedForwarder = \"0x9b4Aa70537676A41644B99fC204918A7Cc2C8307\";\n    //  __EIP712_init(\"PhoneLink\", \"1\");\n    // __ERC2771Forwarder_init(_trustedForwarder);\n    marketowner = payable(msg.sender);\n    platformFee = 5;\n    glltoken = gll;\n  }\n\n  // Override function to return _trustedForwarder\n  // function trustedForwarder() public view returns (address) {\n  //     return _Forwarder;\n  // }\n\n  /**\n   * @dev both Ownable and ERC2771Context have a sender function, so we need to override and select which one to use.\n   */\n  // function sender internal view override(ContextUpgradeable, ERC2771ContextUpgradeable) returns (address) {\n  //     return ERC2771ContextUpgradeable.sender;\n  // }\n\n  // /**\n  //  * @dev both Ownable and ERC2771Context have a _msgData() function, so we need to override and select which one to use.\n  //  */\n  // function _msgData() internal view override(ContextUpgradeable, ERC2771ContextUpgradeable) returns (bytes calldata) {\n  //     return ERC2771ContextUpgradeable._msgData();\n  // }\n\n  function getMarketOwner() external view returns (address payable) {\n    return marketowner;\n  }\n\n  function setMarketOwner(address payable addr) external onlyOwner {\n    marketowner = addr;\n  }\n\n  function setPlatformFee(uint256 fee) external onlyOwner nonReentrant {\n    platformFee = fee;\n  }\n\n  // Get User details for a particular Wallet\n  function getWalletDetails(\n    address walletAddress\n  ) public view returns (Details[] memory) {\n    // uint256 totalItemCount = _itemIds.current();\n    uint256 totalItemCount = _itemIds;\n    uint256 currentIndex = 0;\n\n    Details[] memory items = new Details[](totalItemCount);\n    for (uint256 i = 0; i < totalItemCount; i++) {\n      if (phoneToDetails[i + 1].connectedWalletAddress == walletAddress) {\n        Details storage currentItem = phoneToDetails[i + 1];\n        items[currentIndex] = currentItem;\n        currentIndex += 1;\n      }\n    }\n    return items;\n  }\n\n  //Gets all user details\n  function getPhoneToDetails() public view onlyOwner returns (Details[] memory) {\n    // uint256 totalItemCount = _itemIds.current();\n    uint256 totalItemCount = _itemIds;\n    uint256 currentIndex = 0;\n\n    Details[] memory items = new Details[](totalItemCount);\n    for (uint256 i = 0; i < totalItemCount; i++) {\n      uint256 currentId = i + 1;\n      Details storage currentItem = phoneToDetails[currentId];\n      items[currentIndex] = currentItem;\n      currentIndex += 1;\n    }\n    return items;\n  }\n\n  //Save data\n  function enterDetails(\n    string memory name,\n    string memory identifier,\n    string memory typeOfIdentifier,\n    address sender\n  ) public nonReentrant {\n    // _itemIds.increment();\n    _itemIds++;\n    // uint256 slNo = _itemIds.current();\n    uint256 slNo = _itemIds;\n\n    for (uint256 i = 0; i < slNo; i++) {\n      if (\n        keccak256(abi.encodePacked((phoneToDetails[i + 1].identifier))) ==\n        keccak256(abi.encodePacked((identifier)))\n      ) {\n        phoneToDetails[i + 1].isPrimaryWallet = false;\n      }\n    }\n    require(\n      keccak256(abi.encodePacked((phoneToDetailsUPI[name].name))) ==\n        keccak256(abi.encodePacked('')),\n      'An UCI id associated with this name already exists. Please choose a different name !!'\n    );\n    phoneToDetailsUPI[name] = Details(name, identifier, typeOfIdentifier, sender, true);\n    phoneToDetails[slNo] = Details(name, identifier, typeOfIdentifier, sender, true);\n\n    emit DetailsCreated(name, identifier, typeOfIdentifier, sender, true);\n  }\n\n  function checkUniqueUCI(string memory name) external view returns (bool) {\n    if (\n      keccak256(abi.encodePacked((phoneToDetailsUPI[name].name))) ==\n      keccak256(abi.encodePacked(''))\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //make wallet primary\n  function makePrimary(address wallet, string memory identifier) public nonReentrant {\n    // uint256 slNo = _itemIds.current();\n    uint256 slNo = _itemIds;\n\n    //SET ALL WALLETS of \"TYPE\" AS SECONDARY\n    for (uint256 i = 0; i < slNo; i++) {\n      if (\n        keccak256(abi.encodePacked((phoneToDetails[i + 1].identifier))) ==\n        keccak256(abi.encodePacked((identifier)))\n      ) {\n        phoneToDetails[i + 1].isPrimaryWallet = false;\n      }\n    }\n\n    //Set The required identifier of \"Type\" as Primary\n    for (uint256 i = 0; i < slNo; i++) {\n      if (\n        phoneToDetails[i + 1].connectedWalletAddress == wallet &&\n        keccak256(abi.encodePacked((phoneToDetails[i + 1].identifier))) ==\n        keccak256(abi.encodePacked((identifier)))\n      ) {\n        phoneToDetails[i + 1].isPrimaryWallet = true;\n      }\n    }\n  }\n\n  //my profile\n  function myWallets() public view returns (Details[] memory) {\n    // uint256 totalItemCount = _itemIds.current();\n    uint256 totalItemCount = _itemIds;\n    uint256 currentIndex = 0;\n\n    Details[] memory items = new Details[](totalItemCount);\n    for (uint256 i = 0; i < totalItemCount; i++) {\n      if (phoneToDetails[i + 1].connectedWalletAddress == msg.sender) {\n        for (uint256 j = 0; j < totalItemCount; j++) {\n          if (\n            keccak256(abi.encodePacked((phoneToDetails[j + 1].identifier))) ==\n            keccak256(abi.encodePacked((phoneToDetails[i + 1].identifier)))\n          ) {\n            Details storage currentItem = phoneToDetails[j + 1];\n            items[currentIndex] = currentItem;\n            currentIndex += 1;\n          }\n        }\n      }\n    }\n\n    return items;\n  }\n\n  //edit all details\n  function editProfile(\n    string memory name,\n    string memory identifier,\n    string memory typeOfIdentifier,\n    string memory oldIdentifier,\n    address sender\n  ) public nonReentrant {\n    // uint256 totalItemCount = _itemIds.current();\n    uint256 totalItemCount = _itemIds;\n\n    for (uint256 i = 0; i < totalItemCount; i++) {\n      if (phoneToDetails[i + 1].connectedWalletAddress == sender) {\n        if (\n          keccak256(abi.encodePacked((phoneToDetails[i + 1].typeOfIdentifier))) ==\n          keccak256(abi.encodePacked((typeOfIdentifier)))\n        ) {\n          if (\n            keccak256(abi.encodePacked((phoneToDetails[i + 1].identifier))) ==\n            keccak256(abi.encodePacked((oldIdentifier)))\n          ) {\n            phoneToDetails[i + 1].name = name;\n            phoneToDetails[i + 1].identifier = identifier;\n            phoneToDetails[i + 1].typeOfIdentifier = typeOfIdentifier;\n          }\n        }\n      }\n    }\n  }\n\n  // function sendToken(address destination, uint256 amount)\n  //   public\n  //   payable\n  //   nonReentrant\n  // {\n  //   payable(destination).transfer(amount);\n  // }\n\n  //Gets all user details for a given particular identifier\n  function fetchAllWalletAddress(\n    string memory userIdentifier\n  ) public view returns (Details[] memory) {\n    // uint256 totalItemCount = _itemIds.current();\n    uint256 totalItemCount = _itemIds;\n    uint256 itemCount = 0;\n    uint256 currentIndex = 0;\n\n    for (uint256 i = 0; i < totalItemCount; i++) {\n      if (\n        keccak256(abi.encodePacked((phoneToDetails[i + 1].identifier))) ==\n        keccak256(abi.encodePacked((userIdentifier)))\n      ) {\n        itemCount += 1;\n      }\n    }\n\n    Details[] memory detail = new Details[](itemCount);\n    for (uint256 i = 0; i < totalItemCount; i++) {\n      if (\n        keccak256(abi.encodePacked((phoneToDetails[i + 1].identifier))) ==\n        keccak256(abi.encodePacked((userIdentifier)))\n      ) {\n        uint256 currentId = i + 1;\n        Details storage currentItem = phoneToDetails[currentId];\n        detail[currentIndex] = currentItem;\n        currentIndex += 1;\n      }\n    }\n    return detail;\n  }\n\n  //restrict duplicate entries\n  function uniqueEntry(\n    string memory identifier\n  ) public view returns (bool) {\n    bool unique = true;\n    // uint256 slNo = _itemIds.current();\n    uint256 slNo = _itemIds;\n\n    for (uint256 i = 0; i < slNo; i++) {\n      if (\n        phoneToDetails[i + 1].connectedWalletAddress == msg.sender &&\n        keccak256(abi.encodePacked((phoneToDetails[i + 1].identifier))) ==\n        keccak256(abi.encodePacked((identifier)))\n      ) {\n        unique = false;\n        break;\n      }\n    }\n    return unique;\n  }\n\n  function fetchPrimaryWalletAddress(\n    string memory userIdentifier\n  ) public view returns (address) {\n    // uint256 totalItemCount = _itemIds.current();\n    uint256 totalItemCount = _itemIds;\n    address wallet = address(0);\n\n    for (uint256 i = 0; i < totalItemCount; i++) {\n      if (\n        keccak256(abi.encodePacked((phoneToDetails[i + 1].identifier))) ==\n        keccak256(abi.encodePacked((userIdentifier))) &&\n        phoneToDetails[i + 1].isPrimaryWallet == true\n      ) {\n        wallet = phoneToDetails[i + 1].connectedWalletAddress;\n        break;\n      }\n    }\n    return wallet;\n  }\n  function fetchWalletAddressUCI(string memory name) external view returns (address) {\n    return phoneToDetailsUPI[name].connectedWalletAddress;\n  }\n\n  function sendMoney(\n    uint256 coinAmount,\n    address token,\n    address payable receiver,\n    address sender,\n    bytes memory signature\n  ) external nonReentrant returns (bool) {\n    bytes32 messageHash = keccak256(\n      abi.encodePacked(sender, token, receiver, coinAmount)\n    );\n    // bytes32 ethSignedMessageHash = ECDSA.toEthSignedMessageHash(messageHash);\n    bytes32 ethSignedMessageHash = MessageHashUtils.toEthSignedMessageHash(messageHash);\n    address recoveredSigner = ECDSA.recover(ethSignedMessageHash, signature);\n\n    require(recoveredSigner == sender, 'Invalid signature');\n\n    uint256 myProfit = (coinAmount * platformFee) / 1000;\n    uint256 amountToBeTransferred = coinAmount - myProfit;\n\n    IERC20(token).transferFrom(sender, receiver, amountToBeTransferred);\n    IERC20(token).transferFrom(sender, marketowner, myProfit);\n\n    return true;\n  }\n\n  function sendNative(address payable receiver) external payable nonReentrant {\n    uint256 myProfit = (msg.value * platformFee) / 1000; //platform fee of 0.5%\n    uint256 amountToBeTransferred = msg.value - myProfit;\n    payable(receiver).transfer(amountToBeTransferred);\n    payable(marketowner).transfer(myProfit);\n  }\n\n  function getGLL(uint256 coinAmount, address payable receiver) external payable onlyOwner nonReentrant {\n    IERC20(glltoken).transfer(receiver, coinAmount);\n  }\n\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1111],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1112,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1111,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1111,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1111],"ERC20Upgradeable":[1065],"IERC20":[1455],"IERC20Errors":[1282],"IERC20Metadata":[1481],"Initializable":[448]},"id":1066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1066,"sourceUnit":1456,"src":"131:70:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1066,"sourceUnit":1482,"src":"202:97:2","symbolAliases":[{"foreign":{"id":453,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"210:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1066,"sourceUnit":1112,"src":"300:70:2","symbolAliases":[{"foreign":{"id":455,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"308:18:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1066,"sourceUnit":1378,"src":"371:83:2","symbolAliases":[{"foreign":{"id":457,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"379:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1066,"sourceUnit":449,"src":"455:66:2","symbolAliases":[{"foreign":{"id":459,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"463:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":462,"name":"Initializable","nameLocations":["1319:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1319:13:2"},"id":463,"nodeType":"InheritanceSpecifier","src":"1319:13:2"},{"baseName":{"id":464,"name":"ContextUpgradeable","nameLocations":["1334:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1111,"src":"1334:18:2"},"id":465,"nodeType":"InheritanceSpecifier","src":"1334:18:2"},{"baseName":{"id":466,"name":"IERC20","nameLocations":["1354:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"1354:6:2"},"id":467,"nodeType":"InheritanceSpecifier","src":"1354:6:2"},{"baseName":{"id":468,"name":"IERC20Metadata","nameLocations":["1362:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":1481,"src":"1362:14:2"},"id":469,"nodeType":"InheritanceSpecifier","src":"1362:14:2"},{"baseName":{"id":470,"name":"IERC20Errors","nameLocations":["1378:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":1282,"src":"1378:12:2"},"id":471,"nodeType":"InheritanceSpecifier","src":"1378:12:2"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"523:757:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1065,"linearizedBaseContracts":[1065,1282,1481,1455,1111,448],"name":"ERC20Upgradeable","nameLocation":"1299:16:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"1397:63:2","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":489,"members":[{"constant":false,"id":476,"mutability":"mutable","name":"_balances","nameLocation":"1531:9:2","nodeType":"VariableDeclaration","scope":489,"src":"1495:45:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":475,"keyName":"account","keyNameLocation":"1511:7:2","keyType":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1495:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1522:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"_allowances","nameLocation":"1615:11:2","nodeType":"VariableDeclaration","scope":489,"src":"1551:75:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":481,"keyName":"account","keyNameLocation":"1567:7:2","keyType":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"1559:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1551:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":480,"keyName":"spender","keyNameLocation":"1594:7:2","keyType":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1578:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"_totalSupply","nameLocation":"1645:12:2","nodeType":"VariableDeclaration","scope":489,"src":"1637:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"_name","nameLocation":"1675:5:2","nodeType":"VariableDeclaration","scope":489,"src":"1668:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":485,"name":"string","nodeType":"ElementaryTypeName","src":"1668:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"_symbol","nameLocation":"1697:7:2","nodeType":"VariableDeclaration","scope":489,"src":"1690:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":487,"name":"string","nodeType":"ElementaryTypeName","src":"1690:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1472:12:2","nodeType":"StructDefinition","scope":1065,"src":"1465:246:2","visibility":"public"},{"constant":true,"id":492,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"1851:20:2","nodeType":"VariableDeclaration","scope":1065,"src":"1826:114:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:66:2","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":499,"nodeType":"Block","src":"2021:79:2","statements":[{"AST":{"nativeSrc":"2040:54:2","nodeType":"YulBlock","src":"2040:54:2","statements":[{"nativeSrc":"2054:30:2","nodeType":"YulAssignment","src":"2054:30:2","value":{"name":"ERC20StorageLocation","nativeSrc":"2064:20:2","nodeType":"YulIdentifier","src":"2064:20:2"},"variableNames":[{"name":"$.slot","nativeSrc":"2054:6:2","nodeType":"YulIdentifier","src":"2054:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":496,"isOffset":false,"isSlot":true,"src":"2054:6:2","suffix":"slot","valueSize":1},{"declaration":492,"isOffset":false,"isSlot":false,"src":"2064:20:2","valueSize":1}],"id":498,"nodeType":"InlineAssembly","src":"2031:63:2"}]},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"1956:16:2","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"1972:2:2"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"$","nameLocation":"2018:1:2","nodeType":"VariableDeclaration","scope":500,"src":"1997:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":495,"nodeType":"UserDefinedTypeName","pathNode":{"id":494,"name":"ERC20Storage","nameLocations":["1997:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"1997:12:2"},"referencedDeclaration":489,"src":"1997:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"1996:24:2"},"scope":1065,"src":"1947:153:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":515,"nodeType":"Block","src":"2374:55:2","statements":[{"expression":{"arguments":[{"id":511,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2407:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":512,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2414:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":510,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"2384:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2384:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"2384:38:2"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"2106:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":516,"implemented":true,"kind":"function","modifiers":[{"id":508,"kind":"modifierInvocation","modifierName":{"id":507,"name":"onlyInitializing","nameLocations":["2357:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2357:16:2"},"nodeType":"ModifierInvocation","src":"2357:16:2"}],"name":"__ERC20_init","nameLocation":"2291:12:2","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"name_","nameLocation":"2318:5:2","nodeType":"VariableDeclaration","scope":516,"src":"2304:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":502,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"symbol_","nameLocation":"2339:7:2","nodeType":"VariableDeclaration","scope":516,"src":"2325:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":504,"name":"string","nodeType":"ElementaryTypeName","src":"2325:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2303:44:2"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"2374:0:2"},"scope":1065,"src":"2282:147:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":543,"nodeType":"Block","src":"2537:114:2","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"$","nameLocation":"2568:1:2","nodeType":"VariableDeclaration","scope":543,"src":"2547:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":526,"nodeType":"UserDefinedTypeName","pathNode":{"id":525,"name":"ERC20Storage","nameLocations":["2547:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"2547:12:2"},"referencedDeclaration":489,"src":"2547:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":528,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2572:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2572:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2547:43:2"},{"expression":{"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":531,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2600:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2602:5:2","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":486,"src":"2600:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":534,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2610:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2600:15:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":536,"nodeType":"ExpressionStatement","src":"2600:15:2"},{"expression":{"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":537,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2625:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2627:7:2","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":488,"src":"2625:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":540,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2637:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2625:19:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":542,"nodeType":"ExpressionStatement","src":"2625:19:2"}]},"id":544,"implemented":true,"kind":"function","modifiers":[{"id":523,"kind":"modifierInvocation","modifierName":{"id":522,"name":"onlyInitializing","nameLocations":["2520:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2520:16:2"},"nodeType":"ModifierInvocation","src":"2520:16:2"}],"name":"__ERC20_init_unchained","nameLocation":"2444:22:2","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"name_","nameLocation":"2481:5:2","nodeType":"VariableDeclaration","scope":544,"src":"2467:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":517,"name":"string","nodeType":"ElementaryTypeName","src":"2467:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"symbol_","nameLocation":"2502:7:2","nodeType":"VariableDeclaration","scope":544,"src":"2488:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":519,"name":"string","nodeType":"ElementaryTypeName","src":"2488:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2466:44:2"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"2537:0:2"},"scope":1065,"src":"2435:216:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1468],"body":{"id":559,"nodeType":"Block","src":"2776:84:2","statements":[{"assignments":[552],"declarations":[{"constant":false,"id":552,"mutability":"mutable","name":"$","nameLocation":"2807:1:2","nodeType":"VariableDeclaration","scope":559,"src":"2786:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":551,"nodeType":"UserDefinedTypeName","pathNode":{"id":550,"name":"ERC20Storage","nameLocations":["2786:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"2786:12:2"},"referencedDeclaration":489,"src":"2786:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":555,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":553,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2811:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2786:43:2"},{"expression":{"expression":{"id":556,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2846:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2848:5:2","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":486,"src":"2846:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":549,"id":558,"nodeType":"Return","src":"2839:14:2"}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"2657:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":560,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2725:4:2","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"2729:2:2"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":560,"src":"2761:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":547,"name":"string","nodeType":"ElementaryTypeName","src":"2761:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2760:15:2"},"scope":1065,"src":"2716:144:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1474],"body":{"id":575,"nodeType":"Block","src":"3035:86:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"$","nameLocation":"3066:1:2","nodeType":"VariableDeclaration","scope":575,"src":"3045:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":567,"nodeType":"UserDefinedTypeName","pathNode":{"id":566,"name":"ERC20Storage","nameLocations":["3045:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"3045:12:2"},"referencedDeclaration":489,"src":"3045:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3070:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3045:43:2"},{"expression":{"expression":{"id":572,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"3105:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3107:7:2","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":488,"src":"3105:9:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":565,"id":574,"nodeType":"Return","src":"3098:16:2"}]},"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"2866:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":576,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2982:6:2","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"2988:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"3020:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":563,"name":"string","nodeType":"ElementaryTypeName","src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3019:15:2"},"scope":1065,"src":"2973:148:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1480],"body":{"id":584,"nodeType":"Block","src":"3810:26:2","statements":[{"expression":{"hexValue":"3138","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3827:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":581,"id":583,"nodeType":"Return","src":"3820:9:2"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"3127:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":585,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3763:8:2","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"3771:2:2"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"3803:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":579,"name":"uint8","nodeType":"ElementaryTypeName","src":"3803:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3802:7:2"},"scope":1065,"src":"3754:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1404],"body":{"id":600,"nodeType":"Block","src":"3957:91:2","statements":[{"assignments":[593],"declarations":[{"constant":false,"id":593,"mutability":"mutable","name":"$","nameLocation":"3988:1:2","nodeType":"VariableDeclaration","scope":600,"src":"3967:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":592,"nodeType":"UserDefinedTypeName","pathNode":{"id":591,"name":"ERC20Storage","nameLocations":["3967:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"3967:12:2"},"referencedDeclaration":489,"src":"3967:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":596,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":594,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3992:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3992:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3967:43:2"},{"expression":{"expression":{"id":597,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"4027:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4029:12:2","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":484,"src":"4027:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":590,"id":599,"nodeType":"Return","src":"4020:21:2"}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"3842:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3905:11:2","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"3916:2:2"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"3948:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"3948:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3947:9:2"},"scope":1065,"src":"3896:152:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1412],"body":{"id":620,"nodeType":"Block","src":"4180:97:2","statements":[{"assignments":[611],"declarations":[{"constant":false,"id":611,"mutability":"mutable","name":"$","nameLocation":"4211:1:2","nodeType":"VariableDeclaration","scope":620,"src":"4190:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":610,"nodeType":"UserDefinedTypeName","pathNode":{"id":609,"name":"ERC20Storage","nameLocations":["4190:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"4190:12:2"},"referencedDeclaration":489,"src":"4190:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":614,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":612,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4215:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4190:43:2"},{"expression":{"baseExpression":{"expression":{"id":615,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"4250:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4252:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":476,"src":"4250:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":618,"indexExpression":{"id":617,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4262:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4250:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":608,"id":619,"nodeType":"Return","src":"4243:27:2"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4054:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":621,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4115:9:2","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"account","nameLocation":"4133:7:2","nodeType":"VariableDeclaration","scope":621,"src":"4125:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4125:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4124:17:2"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"4171:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4170:9:2"},"scope":1065,"src":"4106:171:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1422],"body":{"id":644,"nodeType":"Block","src":"4547:103:2","statements":[{"assignments":[632],"declarations":[{"constant":false,"id":632,"mutability":"mutable","name":"owner","nameLocation":"4565:5:2","nodeType":"VariableDeclaration","scope":644,"src":"4557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"4557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":635,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":633,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"4573:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4573:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4557:28:2"},{"expression":{"arguments":[{"id":637,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4605:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4612:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"4616:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":636,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"4595:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"4595:27:2"},{"expression":{"hexValue":"74727565","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4639:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":630,"id":643,"nodeType":"Return","src":"4632:11:2"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"4283:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":645,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4481:8:2","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"4498:2:2","nodeType":"VariableDeclaration","scope":645,"src":"4490:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"value","nameLocation":"4510:5:2","nodeType":"VariableDeclaration","scope":645,"src":"4502:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4502:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:27:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"4541:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"4541:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4540:6:2"},"scope":1065,"src":"4472:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1432],"body":{"id":668,"nodeType":"Block","src":"4797:106:2","statements":[{"assignments":[657],"declarations":[{"constant":false,"id":657,"mutability":"mutable","name":"$","nameLocation":"4828:1:2","nodeType":"VariableDeclaration","scope":668,"src":"4807:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":656,"nodeType":"UserDefinedTypeName","pathNode":{"id":655,"name":"ERC20Storage","nameLocations":["4807:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"4807:12:2"},"referencedDeclaration":489,"src":"4807:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":660,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":658,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4832:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4832:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4807:43:2"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":661,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"4867:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4869:11:2","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":482,"src":"4867:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":664,"indexExpression":{"id":663,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"4881:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4867:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":666,"indexExpression":{"id":665,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4888:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4867:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":654,"id":667,"nodeType":"Return","src":"4860:36:2"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"4656:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":669,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4717:9:2","nodeType":"FunctionDefinition","parameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"owner","nameLocation":"4735:5:2","nodeType":"VariableDeclaration","scope":669,"src":"4727:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"4727:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"spender","nameLocation":"4750:7:2","nodeType":"VariableDeclaration","scope":669,"src":"4742:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"4742:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4726:32:2"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":669,"src":"4788:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"4788:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4787:9:2"},"scope":1065,"src":"4708:195:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1442],"body":{"id":692,"nodeType":"Block","src":"5289:107:2","statements":[{"assignments":[680],"declarations":[{"constant":false,"id":680,"mutability":"mutable","name":"owner","nameLocation":"5307:5:2","nodeType":"VariableDeclaration","scope":692,"src":"5299:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"5299:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":683,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":681,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"5315:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5299:28:2"},{"expression":{"arguments":[{"id":685,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5346:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":686,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"5353:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5362:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":684,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[948,1016],"referencedDeclaration":948,"src":"5337:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5337:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"ExpressionStatement","src":"5337:31:2"},{"expression":{"hexValue":"74727565","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5385:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":678,"id":691,"nodeType":"Return","src":"5378:11:2"}]},"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"4909:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":693,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5219:7:2","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"spender","nameLocation":"5235:7:2","nodeType":"VariableDeclaration","scope":693,"src":"5227:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"5227:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"value","nameLocation":"5252:5:2","nodeType":"VariableDeclaration","scope":693,"src":"5244:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5244:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5226:32:2"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"5283:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":676,"name":"bool","nodeType":"ElementaryTypeName","src":"5283:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5282:6:2"},"scope":1065,"src":"5210:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1454],"body":{"id":724,"nodeType":"Block","src":"6081:151:2","statements":[{"assignments":[706],"declarations":[{"constant":false,"id":706,"mutability":"mutable","name":"spender","nameLocation":"6099:7:2","nodeType":"VariableDeclaration","scope":724,"src":"6091:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"6091:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":709,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":707,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"6109:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6109:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6091:30:2"},{"expression":{"arguments":[{"id":711,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"6147:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":712,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6153:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6162:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":710,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"6131:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"6131:37:2"},{"expression":{"arguments":[{"id":717,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"6188:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6194:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6198:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":716,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"6178:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6178:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":721,"nodeType":"ExpressionStatement","src":"6178:26:2"},{"expression":{"hexValue":"74727565","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6221:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":704,"id":723,"nodeType":"Return","src":"6214:11:2"}]},"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"5402:581:2","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":725,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5997:12:2","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"from","nameLocation":"6018:4:2","nodeType":"VariableDeclaration","scope":725,"src":"6010:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"6010:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"to","nameLocation":"6032:2:2","nodeType":"VariableDeclaration","scope":725,"src":"6024:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"6024:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"value","nameLocation":"6044:5:2","nodeType":"VariableDeclaration","scope":725,"src":"6036:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6009:41:2"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":725,"src":"6075:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":702,"name":"bool","nodeType":"ElementaryTypeName","src":"6075:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6074:6:2"},"scope":1065,"src":"5988:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":771,"nodeType":"Block","src":"6674:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":735,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6688:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6704:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6696:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"6696:7:2","typeDescriptions":{}}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6696:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6688:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":749,"nodeType":"IfStatement","src":"6684:86:2","trueBody":{"id":748,"nodeType":"Block","src":"6708:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6756:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6748:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"6748:7:2","typeDescriptions":{}}},"id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6748:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":741,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"6729:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6729:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":747,"nodeType":"RevertStatement","src":"6722:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6783:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6797:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6789:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"6789:7:2","typeDescriptions":{}}},"id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6789:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6783:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"IfStatement","src":"6779:86:2","trueBody":{"id":763,"nodeType":"Block","src":"6801:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6851:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6843:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"6843:7:2","typeDescriptions":{}}},"id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6843:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":756,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"6822:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6822:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":762,"nodeType":"RevertStatement","src":"6815:39:2"}]}},{"expression":{"arguments":[{"id":766,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6882:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":767,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6888:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6892:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":765,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"6874:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6874:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":770,"nodeType":"ExpressionStatement","src":"6874:24:2"}]},"documentation":{"id":726,"nodeType":"StructuredDocumentation","src":"6238:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":772,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6614:9:2","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"from","nameLocation":"6632:4:2","nodeType":"VariableDeclaration","scope":772,"src":"6624:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"6624:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"to","nameLocation":"6646:2:2","nodeType":"VariableDeclaration","scope":772,"src":"6638:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"6638:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"value","nameLocation":"6658:5:2","nodeType":"VariableDeclaration","scope":772,"src":"6650:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"6650:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6623:41:2"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[],"src":"6674:0:2"},"scope":1065,"src":"6605:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":863,"nodeType":"Block","src":"7295:1095:2","statements":[{"assignments":[784],"declarations":[{"constant":false,"id":784,"mutability":"mutable","name":"$","nameLocation":"7326:1:2","nodeType":"VariableDeclaration","scope":863,"src":"7305:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":783,"nodeType":"UserDefinedTypeName","pathNode":{"id":782,"name":"ERC20Storage","nameLocations":["7305:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"7305:12:2"},"referencedDeclaration":489,"src":"7305:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":787,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":785,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"7330:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7330:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7305:43:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7362:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7378:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7370:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"7370:7:2","typeDescriptions":{}}},"id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7370:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7362:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":830,"nodeType":"Block","src":"7538:366:2","statements":[{"assignments":[802],"declarations":[{"constant":false,"id":802,"mutability":"mutable","name":"fromBalance","nameLocation":"7560:11:2","nodeType":"VariableDeclaration","scope":830,"src":"7552:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"7552:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":807,"initialValue":{"baseExpression":{"expression":{"id":803,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"7574:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7576:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":476,"src":"7574:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":806,"indexExpression":{"id":805,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7586:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7574:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7552:39:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":808,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"7609:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7623:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7609:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":818,"nodeType":"IfStatement","src":"7605:115:2","trueBody":{"id":817,"nodeType":"Block","src":"7630:90:2","statements":[{"errorCall":{"arguments":[{"id":812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7680:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"7686:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7699:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":811,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"7655:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7655:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":816,"nodeType":"RevertStatement","src":"7648:57:2"}]}},{"id":829,"nodeType":"UncheckedBlock","src":"7733:161:2","statements":[{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":819,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"7840:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7842:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":476,"src":"7840:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":823,"indexExpression":{"id":821,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7852:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7840:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"7860:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7874:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7840:39:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":828,"nodeType":"ExpressionStatement","src":"7840:39:2"}]}]},"id":831,"nodeType":"IfStatement","src":"7358:546:2","trueBody":{"id":800,"nodeType":"Block","src":"7382:150:2","statements":[{"expression":{"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":794,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"7498:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7500:12:2","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":484,"src":"7498:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7516:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7498:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":799,"nodeType":"ExpressionStatement","src":"7498:23:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":832,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"7918:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7932:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7924:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"7924:7:2","typeDescriptions":{}}},"id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7924:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7918:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":855,"nodeType":"Block","src":"8135:208:2","statements":[{"id":854,"nodeType":"UncheckedBlock","src":"8149:184:2","statements":[{"expression":{"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":846,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"8294:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8296:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":476,"src":"8294:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":850,"indexExpression":{"id":848,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8306:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8294:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"8313:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8294:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":853,"nodeType":"ExpressionStatement","src":"8294:24:2"}]}]},"id":856,"nodeType":"IfStatement","src":"7914:429:2","trueBody":{"id":845,"nodeType":"Block","src":"7936:193:2","statements":[{"id":844,"nodeType":"UncheckedBlock","src":"7950:169:2","statements":[{"expression":{"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":838,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"8081:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8083:12:2","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":484,"src":"8081:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"8099:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8081:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":843,"nodeType":"ExpressionStatement","src":"8081:23:2"}]}]}},{"eventCall":{"arguments":[{"id":858,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"8367:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8373:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"8377:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":857,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"8358:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8358:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":862,"nodeType":"EmitStatement","src":"8353:30:2"}]},"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"6911:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":864,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7229:7:2","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"from","nameLocation":"7245:4:2","nodeType":"VariableDeclaration","scope":864,"src":"7237:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"7237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":777,"mutability":"mutable","name":"to","nameLocation":"7259:2:2","nodeType":"VariableDeclaration","scope":864,"src":"7251:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"7251:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"value","nameLocation":"7271:5:2","nodeType":"VariableDeclaration","scope":864,"src":"7263:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"7263:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7236:41:2"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"7295:0:2"},"scope":1065,"src":"7220:1170:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":896,"nodeType":"Block","src":"8789:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":872,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8803:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8822:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8814:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"8814:7:2","typeDescriptions":{}}},"id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8814:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8803:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":886,"nodeType":"IfStatement","src":"8799:91:2","trueBody":{"id":885,"nodeType":"Block","src":"8826:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8876:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8868:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"8868:7:2","typeDescriptions":{}}},"id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8868:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":878,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"8847:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8847:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":884,"nodeType":"RevertStatement","src":"8840:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8907:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:2","typeDescriptions":{}}},"id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8907:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8919:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"8928:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":887,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"8899:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8899:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"8899:35:2"}]},"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"8396:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":897,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8742:5:2","nodeType":"FunctionDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"account","nameLocation":"8756:7:2","nodeType":"VariableDeclaration","scope":897,"src":"8748:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"8748:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"value","nameLocation":"8773:5:2","nodeType":"VariableDeclaration","scope":897,"src":"8765:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"8765:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8747:32:2"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"8789:0:2"},"scope":1065,"src":"8733:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":929,"nodeType":"Block","src":"9315:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"9329:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9348:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9340:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"9340:7:2","typeDescriptions":{}}},"id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9340:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9329:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":919,"nodeType":"IfStatement","src":"9325:89:2","trueBody":{"id":918,"nodeType":"Block","src":"9352:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9400:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9392:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":912,"name":"address","nodeType":"ElementaryTypeName","src":"9392:7:2","typeDescriptions":{}}},"id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":911,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9373:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9373:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":917,"nodeType":"RevertStatement","src":"9366:37:2"}]}},{"expression":{"arguments":[{"id":921,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"9431:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9448:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9440:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"9440:7:2","typeDescriptions":{}}},"id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9440:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"9452:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":920,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"9423:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9423:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"9423:35:2"}]},"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"8947:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":930,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9268:5:2","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"account","nameLocation":"9282:7:2","nodeType":"VariableDeclaration","scope":930,"src":"9274:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"9274:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"value","nameLocation":"9299:5:2","nodeType":"VariableDeclaration","scope":930,"src":"9291:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"9291:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9273:32:2"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"9315:0:2"},"scope":1065,"src":"9259:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":947,"nodeType":"Block","src":"10075:54:2","statements":[{"expression":{"arguments":[{"id":941,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"10094:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":942,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"10101:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"10110:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10117:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":940,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[948,1016],"referencedDeclaration":1016,"src":"10085:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":946,"nodeType":"ExpressionStatement","src":"10085:37:2"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"9471:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":948,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10010:8:2","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"owner","nameLocation":"10027:5:2","nodeType":"VariableDeclaration","scope":948,"src":"10019:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"10019:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"spender","nameLocation":"10042:7:2","nodeType":"VariableDeclaration","scope":948,"src":"10034:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"10034:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"value","nameLocation":"10059:5:2","nodeType":"VariableDeclaration","scope":948,"src":"10051:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"10051:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10018:47:2"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[],"src":"10075:0:2"},"scope":1065,"src":"10001:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1015,"nodeType":"Block","src":"11074:389:2","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"$","nameLocation":"11105:1:2","nodeType":"VariableDeclaration","scope":1015,"src":"11084:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":961,"nodeType":"UserDefinedTypeName","pathNode":{"id":960,"name":"ERC20Storage","nameLocations":["11084:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":489,"src":"11084:12:2"},"referencedDeclaration":489,"src":"11084:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":965,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":963,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"11109:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11109:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11084:43:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":966,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"11141:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11158:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11150:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"11150:7:2","typeDescriptions":{}}},"id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11150:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11141:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":980,"nodeType":"IfStatement","src":"11137:89:2","trueBody":{"id":979,"nodeType":"Block","src":"11162:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11212:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11204:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"11204:7:2","typeDescriptions":{}}},"id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11204:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":972,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"11183:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":978,"nodeType":"RevertStatement","src":"11176:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":981,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"11239:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11250:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":982,"name":"address","nodeType":"ElementaryTypeName","src":"11250:7:2","typeDescriptions":{}}},"id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11250:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11239:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":995,"nodeType":"IfStatement","src":"11235:90:2","trueBody":{"id":994,"nodeType":"Block","src":"11262:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11311:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11303:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"11303:7:2","typeDescriptions":{}}},"id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11303:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":987,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"11283:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11283:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":993,"nodeType":"RevertStatement","src":"11276:38:2"}]}},{"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":996,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"11334:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$489_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11336:11:2","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":482,"src":"11334:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1001,"indexExpression":{"id":998,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"11348:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11334:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1002,"indexExpression":{"id":999,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"11355:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11334:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"11366:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11334:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1005,"nodeType":"ExpressionStatement","src":"11334:37:2"},{"condition":{"id":1006,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"11385:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1014,"nodeType":"IfStatement","src":"11381:76:2","trueBody":{"id":1013,"nodeType":"Block","src":"11396:61:2","statements":[{"eventCall":{"arguments":[{"id":1008,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"11424:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1009,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"11431:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"11440:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1007,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"11415:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11415:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"EmitStatement","src":"11410:36:2"}]}}]},"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"10135:836:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1016,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10985:8:2","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"owner","nameLocation":"11002:5:2","nodeType":"VariableDeclaration","scope":1016,"src":"10994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"10994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"spender","nameLocation":"11017:7:2","nodeType":"VariableDeclaration","scope":1016,"src":"11009:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"11009:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"value","nameLocation":"11034:5:2","nodeType":"VariableDeclaration","scope":1016,"src":"11026:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"11026:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"emitEvent","nameLocation":"11046:9:2","nodeType":"VariableDeclaration","scope":1016,"src":"11041:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":956,"name":"bool","nodeType":"ElementaryTypeName","src":"11041:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10993:63:2"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[],"src":"11074:0:2"},"scope":1065,"src":"10976:487:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1063,"nodeType":"Block","src":"11834:387:2","statements":[{"assignments":[1027],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"currentAllowance","nameLocation":"11852:16:2","nodeType":"VariableDeclaration","scope":1063,"src":"11844:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1032,"initialValue":{"arguments":[{"id":1029,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"11881:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1030,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"11888:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1028,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"11871:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11871:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11844:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"11910:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"11934:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1034,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11929:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11943:3:2","memberName":"max","nodeType":"MemberAccess","src":"11929:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11910:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1062,"nodeType":"IfStatement","src":"11906:309:2","trueBody":{"id":1061,"nodeType":"Block","src":"11948:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1040,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"11966:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"11985:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11966:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1050,"nodeType":"IfStatement","src":"11962:130:2","trueBody":{"id":1049,"nodeType":"Block","src":"11992:100:2","statements":[{"errorCall":{"arguments":[{"id":1044,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"12044:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1045,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"12053:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12071:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1043,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"12017:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12017:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1048,"nodeType":"RevertStatement","src":"12010:67:2"}]}},{"id":1060,"nodeType":"UncheckedBlock","src":"12105:100:2","statements":[{"expression":{"arguments":[{"id":1052,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"12142:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"12149:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"12158:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"12177:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12158:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12184:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1051,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[948,1016],"referencedDeclaration":1016,"src":"12133:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12133:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1059,"nodeType":"ExpressionStatement","src":"12133:57:2"}]}]}}]},"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"11469:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1064,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11754:15:2","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"owner","nameLocation":"11778:5:2","nodeType":"VariableDeclaration","scope":1064,"src":"11770:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"11770:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"spender","nameLocation":"11793:7:2","nodeType":"VariableDeclaration","scope":1064,"src":"11785:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"11785:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"value","nameLocation":"11810:5:2","nodeType":"VariableDeclaration","scope":1064,"src":"11802:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"11802:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11769:47:2"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[],"src":"11834:0:2"},"scope":1065,"src":"11745:476:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1066,"src":"1281:10942:2","usedErrors":[211,214,1252,1257,1262,1271,1276,1281],"usedEvents":[219,1389,1398]}],"src":"105:12119:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1111],"Initializable":[448]},"id":1112,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1067,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1069,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1112,"sourceUnit":449,"src":"126:63:3","symbolAliases":[{"foreign":{"id":1068,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1071,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:3"},"id":1072,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1111,"linearizedBaseContracts":[1111,448],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":1077,"nodeType":"Block","src":"800:7:3","statements":[]},"id":1078,"implemented":true,"kind":"function","modifiers":[{"id":1075,"kind":"modifierInvocation","modifierName":{"id":1074,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":1111,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1083,"nodeType":"Block","src":"875:7:3","statements":[]},"id":1084,"implemented":true,"kind":"function","modifiers":[{"id":1081,"kind":"modifierInvocation","modifierName":{"id":1080,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":1111,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1092,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":1089,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1088,"id":1091,"nodeType":"Return","src":"959:17:3"}]},"id":1093,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1093,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":1111,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":1098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1097,"id":1100,"nodeType":"Return","src":"1066:15:3"}]},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1095,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":1111,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1109,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1106,"id":1108,"nodeType":"Return","src":"1176:8:3"}]},"id":1110,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":1111,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1112,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[448],"ReentrancyGuardUpgradeable":[1240]},"id":1241,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1113,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1241,"sourceUnit":449,"src":"134:63:4","symbolAliases":[{"foreign":{"id":1114,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"142:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1117,"name":"Initializable","nameLocations":["1142:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1142:13:4"},"id":1118,"nodeType":"InheritanceSpecifier","src":"1142:13:4"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"199:894:4","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1240,"linearizedBaseContracts":[1240,448],"name":"ReentrancyGuardUpgradeable","nameLocation":"1112:26:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1121,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1935:11:4","nodeType":"VariableDeclaration","scope":1240,"src":"1910:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1949:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1124,"mutability":"constant","name":"ENTERED","nameLocation":"1981:7:4","nodeType":"VariableDeclaration","scope":1240,"src":"1956:36:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1991:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1125,"nodeType":"StructuredDocumentation","src":"1999:73:4","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1128,"members":[{"constant":false,"id":1127,"mutability":"mutable","name":"_status","nameLocation":"2125:7:4","nodeType":"VariableDeclaration","scope":1128,"src":"2117:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"2084:22:4","nodeType":"StructDefinition","scope":1240,"src":"2077:62:4","visibility":"public"},{"constant":true,"id":1131,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2289:30:4","nodeType":"VariableDeclaration","scope":1240,"src":"2264:124:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2264:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2322:66:4","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1138,"nodeType":"Block","src":"2489:89:4","statements":[{"AST":{"nativeSrc":"2508:64:4","nodeType":"YulBlock","src":"2508:64:4","statements":[{"nativeSrc":"2522:40:4","nodeType":"YulAssignment","src":"2522:40:4","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2532:30:4","nodeType":"YulIdentifier","src":"2532:30:4"},"variableNames":[{"name":"$.slot","nativeSrc":"2522:6:4","nodeType":"YulIdentifier","src":"2522:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1135,"isOffset":false,"isSlot":true,"src":"2522:6:4","suffix":"slot","valueSize":1},{"declaration":1131,"isOffset":false,"isSlot":false,"src":"2532:30:4","valueSize":1}],"id":1137,"nodeType":"InlineAssembly","src":"2499:73:4"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2404:26:4","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"2430:2:4"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"$","nameLocation":"2486:1:4","nodeType":"VariableDeclaration","scope":1139,"src":"2455:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1134,"nodeType":"UserDefinedTypeName","pathNode":{"id":1133,"name":"ReentrancyGuardStorage","nameLocations":["2455:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"2455:22:4"},"referencedDeclaration":1128,"src":"2455:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2454:34:4"},"scope":1240,"src":"2395:183:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"2584:52:4","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1142,"name":"ReentrancyGuardReentrantCall","nameLocation":"2647:28:4","nodeType":"ErrorDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"2675:2:4"},"src":"2641:37:4"},{"body":{"id":1150,"nodeType":"Block","src":"2744:51:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1147,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2754:32:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"2754:34:4"}]},"id":1151,"implemented":true,"kind":"function","modifiers":[{"id":1145,"kind":"modifierInvocation","modifierName":{"id":1144,"name":"onlyInitializing","nameLocations":["2727:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2727:16:4"},"nodeType":"ModifierInvocation","src":"2727:16:4"}],"name":"__ReentrancyGuard_init","nameLocation":"2693:22:4","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[],"src":"2715:2:4"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"2744:0:4"},"scope":1240,"src":"2684:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1168,"nodeType":"Block","src":"2871:113:4","statements":[{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"$","nameLocation":"2912:1:4","nodeType":"VariableDeclaration","scope":1168,"src":"2881:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1157,"nodeType":"UserDefinedTypeName","pathNode":{"id":1156,"name":"ReentrancyGuardStorage","nameLocations":["2881:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"2881:22:4"},"referencedDeclaration":1128,"src":"2881:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1161,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1159,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"2916:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1128_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2881:63:4"},{"expression":{"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1162,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"2954:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2956:7:4","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1127,"src":"2954:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1165,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2966:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2954:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1167,"nodeType":"ExpressionStatement","src":"2954:23:4"}]},"id":1169,"implemented":true,"kind":"function","modifiers":[{"id":1154,"kind":"modifierInvocation","modifierName":{"id":1153,"name":"onlyInitializing","nameLocations":["2854:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2854:16:4"},"nodeType":"ModifierInvocation","src":"2854:16:4"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2810:32:4","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[],"src":"2842:2:4"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"2871:0:4"},"scope":1240,"src":"2801:183:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1179,"nodeType":"Block","src":"3385:79:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1172,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"3395:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1174,"nodeType":"ExpressionStatement","src":"3395:21:4"},{"id":1175,"nodeType":"PlaceholderStatement","src":"3426:1:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1176,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"3437:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1178,"nodeType":"ExpressionStatement","src":"3437:20:4"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"2990:366:4","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1180,"name":"nonReentrant","nameLocation":"3370:12:4","nodeType":"ModifierDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"3382:2:4"},"src":"3361:103:4","virtual":false,"visibility":"internal"},{"body":{"id":1204,"nodeType":"Block","src":"3509:345:4","statements":[{"assignments":[1185],"declarations":[{"constant":false,"id":1185,"mutability":"mutable","name":"$","nameLocation":"3550:1:4","nodeType":"VariableDeclaration","scope":1204,"src":"3519:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1184,"nodeType":"UserDefinedTypeName","pathNode":{"id":1183,"name":"ReentrancyGuardStorage","nameLocations":["3519:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"3519:22:4"},"referencedDeclaration":1128,"src":"3519:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1188,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1186,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3554:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1128_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3519:63:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1189,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"3670:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3672:7:4","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1127,"src":"3670:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1191,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3683:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3670:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1197,"nodeType":"IfStatement","src":"3666:88:4","trueBody":{"id":1196,"nodeType":"Block","src":"3692:62:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1193,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"3713:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1195,"nodeType":"RevertStatement","src":"3706:37:4"}]}},{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1198,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"3828:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3830:7:4","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1127,"src":"3828:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1201,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3840:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3828:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1203,"nodeType":"ExpressionStatement","src":"3828:19:4"}]},"id":1205,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3479:19:4","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[],"src":"3498:2:4"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[],"src":"3509:0:4"},"scope":1240,"src":"3470:384:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1220,"nodeType":"Block","src":"3898:245:4","statements":[{"assignments":[1210],"declarations":[{"constant":false,"id":1210,"mutability":"mutable","name":"$","nameLocation":"3939:1:4","nodeType":"VariableDeclaration","scope":1220,"src":"3908:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1209,"nodeType":"UserDefinedTypeName","pathNode":{"id":1208,"name":"ReentrancyGuardStorage","nameLocations":["3908:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"3908:22:4"},"referencedDeclaration":1128,"src":"3908:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1211,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3943:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1128_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3908:63:4"},{"expression":{"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1214,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"4113:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4115:7:4","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1127,"src":"4113:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1217,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"4125:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4113:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1219,"nodeType":"ExpressionStatement","src":"4113:23:4"}]},"id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3869:18:4","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[],"src":"3887:2:4"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"3898:0:4"},"scope":1240,"src":"3860:283:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1238,"nodeType":"Block","src":"4386:117:4","statements":[{"assignments":[1229],"declarations":[{"constant":false,"id":1229,"mutability":"mutable","name":"$","nameLocation":"4427:1:4","nodeType":"VariableDeclaration","scope":1238,"src":"4396:32:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1228,"nodeType":"UserDefinedTypeName","pathNode":{"id":1227,"name":"ReentrancyGuardStorage","nameLocations":["4396:22:4"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"4396:22:4"},"referencedDeclaration":1128,"src":"4396:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1232,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1230,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"4431:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1128_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4396:63:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1233,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"4476:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1128_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4478:7:4","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1127,"src":"4476:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1235,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"4489:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4476:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1226,"id":1237,"nodeType":"Return","src":"4469:27:4"}]},"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"4149:168:4","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1239,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4331:23:4","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[],"src":"4354:2:4"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1239,"src":"4380:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1224,"name":"bool","nodeType":"ElementaryTypeName","src":"4380:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4379:6:4"},"scope":1240,"src":"4322:181:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1241,"src":"1094:3411:4","usedErrors":[211,214,1142],"usedEvents":[219]}],"src":"109:4397:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1377],"IERC20Errors":[1282],"IERC721Errors":[1330]},"id":1378,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1242,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":1282,"linearizedBaseContracts":[1282],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1252,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":1252,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":1252,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":1252,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1257,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":1257,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1262,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":1262,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1271,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":1271,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":1271,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":1271,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1276,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":1276,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1281,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":1281,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":1378,"src":"280:1764:5","usedErrors":[1252,1257,1262,1271,1276,1281],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":1330,"linearizedBaseContracts":[1330],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1288,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":1288,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1293,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":1293,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1302,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":1302,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":1302,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":1302,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1307,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":1307,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1312,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":1312,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1319,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":1319,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":1319,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1324,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":1324,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1329,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":1329,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":1378,"src":"2190:2092:5","usedErrors":[1288,1293,1302,1307,1312,1319,1324,1329],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":1377,"linearizedBaseContracts":[1377],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1342,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":1342,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":1342,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":1342,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":1342,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1347,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":1347,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1352,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":1352,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1359,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":1359,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":1359,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1364,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":1364,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1369,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":1369,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1376,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":1376,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":1376,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":1378,"src":"4430:2107:5","usedErrors":[1342,1347,1352,1359,1364,1369,1376],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1455]},"id":1456,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1379,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"132:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1455,"linearizedBaseContracts":[1455],"name":"IERC20","nameLocation":"214:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"227:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1389,"name":"Transfer","nameLocation":"396:8:6","nodeType":"EventDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:6","nodeType":"VariableDeclaration","scope":1389,"src":"405:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:6","nodeType":"VariableDeclaration","scope":1389,"src":"427:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:6","nodeType":"VariableDeclaration","scope":1389,"src":"447:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:6"},"src":"390:72:6"},{"anonymous":false,"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"468:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1398,"name":"Approval","nameLocation":"627:8:6","nodeType":"EventDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:6","nodeType":"VariableDeclaration","scope":1398,"src":"636:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:6","nodeType":"VariableDeclaration","scope":1398,"src":"659:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:6","nodeType":"VariableDeclaration","scope":1398,"src":"684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:6"},"src":"621:78:6"},{"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"705:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1404,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:6","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"795:2:6"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1404,"src":"821:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:6"},"scope":1455,"src":"775:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"836:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1412,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":1412,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1412,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":1455,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"986:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1422,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:6","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"to","nameLocation":"1230:2:6","nodeType":"VariableDeclaration","scope":1422,"src":"1222:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"value","nameLocation":"1242:5:6","nodeType":"VariableDeclaration","scope":1422,"src":"1234:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:6"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1422,"src":"1267:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1419,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:6"},"scope":1455,"src":"1204:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"1279:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1432,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:6","nodeType":"FunctionDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"owner","nameLocation":"1575:5:6","nodeType":"VariableDeclaration","scope":1432,"src":"1567:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"spender","nameLocation":"1590:7:6","nodeType":"VariableDeclaration","scope":1432,"src":"1582:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:6"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1432,"src":"1622:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:6"},"scope":1455,"src":"1548:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"1637:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1442,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:6","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"spender","nameLocation":"2334:7:6","nodeType":"VariableDeclaration","scope":1442,"src":"2326:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"value","nameLocation":"2351:5:6","nodeType":"VariableDeclaration","scope":1442,"src":"2343:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:6"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1442,"src":"2376:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1439,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:6"},"scope":1455,"src":"2309:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"2388:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1454,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:6","nodeType":"FunctionDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"from","nameLocation":"2720:4:6","nodeType":"VariableDeclaration","scope":1454,"src":"2712:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"to","nameLocation":"2734:2:6","nodeType":"VariableDeclaration","scope":1454,"src":"2726:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"value","nameLocation":"2746:5:6","nodeType":"VariableDeclaration","scope":1454,"src":"2738:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:6"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1454,"src":"2771:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1451,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:6"},"scope":1455,"src":"2690:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1456,"src":"204:2575:6","usedErrors":[],"usedEvents":[1389,1398]}],"src":"106:2674:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1455],"IERC20Metadata":[1481]},"id":1482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1457,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":1456,"src":"151:37:7","symbolAliases":[{"foreign":{"id":1458,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1461,"name":"IERC20","nameLocations":["306:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"306:6:7"},"id":1462,"nodeType":"InheritanceSpecifier","src":"306:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"190:87:7","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1481,"linearizedBaseContracts":[1481,1455],"name":"IERC20Metadata","nameLocation":"288:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"319:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1468,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:7","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[],"src":"391:2:7"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1468,"src":"417:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1465,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:7"},"scope":1481,"src":"378:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"438:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1474,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:7","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[],"src":"514:2:7"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1474,"src":"540:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1471,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:7"},"scope":1481,"src":"499:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"561:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1480,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:7","nodeType":"FunctionDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[],"src":"648:2:7"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1480,"src":"674:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1477,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:7"},"scope":1481,"src":"631:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1482,"src":"278:405:7","usedErrors":[],"usedEvents":[1389,1398]}],"src":"125:559:7"},"id":7},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1533]},"id":1534,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1483,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"125:489:8","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1533,"linearizedBaseContracts":[1533],"name":"Panic","nameLocation":"665:5:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"677:36:8","text":"@dev generic / unspecified error"},"id":1488,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:8","nodeType":"VariableDeclaration","scope":1533,"src":"718:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"764:37:8","text":"@dev used by the assert() builtin"},"id":1492,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:8","nodeType":"VariableDeclaration","scope":1533,"src":"806:39:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"851:41:8","text":"@dev arithmetic underflow or overflow"},"id":1496,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:8","nodeType":"VariableDeclaration","scope":1533,"src":"897:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:8","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"950:35:8","text":"@dev division or modulo by zero"},"id":1500,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:8","nodeType":"VariableDeclaration","scope":1533,"src":"990:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1501,"nodeType":"StructuredDocumentation","src":"1045:30:8","text":"@dev enum conversion error"},"id":1504,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:8","nodeType":"VariableDeclaration","scope":1533,"src":"1080:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:8","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"1140:36:8","text":"@dev invalid encoding in storage"},"id":1508,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:8","nodeType":"VariableDeclaration","scope":1533,"src":"1181:55:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"1242:24:8","text":"@dev empty array pop"},"id":1512,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:8","nodeType":"VariableDeclaration","scope":1533,"src":"1271:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:8","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"1325:35:8","text":"@dev array out of bounds access"},"id":1516,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:8","nodeType":"VariableDeclaration","scope":1533,"src":"1365:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"1423:65:8","text":"@dev resource error (too large allocation or too large array)"},"id":1520,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:8","nodeType":"VariableDeclaration","scope":1533,"src":"1493:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"1546:42:8","text":"@dev calling invalid internal function"},"id":1524,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:8","nodeType":"VariableDeclaration","scope":1533,"src":"1593:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:8","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1531,"nodeType":"Block","src":"1819:151:8","statements":[{"AST":{"nativeSrc":"1854:110:8","nodeType":"YulBlock","src":"1854:110:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:8","nodeType":"YulLiteral","src":"1875:4:8","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:8","nodeType":"YulLiteral","src":"1881:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:8","nodeType":"YulIdentifier","src":"1868:6:8"},"nativeSrc":"1868:24:8","nodeType":"YulFunctionCall","src":"1868:24:8"},"nativeSrc":"1868:24:8","nodeType":"YulExpressionStatement","src":"1868:24:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:8","nodeType":"YulLiteral","src":"1912:4:8","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:8","nodeType":"YulIdentifier","src":"1918:4:8"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:8","nodeType":"YulIdentifier","src":"1905:6:8"},"nativeSrc":"1905:18:8","nodeType":"YulFunctionCall","src":"1905:18:8"},"nativeSrc":"1905:18:8","nodeType":"YulExpressionStatement","src":"1905:18:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:8","nodeType":"YulLiteral","src":"1943:4:8","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:8","nodeType":"YulLiteral","src":"1949:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:8","nodeType":"YulIdentifier","src":"1936:6:8"},"nativeSrc":"1936:18:8","nodeType":"YulFunctionCall","src":"1936:18:8"},"nativeSrc":"1936:18:8","nodeType":"YulExpressionStatement","src":"1936:18:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1527,"isOffset":false,"isSlot":false,"src":"1918:4:8","valueSize":1}],"flags":["memory-safe"],"id":1530,"nodeType":"InlineAssembly","src":"1829:135:8"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"1658:113:8","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1532,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:8","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"code","nameLocation":"1799:4:8","nodeType":"VariableDeclaration","scope":1532,"src":"1791:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:8"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"1819:0:8"},"scope":1533,"src":"1776:194:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1534,"src":"657:1315:8","usedErrors":[],"usedEvents":[]}],"src":"99:1874:8"},"id":8},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4761],"SafeCast":[6526],"SignedMath":[6670],"Strings":[2733]},"id":2734,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1535,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2734,"sourceUnit":4762,"src":"127:37:9","symbolAliases":[{"foreign":{"id":1536,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"135:4:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2734,"sourceUnit":6527,"src":"165:45:9","symbolAliases":[{"foreign":{"id":1538,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"173:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2734,"sourceUnit":6671,"src":"211:49:9","symbolAliases":[{"foreign":{"id":1540,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"219:10:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"262:34:9","text":" @dev String operations."},"fullyImplemented":true,"id":2733,"linearizedBaseContracts":[2733],"name":"Strings","nameLocation":"305:7:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1544,"libraryName":{"id":1543,"name":"SafeCast","nameLocations":["325:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":6526,"src":"325:8:9"},"nodeType":"UsingForDirective","src":"319:21:9"},{"constant":true,"id":1547,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:9","nodeType":"VariableDeclaration","scope":2733,"src":"346:56:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1545,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1550,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:9","nodeType":"VariableDeclaration","scope":2733,"src":"408:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1548,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"457:81:9","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1557,"name":"StringsInsufficientHexLength","nameLocation":"549:28:9","nodeType":"ErrorDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"value","nameLocation":"586:5:9","nodeType":"VariableDeclaration","scope":1557,"src":"578:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"length","nameLocation":"601:6:9","nodeType":"VariableDeclaration","scope":1557,"src":"593:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:9"},"src":"543:66:9"},{"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"615:108:9","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1560,"name":"StringsInvalidChar","nameLocation":"734:18:9","nodeType":"ErrorDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"752:2:9"},"src":"728:27:9"},{"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"761:84:9","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1563,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:9","nodeType":"ErrorDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"883:2:9"},"src":"850:36:9"},{"body":{"id":1610,"nodeType":"Block","src":"1058:561:9","statements":[{"id":1609,"nodeType":"UncheckedBlock","src":"1068:545:9","statements":[{"assignments":[1572],"declarations":[{"constant":false,"id":1572,"mutability":"mutable","name":"length","nameLocation":"1100:6:9","nodeType":"VariableDeclaration","scope":1609,"src":"1092:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1579,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1120:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1573,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"1109:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4761_$","typeString":"type(library Math)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:9","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4533,"src":"1109:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:9"},{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:9","nodeType":"VariableDeclaration","scope":1609,"src":"1144:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1580,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1586,"initialValue":{"arguments":[{"id":1584,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1178:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1582,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:9"},{"assignments":[1588],"declarations":[{"constant":false,"id":1588,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:9","nodeType":"VariableDeclaration","scope":1609,"src":"1199:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1589,"nodeType":"VariableDeclarationStatement","src":"1199:11:9"},{"AST":{"nativeSrc":"1249:67:9","nodeType":"YulBlock","src":"1249:67:9","statements":[{"nativeSrc":"1267:35:9","nodeType":"YulAssignment","src":"1267:35:9","value":{"arguments":[{"name":"buffer","nativeSrc":"1278:6:9","nodeType":"YulIdentifier","src":"1278:6:9"},{"arguments":[{"kind":"number","nativeSrc":"1290:2:9","nodeType":"YulLiteral","src":"1290:2:9","type":"","value":"32"},{"name":"length","nativeSrc":"1294:6:9","nodeType":"YulIdentifier","src":"1294:6:9"}],"functionName":{"name":"add","nativeSrc":"1286:3:9","nodeType":"YulIdentifier","src":"1286:3:9"},"nativeSrc":"1286:15:9","nodeType":"YulFunctionCall","src":"1286:15:9"}],"functionName":{"name":"add","nativeSrc":"1274:3:9","nodeType":"YulIdentifier","src":"1274:3:9"},"nativeSrc":"1274:28:9","nodeType":"YulFunctionCall","src":"1274:28:9"},"variableNames":[{"name":"ptr","nativeSrc":"1267:3:9","nodeType":"YulIdentifier","src":"1267:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1581,"isOffset":false,"isSlot":false,"src":"1278:6:9","valueSize":1},{"declaration":1572,"isOffset":false,"isSlot":false,"src":"1294:6:9","valueSize":1},{"declaration":1588,"isOffset":false,"isSlot":false,"src":"1267:3:9","valueSize":1}],"flags":["memory-safe"],"id":1590,"nodeType":"InlineAssembly","src":"1224:92:9"},{"body":{"id":1605,"nodeType":"Block","src":"1342:234:9","statements":[{"expression":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:9","subExpression":{"id":1592,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"1360:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1594,"nodeType":"ExpressionStatement","src":"1360:5:9"},{"AST":{"nativeSrc":"1408:86:9","nodeType":"YulBlock","src":"1408:86:9","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1438:3:9","nodeType":"YulIdentifier","src":"1438:3:9"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1452:5:9","nodeType":"YulIdentifier","src":"1452:5:9"},{"kind":"number","nativeSrc":"1459:2:9","nodeType":"YulLiteral","src":"1459:2:9","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1448:3:9","nodeType":"YulIdentifier","src":"1448:3:9"},"nativeSrc":"1448:14:9","nodeType":"YulFunctionCall","src":"1448:14:9"},{"name":"HEX_DIGITS","nativeSrc":"1464:10:9","nodeType":"YulIdentifier","src":"1464:10:9"}],"functionName":{"name":"byte","nativeSrc":"1443:4:9","nodeType":"YulIdentifier","src":"1443:4:9"},"nativeSrc":"1443:32:9","nodeType":"YulFunctionCall","src":"1443:32:9"}],"functionName":{"name":"mstore8","nativeSrc":"1430:7:9","nodeType":"YulIdentifier","src":"1430:7:9"},"nativeSrc":"1430:46:9","nodeType":"YulFunctionCall","src":"1430:46:9"},"nativeSrc":"1430:46:9","nodeType":"YulExpressionStatement","src":"1430:46:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1547,"isOffset":false,"isSlot":false,"src":"1464:10:9","valueSize":1},{"declaration":1588,"isOffset":false,"isSlot":false,"src":"1438:3:9","valueSize":1},{"declaration":1566,"isOffset":false,"isSlot":false,"src":"1452:5:9","valueSize":1}],"flags":["memory-safe"],"id":1595,"nodeType":"InlineAssembly","src":"1383:111:9"},{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1511:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ExpressionStatement","src":"1511:11:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1544:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1604,"nodeType":"IfStatement","src":"1540:21:9","trueBody":{"id":1603,"nodeType":"Break","src":"1556:5:9"}}]},"condition":{"hexValue":"74727565","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1606,"nodeType":"WhileStatement","src":"1329:247:9"},{"expression":{"id":1607,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"1596:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1570,"id":1608,"nodeType":"Return","src":"1589:13:9"}]}]},"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"892:90:9","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:9","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"value","nameLocation":"1013:5:9","nodeType":"VariableDeclaration","scope":1611,"src":"1005:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:9"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"1043:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1568,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:9"},"scope":2733,"src":"987:632:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"1795:92:9","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1826:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:9","trueExpression":{"hexValue":"2d","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1872:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1629,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"1857:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6670_$","typeString":"type(library SignedMath)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:9","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6669,"src":"1857:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"1848:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1619,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:9","typeDescriptions":{}}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:9","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1618,"id":1635,"nodeType":"Return","src":"1805:75:9"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"1625:89:9","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:9","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"value","nameLocation":"1750:5:9","nodeType":"VariableDeclaration","scope":1637,"src":"1743:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1613,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:9"},"returnParameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"1780:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1616,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:9"},"scope":2733,"src":"1719:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"2066:100:9","statements":[{"id":1655,"nodeType":"UncheckedBlock","src":"2076:84:9","statements":[{"expression":{"arguments":[{"id":1646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"2119:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"2138:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1647,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"2126:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4761_$","typeString":"type(library Math)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:9","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4704,"src":"2126:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1645,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1657,1740,1760],"referencedDeclaration":1740,"src":"2107:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1644,"id":1654,"nodeType":"Return","src":"2100:49:9"}]}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"1893:94:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:9","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"value","nameLocation":"2021:5:9","nodeType":"VariableDeclaration","scope":1657,"src":"2013:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:9"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"2051:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1642,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:9"},"scope":2733,"src":"1992:174:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"2379:435:9","statements":[{"assignments":[1668],"declarations":[{"constant":false,"id":1668,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:9","nodeType":"VariableDeclaration","scope":1739,"src":"2389:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1670,"initialValue":{"id":1669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2410:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:9"},{"assignments":[1672],"declarations":[{"constant":false,"id":1672,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:9","nodeType":"VariableDeclaration","scope":1739,"src":"2425:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1671,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1681,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1676,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2461:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:9"},{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1682,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2482:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1684,"indexExpression":{"hexValue":"30","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1687,"nodeType":"ExpressionStatement","src":"2482:15:9"},{"expression":{"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1688,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2507:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1690,"indexExpression":{"hexValue":"31","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1693,"nodeType":"ExpressionStatement","src":"2507:15:9"},{"body":{"id":1722,"nodeType":"Block","src":"2577:95:9","statements":[{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1708,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2591:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1710,"indexExpression":{"id":1709,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2598:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1711,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"2603:10:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1715,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2614:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1717,"nodeType":"ExpressionStatement","src":"2591:40:9"},{"expression":{"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1718,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2645:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1721,"nodeType":"ExpressionStatement","src":"2645:16:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2565:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1723,"initializationExpression":{"assignments":[1695],"declarations":[{"constant":false,"id":1695,"mutability":"mutable","name":"i","nameLocation":"2545:1:9","nodeType":"VariableDeclaration","scope":1723,"src":"2537:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1701,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1697,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2553:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:9","subExpression":{"id":1705,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2574:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1707,"nodeType":"ExpressionStatement","src":"2572:3:9"},"nodeType":"ForStatement","src":"2532:140:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1724,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2685:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1733,"nodeType":"IfStatement","src":"2681:96:9","trueBody":{"id":1732,"nodeType":"Block","src":"2702:75:9","statements":[{"errorCall":{"arguments":[{"id":1728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2752:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1729,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2759:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1727,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2723:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1731,"nodeType":"RevertStatement","src":"2716:50:9"}]}},{"expression":{"arguments":[{"id":1736,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2800:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1734,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:9","typeDescriptions":{}}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1666,"id":1738,"nodeType":"Return","src":"2786:21:9"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"2172:112:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:9","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"value","nameLocation":"2318:5:9","nodeType":"VariableDeclaration","scope":1740,"src":"2310:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"length","nameLocation":"2333:6:9","nodeType":"VariableDeclaration","scope":1740,"src":"2325:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:9"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1740,"src":"2364:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1664,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:9"},"scope":2733,"src":"2289:525:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1759,"nodeType":"Block","src":"3046:75:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1753,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"3091:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1751,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:9","typeDescriptions":{}}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:9","typeDescriptions":{}}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1756,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"3099:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1748,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1657,1740,1760],"referencedDeclaration":1740,"src":"3063:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1747,"id":1758,"nodeType":"Return","src":"3056:58:9"}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"2820:148:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:9","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"addr","nameLocation":"3002:4:9","nodeType":"VariableDeclaration","scope":1760,"src":"2994:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:9"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1760,"src":"3031:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:9"},"scope":2733,"src":"2973:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"3378:642:9","statements":[{"assignments":[1769],"declarations":[{"constant":false,"id":1769,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:9","nodeType":"VariableDeclaration","scope":1824,"src":"3388:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1768,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1776,"initialValue":{"arguments":[{"arguments":[{"id":1773,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3428:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1772,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1657,1740,1760],"referencedDeclaration":1760,"src":"3416:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1770,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:9","typeDescriptions":{}}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:9"},{"assignments":[1778],"declarations":[{"constant":false,"id":1778,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:9","nodeType":"VariableDeclaration","scope":1824,"src":"3519:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1779,"nodeType":"VariableDeclarationStatement","src":"3519:17:9"},{"AST":{"nativeSrc":"3571:78:9","nodeType":"YulBlock","src":"3571:78:9","statements":[{"nativeSrc":"3585:54:9","nodeType":"YulAssignment","src":"3585:54:9","value":{"arguments":[{"kind":"number","nativeSrc":"3602:2:9","nodeType":"YulLiteral","src":"3602:2:9","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3620:6:9","nodeType":"YulIdentifier","src":"3620:6:9"},{"kind":"number","nativeSrc":"3628:4:9","nodeType":"YulLiteral","src":"3628:4:9","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3616:3:9","nodeType":"YulIdentifier","src":"3616:3:9"},"nativeSrc":"3616:17:9","nodeType":"YulFunctionCall","src":"3616:17:9"},{"kind":"number","nativeSrc":"3635:2:9","nodeType":"YulLiteral","src":"3635:2:9","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3606:9:9","nodeType":"YulIdentifier","src":"3606:9:9"},"nativeSrc":"3606:32:9","nodeType":"YulFunctionCall","src":"3606:32:9"}],"functionName":{"name":"shr","nativeSrc":"3598:3:9","nodeType":"YulIdentifier","src":"3598:3:9"},"nativeSrc":"3598:41:9","nodeType":"YulFunctionCall","src":"3598:41:9"},"variableNames":[{"name":"hashValue","nativeSrc":"3585:9:9","nodeType":"YulIdentifier","src":"3585:9:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1769,"isOffset":false,"isSlot":false,"src":"3620:6:9","valueSize":1},{"declaration":1778,"isOffset":false,"isSlot":false,"src":"3585:9:9","valueSize":1}],"flags":["memory-safe"],"id":1780,"nodeType":"InlineAssembly","src":"3546:103:9"},{"body":{"id":1817,"nodeType":"Block","src":"3692:291:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"3798:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:9","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1798,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3827:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1800,"indexExpression":{"id":1799,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"3834:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1796,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:9","typeDescriptions":{}}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1812,"nodeType":"IfStatement","src":"3794:150:9","trueBody":{"id":1811,"nodeType":"Block","src":"3844:100:9","statements":[{"expression":{"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1805,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3912:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1807,"indexExpression":{"id":1806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"3919:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1810,"nodeType":"ExpressionStatement","src":"3912:17:9"}]}},{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1813,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"3957:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"nodeType":"ExpressionStatement","src":"3957:15:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"3680:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1818,"initializationExpression":{"assignments":[1782],"declarations":[{"constant":false,"id":1782,"mutability":"mutable","name":"i","nameLocation":"3672:1:9","nodeType":"VariableDeclaration","scope":1818,"src":"3664:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1784,"initialValue":{"hexValue":"3431","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:9","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:9","subExpression":{"id":1788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"3689:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1790,"nodeType":"ExpressionStatement","src":"3687:3:9"},"nodeType":"ForStatement","src":"3659:324:9"},{"expression":{"arguments":[{"id":1821,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"4006:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1819,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:9","typeDescriptions":{}}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1767,"id":1823,"nodeType":"Return","src":"3992:21:9"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"3127:165:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:9","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"addr","nameLocation":"3334:4:9","nodeType":"VariableDeclaration","scope":1825,"src":"3326:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:9"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1825,"src":"3363:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1765,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:9"},"scope":2733,"src":"3297:723:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1861,"nodeType":"Block","src":"4175:104:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"4198:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1835,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:9","typeDescriptions":{}}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:9","memberName":"length","nodeType":"MemberAccess","src":"4192:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1842,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"4217:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1840,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:9","typeDescriptions":{}}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:9","memberName":"length","nodeType":"MemberAccess","src":"4211:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"4246:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1847,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:9","typeDescriptions":{}}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1846,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"4269:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1853,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:9","typeDescriptions":{}}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1852,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1834,"id":1860,"nodeType":"Return","src":"4185:87:9"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"4026:66:9","text":" @dev Returns true if the two strings are equal."},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:9","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"a","nameLocation":"4126:1:9","nodeType":"VariableDeclaration","scope":1862,"src":"4112:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1827,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"b","nameLocation":"4143:1:9","nodeType":"VariableDeclaration","scope":1862,"src":"4129:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1829,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:9"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1862,"src":"4169:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1832,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:9"},"scope":2733,"src":"4097:182:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1880,"nodeType":"Block","src":"4576:64:9","statements":[{"expression":{"arguments":[{"id":1871,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4603:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1875,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4619:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1873,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:9","typeDescriptions":{}}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:9","memberName":"length","nodeType":"MemberAccess","src":"4613:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1870,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1881,1912],"referencedDeclaration":1912,"src":"4593:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1869,"id":1879,"nodeType":"Return","src":"4586:47:9"}]},"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"4285:214:9","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1881,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:9","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"input","nameLocation":"4537:5:9","nodeType":"VariableDeclaration","scope":1881,"src":"4523:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1864,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:9"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1881,"src":"4567:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:9"},"scope":2733,"src":"4504:136:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1911,"nodeType":"Block","src":"5038:153:9","statements":[{"assignments":[1894,1896],"declarations":[{"constant":false,"id":1894,"mutability":"mutable","name":"success","nameLocation":"5054:7:9","nodeType":"VariableDeclaration","scope":1911,"src":"5049:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1893,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"value","nameLocation":"5071:5:9","nodeType":"VariableDeclaration","scope":1911,"src":"5063:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1902,"initialValue":{"arguments":[{"id":1898,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"5093:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1899,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"5100:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1900,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"5107:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1897,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1933,1970],"referencedDeclaration":1970,"src":"5080:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:9"},{"condition":{"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:9","subExpression":{"id":1903,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"5126:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1908,"nodeType":"IfStatement","src":"5121:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1905,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"5142:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1907,"nodeType":"RevertStatement","src":"5135:27:9"}},{"expression":{"id":1909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"5179:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1892,"id":1910,"nodeType":"Return","src":"5172:12:9"}]},"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"4646:287:9","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:9","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"input","nameLocation":"4971:5:9","nodeType":"VariableDeclaration","scope":1912,"src":"4957:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1883,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"begin","nameLocation":"4986:5:9","nodeType":"VariableDeclaration","scope":1912,"src":"4978:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"end","nameLocation":"5001:3:9","nodeType":"VariableDeclaration","scope":1912,"src":"4993:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:9"},"returnParameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"5029:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:9"},"scope":2733,"src":"4938:253:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1932,"nodeType":"Block","src":"5512:83:9","statements":[{"expression":{"arguments":[{"id":1923,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5558:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1927,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5574:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1925,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:9","typeDescriptions":{}}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:9","memberName":"length","nodeType":"MemberAccess","src":"5568:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1922,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"5529:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1921,"id":1931,"nodeType":"Return","src":"5522:66:9"}]},"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"5197:215:9","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:9","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"input","nameLocation":"5453:5:9","nodeType":"VariableDeclaration","scope":1933,"src":"5439:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1914,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:9"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"success","nameLocation":"5488:7:9","nodeType":"VariableDeclaration","scope":1933,"src":"5483:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1917,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"value","nameLocation":"5505:5:9","nodeType":"VariableDeclaration","scope":1933,"src":"5497:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:9"},"scope":2733,"src":"5417:178:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1969,"nodeType":"Block","src":"5997:144:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1947,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"6011:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1950,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"6023:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:9","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:9","memberName":"length","nodeType":"MemberAccess","src":"6017:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1954,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"6040:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1955,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"6048:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1962,"nodeType":"IfStatement","src":"6007:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1946,"id":1961,"nodeType":"Return","src":"6053:17:9"}},{"expression":{"arguments":[{"id":1964,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"6116:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1965,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"6123:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1966,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"6130:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1963,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"6087:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1946,"id":1968,"nodeType":"Return","src":"6080:54:9"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"5601:238:9","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:9","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"input","nameLocation":"5889:5:9","nodeType":"VariableDeclaration","scope":1970,"src":"5875:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1935,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"begin","nameLocation":"5912:5:9","nodeType":"VariableDeclaration","scope":1970,"src":"5904:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"end","nameLocation":"5935:3:9","nodeType":"VariableDeclaration","scope":1970,"src":"5927:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:9"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"success","nameLocation":"5973:7:9","nodeType":"VariableDeclaration","scope":1970,"src":"5968:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1942,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"value","nameLocation":"5990:5:9","nodeType":"VariableDeclaration","scope":1970,"src":"5982:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:9"},"scope":2733,"src":"5844:297:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2039,"nodeType":"Block","src":"6521:347:9","statements":[{"assignments":[1985],"declarations":[{"constant":false,"id":1985,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:9","nodeType":"VariableDeclaration","scope":2039,"src":"6531:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1984,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1990,"initialValue":{"arguments":[{"id":1988,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"6559:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1986,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:9","typeDescriptions":{}}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:9"},{"assignments":[1992],"declarations":[{"constant":false,"id":1992,"mutability":"mutable","name":"result","nameLocation":"6584:6:9","nodeType":"VariableDeclaration","scope":2039,"src":"6576:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1994,"initialValue":{"hexValue":"30","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:9"},{"body":{"id":2033,"nodeType":"Block","src":"6642:189:9","statements":[{"assignments":[2006],"declarations":[{"constant":false,"id":2006,"mutability":"mutable","name":"chr","nameLocation":"6662:3:9","nodeType":"VariableDeclaration","scope":2033,"src":"6656:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2005,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2016,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2011,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6711:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"6719:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2010,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"6688:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2008,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:9","typeDescriptions":{}}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2007,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"6668:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2017,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6741:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2024,"nodeType":"IfStatement","src":"6737:30:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1983,"id":2023,"nodeType":"Return","src":"6750:17:9"}},{"expression":{"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"6781:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2028,"nodeType":"ExpressionStatement","src":"6781:12:9"},{"expression":{"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"6807:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2030,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6817:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2032,"nodeType":"ExpressionStatement","src":"6807:13:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"6628:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2000,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"6632:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2034,"initializationExpression":{"assignments":[1996],"declarations":[{"constant":false,"id":1996,"mutability":"mutable","name":"i","nameLocation":"6617:1:9","nodeType":"VariableDeclaration","scope":2034,"src":"6609:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1998,"initialValue":{"id":1997,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"6621:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:9","subExpression":{"id":2002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"6639:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2004,"nodeType":"ExpressionStatement","src":"6637:3:9"},"nodeType":"ForStatement","src":"6604:227:9"},{"expression":{"components":[{"hexValue":"74727565","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"6854:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1983,"id":2038,"nodeType":"Return","src":"6840:21:9"}]},"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"6147:201:9","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2040,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:9","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"input","nameLocation":"6414:5:9","nodeType":"VariableDeclaration","scope":2040,"src":"6400:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1972,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"begin","nameLocation":"6437:5:9","nodeType":"VariableDeclaration","scope":2040,"src":"6429:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"end","nameLocation":"6460:3:9","nodeType":"VariableDeclaration","scope":2040,"src":"6452:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:9"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"success","nameLocation":"6497:7:9","nodeType":"VariableDeclaration","scope":2040,"src":"6492:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1979,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"value","nameLocation":"6514:5:9","nodeType":"VariableDeclaration","scope":2040,"src":"6506:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:9"},"scope":2733,"src":"6353:515:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2058,"nodeType":"Block","src":"7165:63:9","statements":[{"expression":{"arguments":[{"id":2049,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7191:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2053,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7207:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2051,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:9","typeDescriptions":{}}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:9","memberName":"length","nodeType":"MemberAccess","src":"7201:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2048,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2059,2090],"referencedDeclaration":2090,"src":"7182:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2047,"id":2057,"nodeType":"Return","src":"7175:46:9"}]},"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"6874:216:9","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2059,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:9","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"input","nameLocation":"7127:5:9","nodeType":"VariableDeclaration","scope":2059,"src":"7113:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2042,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:9"},"returnParameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2059,"src":"7157:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2045,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:9"},"scope":2733,"src":"7095:133:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2089,"nodeType":"Block","src":"7633:151:9","statements":[{"assignments":[2072,2074],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"success","nameLocation":"7649:7:9","nodeType":"VariableDeclaration","scope":2089,"src":"7644:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2071,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"value","nameLocation":"7665:5:9","nodeType":"VariableDeclaration","scope":2089,"src":"7658:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2073,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2080,"initialValue":{"arguments":[{"id":2076,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"7686:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2077,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"7693:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2078,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"7700:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2111,2153],"referencedDeclaration":2153,"src":"7674:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:9"},{"condition":{"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:9","subExpression":{"id":2081,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"7719:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2086,"nodeType":"IfStatement","src":"7714:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2083,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"7735:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2085,"nodeType":"RevertStatement","src":"7728:27:9"}},{"expression":{"id":2087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7772:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2070,"id":2088,"nodeType":"Return","src":"7765:12:9"}]},"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"7234:296:9","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2090,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:9","nodeType":"FunctionDefinition","parameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"input","nameLocation":"7567:5:9","nodeType":"VariableDeclaration","scope":2090,"src":"7553:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2061,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2064,"mutability":"mutable","name":"begin","nameLocation":"7582:5:9","nodeType":"VariableDeclaration","scope":2090,"src":"7574:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"end","nameLocation":"7597:3:9","nodeType":"VariableDeclaration","scope":2090,"src":"7589:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:9"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"7625:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2068,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:9"},"scope":2733,"src":"7535:249:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2110,"nodeType":"Block","src":"8175:82:9","statements":[{"expression":{"arguments":[{"id":2101,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"8220:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2105,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"8236:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2103,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:9","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:9","memberName":"length","nodeType":"MemberAccess","src":"8230:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2100,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"8192:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2099,"id":2109,"nodeType":"Return","src":"8185:65:9"}]},"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"7790:287:9","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2111,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:9","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"input","nameLocation":"8117:5:9","nodeType":"VariableDeclaration","scope":2111,"src":"8103:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2092,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:9"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"success","nameLocation":"8152:7:9","nodeType":"VariableDeclaration","scope":2111,"src":"8147:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2095,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"value","nameLocation":"8168:5:9","nodeType":"VariableDeclaration","scope":2111,"src":"8161:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2097,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:9"},"scope":2733,"src":"8082:175:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2116,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:9","nodeType":"VariableDeclaration","scope":2733,"src":"8263:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2152,"nodeType":"Block","src":"8779:143:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"8793:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2133,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"8805:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2131,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:9","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:9","memberName":"length","nodeType":"MemberAccess","src":"8799:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2137,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"8822:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2138,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"8830:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2145,"nodeType":"IfStatement","src":"8789:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2129,"id":2144,"nodeType":"Return","src":"8835:17:9"}},{"expression":{"arguments":[{"id":2147,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"8897:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2148,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"8904:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2149,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"8911:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2146,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"8869:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2129,"id":2151,"nodeType":"Return","src":"8862:53:9"}]},"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"8320:303:9","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2153,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:9","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"input","nameLocation":"8672:5:9","nodeType":"VariableDeclaration","scope":2153,"src":"8658:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2118,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"begin","nameLocation":"8695:5:9","nodeType":"VariableDeclaration","scope":2153,"src":"8687:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"end","nameLocation":"8718:3:9","nodeType":"VariableDeclaration","scope":2153,"src":"8710:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:9"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"success","nameLocation":"8756:7:9","nodeType":"VariableDeclaration","scope":2153,"src":"8751:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2125,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"value","nameLocation":"8772:5:9","nodeType":"VariableDeclaration","scope":2153,"src":"8765:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2127,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:9"},"scope":2733,"src":"8628:294:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2273,"nodeType":"Block","src":"9299:812:9","statements":[{"assignments":[2168],"declarations":[{"constant":false,"id":2168,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:9","nodeType":"VariableDeclaration","scope":2273,"src":"9309:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2167,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2173,"initialValue":{"arguments":[{"id":2171,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"9337:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2169,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:9","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:9"},{"assignments":[2175],"declarations":[{"constant":false,"id":2175,"mutability":"mutable","name":"sign","nameLocation":"9407:4:9","nodeType":"VariableDeclaration","scope":2273,"src":"9400:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2174,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2191,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2176,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"9414:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2177,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"9423:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2186,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"9471:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2187,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"9479:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2185,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"9448:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2183,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:9","typeDescriptions":{}}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:9","trueExpression":{"arguments":[{"hexValue":"30","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2179,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:9","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:9"},{"assignments":[2193],"declarations":[{"constant":false,"id":2193,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:9","nodeType":"VariableDeclaration","scope":2273,"src":"9567:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2192,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2200,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2194,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9587:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2195,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:9","typeDescriptions":{}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:9"},{"assignments":[2202],"declarations":[{"constant":false,"id":2202,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:9","nodeType":"VariableDeclaration","scope":2273,"src":"9616:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2201,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2209,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9636:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2204,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:9","typeDescriptions":{}}},"id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:9"},{"assignments":[2211],"declarations":[{"constant":false,"id":2211,"mutability":"mutable","name":"offset","nameLocation":"9673:6:9","nodeType":"VariableDeclaration","scope":2273,"src":"9665:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2218,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"9683:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2213,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"9699:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"9682:37:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:9"},{"assignments":[2220,2222],"declarations":[{"constant":false,"id":2220,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:9","nodeType":"VariableDeclaration","scope":2273,"src":"9733:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2219,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:9","nodeType":"VariableDeclaration","scope":2273,"src":"9750:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2230,"initialValue":{"arguments":[{"id":2224,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"9783:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2225,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"9790:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2226,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"9798:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2228,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"9806:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2223,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1933,1970],"referencedDeclaration":1970,"src":"9770:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"9825:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2232,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"9839:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2233,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"9850:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2251,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"9967:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2252,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"9981:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2254,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"9997:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2255,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"10009:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2166,"id":2270,"nodeType":"Return","src":"10087:17:9"},"id":2271,"nodeType":"IfStatement","src":"9963:141:9","trueBody":{"id":2266,"nodeType":"Block","src":"10025:56:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2260,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2259,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:9","memberName":"min","nodeType":"MemberAccess","src":"10053:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2166,"id":2265,"nodeType":"Return","src":"10039:31:9"}]}},"id":2272,"nodeType":"IfStatement","src":"9821:283:9","trueBody":{"id":2250,"nodeType":"Block","src":"9866:91:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2237,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"9894:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2245,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"9936:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2243,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:9","typeDescriptions":{}}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:9","trueExpression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:9","subExpression":{"arguments":[{"id":2240,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"9917:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2238,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:9","typeDescriptions":{}}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2166,"id":2249,"nodeType":"Return","src":"9880:66:9"}]}}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"8928:200:9","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2274,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:9","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"input","nameLocation":"9193:5:9","nodeType":"VariableDeclaration","scope":2274,"src":"9179:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2155,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"begin","nameLocation":"9216:5:9","nodeType":"VariableDeclaration","scope":2274,"src":"9208:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"end","nameLocation":"9239:3:9","nodeType":"VariableDeclaration","scope":2274,"src":"9231:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:9"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"success","nameLocation":"9276:7:9","nodeType":"VariableDeclaration","scope":2274,"src":"9271:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2162,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"value","nameLocation":"9292:5:9","nodeType":"VariableDeclaration","scope":2274,"src":"9285:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2164,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:9"},"scope":2733,"src":"9133:978:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2292,"nodeType":"Block","src":"10456:67:9","statements":[{"expression":{"arguments":[{"id":2283,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"10486:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2287,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"10502:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2285,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:9","typeDescriptions":{}}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:9","memberName":"length","nodeType":"MemberAccess","src":"10496:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2282,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2293,2324],"referencedDeclaration":2324,"src":"10473:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2281,"id":2291,"nodeType":"Return","src":"10466:50:9"}]},"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"10117:259:9","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:9","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"input","nameLocation":"10417:5:9","nodeType":"VariableDeclaration","scope":2293,"src":"10403:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2276,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:9"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2293,"src":"10447:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:9"},"scope":2733,"src":"10381:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2323,"nodeType":"Block","src":"10937:156:9","statements":[{"assignments":[2306,2308],"declarations":[{"constant":false,"id":2306,"mutability":"mutable","name":"success","nameLocation":"10953:7:9","nodeType":"VariableDeclaration","scope":2323,"src":"10948:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2305,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"value","nameLocation":"10970:5:9","nodeType":"VariableDeclaration","scope":2323,"src":"10962:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2314,"initialValue":{"arguments":[{"id":2310,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"10995:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2311,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"11002:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2312,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"11009:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2309,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2345,2382],"referencedDeclaration":2382,"src":"10979:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:9"},{"condition":{"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:9","subExpression":{"id":2315,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"11028:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2320,"nodeType":"IfStatement","src":"11023:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2317,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"11044:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2319,"nodeType":"RevertStatement","src":"11037:27:9"}},{"expression":{"id":2321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"11081:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2304,"id":2322,"nodeType":"Return","src":"11074:12:9"}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"10529:300:9","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2324,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:9","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"input","nameLocation":"10870:5:9","nodeType":"VariableDeclaration","scope":2324,"src":"10856:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2295,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"begin","nameLocation":"10885:5:9","nodeType":"VariableDeclaration","scope":2324,"src":"10877:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"end","nameLocation":"10900:3:9","nodeType":"VariableDeclaration","scope":2324,"src":"10892:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:9"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2324,"src":"10928:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:9"},"scope":2733,"src":"10834:259:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2344,"nodeType":"Block","src":"11420:86:9","statements":[{"expression":{"arguments":[{"id":2335,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"11469:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2339,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"11485:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2337,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:9","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:9","memberName":"length","nodeType":"MemberAccess","src":"11479:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2334,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"11437:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2333,"id":2343,"nodeType":"Return","src":"11430:69:9"}]},"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"11099:218:9","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2345,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:9","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"input","nameLocation":"11361:5:9","nodeType":"VariableDeclaration","scope":2345,"src":"11347:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2326,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:9"},"returnParameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"success","nameLocation":"11396:7:9","nodeType":"VariableDeclaration","scope":2345,"src":"11391:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2329,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"value","nameLocation":"11413:5:9","nodeType":"VariableDeclaration","scope":2345,"src":"11405:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:9"},"scope":2733,"src":"11322:184:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2381,"nodeType":"Block","src":"11914:147:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2359,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"11928:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2362,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"11940:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2360,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:9","typeDescriptions":{}}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:9","memberName":"length","nodeType":"MemberAccess","src":"11934:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2366,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11957:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2367,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"11965:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2374,"nodeType":"IfStatement","src":"11924:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2358,"id":2373,"nodeType":"Return","src":"11970:17:9"}},{"expression":{"arguments":[{"id":2376,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"12036:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2377,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"12043:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2378,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"12050:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2375,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"12004:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2358,"id":2380,"nodeType":"Return","src":"11997:57:9"}]},"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"11512:241:9","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2382,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:9","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"input","nameLocation":"11806:5:9","nodeType":"VariableDeclaration","scope":2382,"src":"11792:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2347,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2350,"mutability":"mutable","name":"begin","nameLocation":"11829:5:9","nodeType":"VariableDeclaration","scope":2382,"src":"11821:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"end","nameLocation":"11852:3:9","nodeType":"VariableDeclaration","scope":2382,"src":"11844:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:9"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"success","nameLocation":"11890:7:9","nodeType":"VariableDeclaration","scope":2382,"src":"11885:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2354,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"value","nameLocation":"11907:5:9","nodeType":"VariableDeclaration","scope":2382,"src":"11899:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:9"},"scope":2733,"src":"11758:303:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2484,"nodeType":"Block","src":"12447:880:9","statements":[{"assignments":[2397],"declarations":[{"constant":false,"id":2397,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:9","nodeType":"VariableDeclaration","scope":2484,"src":"12457:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2396,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2402,"initialValue":{"arguments":[{"id":2400,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"12485:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2398,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:9","typeDescriptions":{}}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:9"},{"assignments":[2404],"declarations":[{"constant":false,"id":2404,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:9","nodeType":"VariableDeclaration","scope":2484,"src":"12539:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2403,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2424,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"12557:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12563:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2414,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"12607:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2415,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12615:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2413,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"12584:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2411,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:9","typeDescriptions":{}}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2418,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:9","typeDescriptions":{}}},"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:9"},{"assignments":[2426],"declarations":[{"constant":false,"id":2426,"mutability":"mutable","name":"offset","nameLocation":"12727:6:9","nodeType":"VariableDeclaration","scope":2484,"src":"12719:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2432,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2427,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"12736:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"12736:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:9"},{"assignments":[2434],"declarations":[{"constant":false,"id":2434,"mutability":"mutable","name":"result","nameLocation":"12777:6:9","nodeType":"VariableDeclaration","scope":2484,"src":"12769:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2436,"initialValue":{"hexValue":"30","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:9"},{"body":{"id":2478,"nodeType":"Block","src":"12844:446:9","statements":[{"assignments":[2450],"declarations":[{"constant":false,"id":2450,"mutability":"mutable","name":"chr","nameLocation":"12864:3:9","nodeType":"VariableDeclaration","scope":2478,"src":"12858:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2449,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2460,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2455,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"12913:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"12921:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2454,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"12890:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2452,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:9","typeDescriptions":{}}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2451,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"12870:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2461,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"12943:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2468,"nodeType":"IfStatement","src":"12939:31:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2395,"id":2467,"nodeType":"Return","src":"12953:17:9"}},{"expression":{"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"12984:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2472,"nodeType":"ExpressionStatement","src":"12984:12:9"},{"id":2477,"nodeType":"UncheckedBlock","src":"13010:270:9","statements":[{"expression":{"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2473,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"13252:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2474,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"13262:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2476,"nodeType":"ExpressionStatement","src":"13252:13:9"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"12830:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2444,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"12834:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2479,"initializationExpression":{"assignments":[2438],"declarations":[{"constant":false,"id":2438,"mutability":"mutable","name":"i","nameLocation":"12810:1:9","nodeType":"VariableDeclaration","scope":2479,"src":"12802:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2442,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"12814:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2440,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"12822:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:9","subExpression":{"id":2446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"12841:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2448,"nodeType":"ExpressionStatement","src":"12839:3:9"},"nodeType":"ForStatement","src":"12797:493:9"},{"expression":{"components":[{"hexValue":"74727565","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"13313:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2395,"id":2483,"nodeType":"Return","src":"13299:21:9"}]},"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"12067:204:9","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2485,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:9","nodeType":"FunctionDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"input","nameLocation":"12340:5:9","nodeType":"VariableDeclaration","scope":2485,"src":"12326:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2384,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"begin","nameLocation":"12363:5:9","nodeType":"VariableDeclaration","scope":2485,"src":"12355:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"end","nameLocation":"12386:3:9","nodeType":"VariableDeclaration","scope":2485,"src":"12378:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:9"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"success","nameLocation":"12423:7:9","nodeType":"VariableDeclaration","scope":2485,"src":"12418:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2391,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2394,"mutability":"mutable","name":"value","nameLocation":"12440:5:9","nodeType":"VariableDeclaration","scope":2485,"src":"12432:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:9"},"scope":2733,"src":"12276:1051:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2503,"nodeType":"Block","src":"13625:67:9","statements":[{"expression":{"arguments":[{"id":2494,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"13655:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2498,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"13671:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2496,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:9","typeDescriptions":{}}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:9","memberName":"length","nodeType":"MemberAccess","src":"13665:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2493,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2504,2535],"referencedDeclaration":2535,"src":"13642:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2492,"id":2502,"nodeType":"Return","src":"13635:50:9"}]},"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"13333:212:9","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2504,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:9","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"input","nameLocation":"13586:5:9","nodeType":"VariableDeclaration","scope":2504,"src":"13572:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2487,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:9"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2504,"src":"13616:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2490,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:9"},"scope":2733,"src":"13550:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2534,"nodeType":"Block","src":"14058:165:9","statements":[{"assignments":[2517,2519],"declarations":[{"constant":false,"id":2517,"mutability":"mutable","name":"success","nameLocation":"14074:7:9","nodeType":"VariableDeclaration","scope":2534,"src":"14069:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2516,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"value","nameLocation":"14091:5:9","nodeType":"VariableDeclaration","scope":2534,"src":"14083:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2518,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2525,"initialValue":{"arguments":[{"id":2521,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"14116:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2522,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"14123:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2523,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"14130:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2520,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2556,2660],"referencedDeclaration":2660,"src":"14100:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:9"},{"condition":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:9","subExpression":{"id":2526,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"14149:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2531,"nodeType":"IfStatement","src":"14144:50:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2528,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"14165:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2530,"nodeType":"RevertStatement","src":"14158:36:9"}},{"expression":{"id":2532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"14211:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2515,"id":2533,"nodeType":"Return","src":"14204:12:9"}]},"documentation":{"id":2505,"nodeType":"StructuredDocumentation","src":"13698:252:9","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2535,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:9","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"input","nameLocation":"13991:5:9","nodeType":"VariableDeclaration","scope":2535,"src":"13977:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2506,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"begin","nameLocation":"14006:5:9","nodeType":"VariableDeclaration","scope":2535,"src":"13998:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"end","nameLocation":"14021:3:9","nodeType":"VariableDeclaration","scope":2535,"src":"14013:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:9"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2535,"src":"14049:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2513,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:9"},"scope":2733,"src":"13955:268:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2555,"nodeType":"Block","src":"14523:70:9","statements":[{"expression":{"arguments":[{"id":2546,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"14556:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2550,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"14572:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2548,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:9","typeDescriptions":{}}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:9","memberName":"length","nodeType":"MemberAccess","src":"14566:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2545,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2556,2660],"referencedDeclaration":2660,"src":"14540:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2544,"id":2554,"nodeType":"Return","src":"14533:53:9"}]},"documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"14229:191:9","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2556,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:9","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"input","nameLocation":"14464:5:9","nodeType":"VariableDeclaration","scope":2556,"src":"14450:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2537,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:9"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"success","nameLocation":"14499:7:9","nodeType":"VariableDeclaration","scope":2556,"src":"14494:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2540,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"value","nameLocation":"14516:5:9","nodeType":"VariableDeclaration","scope":2556,"src":"14508:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:9"},"scope":2733,"src":"14425:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2659,"nodeType":"Block","src":"14963:733:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2570,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"14977:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2573,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"14989:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2571,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:9","typeDescriptions":{}}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:9","memberName":"length","nodeType":"MemberAccess","src":"14983:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2577,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"15006:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2578,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"15014:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2588,"nodeType":"IfStatement","src":"14973:72:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2582,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:9","typeDescriptions":{}}},"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2569,"id":2587,"nodeType":"Return","src":"15019:26:9"}},{"assignments":[2590],"declarations":[{"constant":false,"id":2590,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:9","nodeType":"VariableDeclaration","scope":2659,"src":"15056:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2589,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2613,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2591,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"15074:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2592,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"15080:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2602,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"15130:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2600,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:9","typeDescriptions":{}}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2604,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"15138:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2599,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"15101:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2597,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:9","typeDescriptions":{}}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2607,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:9","typeDescriptions":{}}},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:9"},{"assignments":[2615],"declarations":[{"constant":false,"id":2615,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:9","nodeType":"VariableDeclaration","scope":2659,"src":"15242:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2623,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2617,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"15272:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"15272:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2624,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"15359:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2625,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"15365:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2627,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"15374:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2657,"nodeType":"Block","src":"15639:51:9","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:9","typeDescriptions":{}}},"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2569,"id":2656,"nodeType":"Return","src":"15653:26:9"}]},"id":2658,"nodeType":"IfStatement","src":"15355:335:9","trueBody":{"id":2649,"nodeType":"Block","src":"15390:243:9","statements":[{"assignments":[2630,2632],"declarations":[{"constant":false,"id":2630,"mutability":"mutable","name":"s","nameLocation":"15511:1:9","nodeType":"VariableDeclaration","scope":2649,"src":"15506:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2629,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"v","nameLocation":"15522:1:9","nodeType":"VariableDeclaration","scope":2649,"src":"15514:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2638,"initialValue":{"arguments":[{"id":2634,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"15559:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2635,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"15566:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2636,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"15573:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2633,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"15527:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:9"},{"expression":{"components":[{"id":2639,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"15599:1:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2644,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"15618:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2642,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:9","typeDescriptions":{}}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:9","typeDescriptions":{}}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2569,"id":2648,"nodeType":"Return","src":"15591:31:9"}]}}]},"documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"14599:203:9","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2660,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:9","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"input","nameLocation":"14855:5:9","nodeType":"VariableDeclaration","scope":2660,"src":"14841:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2558,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2561,"mutability":"mutable","name":"begin","nameLocation":"14878:5:9","nodeType":"VariableDeclaration","scope":2660,"src":"14870:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2563,"mutability":"mutable","name":"end","nameLocation":"14901:3:9","nodeType":"VariableDeclaration","scope":2660,"src":"14893:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:9"},"returnParameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"success","nameLocation":"14939:7:9","nodeType":"VariableDeclaration","scope":2660,"src":"14934:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2565,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"value","nameLocation":"14956:5:9","nodeType":"VariableDeclaration","scope":2660,"src":"14948:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2567,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:9"},"scope":2733,"src":"14807:889:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2719,"nodeType":"Block","src":"15765:461:9","statements":[{"assignments":[2668],"declarations":[{"constant":false,"id":2668,"mutability":"mutable","name":"value","nameLocation":"15781:5:9","nodeType":"VariableDeclaration","scope":2719,"src":"15775:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2667,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2673,"initialValue":{"arguments":[{"id":2671,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"15795:3:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2669,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:9","typeDescriptions":{}}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:9"},{"id":2716,"nodeType":"UncheckedBlock","src":"15959:238:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"15987:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:9","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"16001:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:9","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"16047:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"16061:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:9","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"16108:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"16122:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:9","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2708,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2707,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:9","memberName":"max","nodeType":"MemberAccess","src":"16171:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2666,"id":2712,"nodeType":"Return","src":"16164:22:9"},"id":2713,"nodeType":"IfStatement","src":"16104:82:9","trueBody":{"expression":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"16134:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:9","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2706,"nodeType":"ExpressionStatement","src":"16134:11:9"}},"id":2714,"nodeType":"IfStatement","src":"16043:143:9","trueBody":{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"16074:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:9","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2695,"nodeType":"ExpressionStatement","src":"16074:11:9"}},"id":2715,"nodeType":"IfStatement","src":"15983:203:9","trueBody":{"expression":{"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"16013:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2684,"nodeType":"ExpressionStatement","src":"16013:11:9"}}]},{"expression":{"id":2717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"16214:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2666,"id":2718,"nodeType":"Return","src":"16207:12:9"}]},"id":2720,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:9","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"chr","nameLocation":"15731:3:9","nodeType":"VariableDeclaration","scope":2720,"src":"15724:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2661,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:9"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2720,"src":"15758:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2664,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:9"},"scope":2733,"src":"15702:524:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2731,"nodeType":"Block","src":"16611:225:9","statements":[{"AST":{"nativeSrc":"16760:70:9","nodeType":"YulBlock","src":"16760:70:9","statements":[{"nativeSrc":"16774:46:9","nodeType":"YulAssignment","src":"16774:46:9","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"16793:6:9","nodeType":"YulIdentifier","src":"16793:6:9"},{"arguments":[{"kind":"number","nativeSrc":"16805:4:9","nodeType":"YulLiteral","src":"16805:4:9","type":"","value":"0x20"},{"name":"offset","nativeSrc":"16811:6:9","nodeType":"YulIdentifier","src":"16811:6:9"}],"functionName":{"name":"add","nativeSrc":"16801:3:9","nodeType":"YulIdentifier","src":"16801:3:9"},"nativeSrc":"16801:17:9","nodeType":"YulFunctionCall","src":"16801:17:9"}],"functionName":{"name":"add","nativeSrc":"16789:3:9","nodeType":"YulIdentifier","src":"16789:3:9"},"nativeSrc":"16789:30:9","nodeType":"YulFunctionCall","src":"16789:30:9"}],"functionName":{"name":"mload","nativeSrc":"16783:5:9","nodeType":"YulIdentifier","src":"16783:5:9"},"nativeSrc":"16783:37:9","nodeType":"YulFunctionCall","src":"16783:37:9"},"variableNames":[{"name":"value","nativeSrc":"16774:5:9","nodeType":"YulIdentifier","src":"16774:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2723,"isOffset":false,"isSlot":false,"src":"16793:6:9","valueSize":1},{"declaration":2725,"isOffset":false,"isSlot":false,"src":"16811:6:9","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"16774:5:9","valueSize":1}],"flags":["memory-safe"],"id":2730,"nodeType":"InlineAssembly","src":"16735:95:9"}]},"documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"16232:268:9","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2732,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:9","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:9","nodeType":"VariableDeclaration","scope":2732,"src":"16537:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2722,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2725,"mutability":"mutable","name":"offset","nameLocation":"16566:6:9","nodeType":"VariableDeclaration","scope":2732,"src":"16558:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:9"},"returnParameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"value","nameLocation":"16604:5:9","nodeType":"VariableDeclaration","scope":2732,"src":"16596:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:9"},"scope":2733,"src":"16505:331:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2734,"src":"297:16541:9","usedErrors":[1557,1560,1563],"usedEvents":[]}],"src":"101:16738:9"},"id":9},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3081]},"id":3082,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2735,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"138:205:10","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3081,"linearizedBaseContracts":[3081],"name":"ECDSA","nameLocation":"352:5:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2741,"members":[{"id":2737,"name":"NoError","nameLocation":"392:7:10","nodeType":"EnumValue","src":"392:7:10"},{"id":2738,"name":"InvalidSignature","nameLocation":"409:16:10","nodeType":"EnumValue","src":"409:16:10"},{"id":2739,"name":"InvalidSignatureLength","nameLocation":"435:22:10","nodeType":"EnumValue","src":"435:22:10"},{"id":2740,"name":"InvalidSignatureS","nameLocation":"467:17:10","nodeType":"EnumValue","src":"467:17:10"}],"name":"RecoverError","nameLocation":"369:12:10","nodeType":"EnumDefinition","src":"364:126:10"},{"documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"496:63:10","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2744,"name":"ECDSAInvalidSignature","nameLocation":"570:21:10","nodeType":"ErrorDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[],"src":"591:2:10"},"src":"564:30:10"},{"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"600:60:10","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2749,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:10","nodeType":"ErrorDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"length","nameLocation":"707:6:10","nodeType":"VariableDeclaration","scope":2749,"src":"699:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:10"},"src":"665:50:10"},{"documentation":{"id":2750,"nodeType":"StructuredDocumentation","src":"721:85:10","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2754,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:10","nodeType":"ErrorDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"s","nameLocation":"848:1:10","nodeType":"VariableDeclaration","scope":2754,"src":"840:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:10"},"src":"811:40:10"},{"body":{"id":2806,"nodeType":"Block","src":"2285:622:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2769,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"2299:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:10","memberName":"length","nodeType":"MemberAccess","src":"2299:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2804,"nodeType":"Block","src":"2793:108:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2791,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:10","typeDescriptions":{}}},"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2795,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"2827:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2741_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:10","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2739,"src":"2827:35:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2799,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"2872:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:10","memberName":"length","nodeType":"MemberAccess","src":"2872:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:10","typeDescriptions":{}}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2768,"id":2803,"nodeType":"Return","src":"2807:83:10"}]},"id":2805,"nodeType":"IfStatement","src":"2295:606:10","trueBody":{"id":2790,"nodeType":"Block","src":"2323:464:10","statements":[{"assignments":[2774],"declarations":[{"constant":false,"id":2774,"mutability":"mutable","name":"r","nameLocation":"2345:1:10","nodeType":"VariableDeclaration","scope":2790,"src":"2337:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2775,"nodeType":"VariableDeclarationStatement","src":"2337:9:10"},{"assignments":[2777],"declarations":[{"constant":false,"id":2777,"mutability":"mutable","name":"s","nameLocation":"2368:1:10","nodeType":"VariableDeclaration","scope":2790,"src":"2360:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2778,"nodeType":"VariableDeclarationStatement","src":"2360:9:10"},{"assignments":[2780],"declarations":[{"constant":false,"id":2780,"mutability":"mutable","name":"v","nameLocation":"2389:1:10","nodeType":"VariableDeclaration","scope":2790,"src":"2383:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2779,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2781,"nodeType":"VariableDeclarationStatement","src":"2383:7:10"},{"AST":{"nativeSrc":"2560:171:10","nodeType":"YulBlock","src":"2560:171:10","statements":[{"nativeSrc":"2578:32:10","nodeType":"YulAssignment","src":"2578:32:10","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:10","nodeType":"YulIdentifier","src":"2593:9:10"},{"kind":"number","nativeSrc":"2604:4:10","nodeType":"YulLiteral","src":"2604:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:10","nodeType":"YulIdentifier","src":"2589:3:10"},"nativeSrc":"2589:20:10","nodeType":"YulFunctionCall","src":"2589:20:10"}],"functionName":{"name":"mload","nativeSrc":"2583:5:10","nodeType":"YulIdentifier","src":"2583:5:10"},"nativeSrc":"2583:27:10","nodeType":"YulFunctionCall","src":"2583:27:10"},"variableNames":[{"name":"r","nativeSrc":"2578:1:10","nodeType":"YulIdentifier","src":"2578:1:10"}]},{"nativeSrc":"2627:32:10","nodeType":"YulAssignment","src":"2627:32:10","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:10","nodeType":"YulIdentifier","src":"2642:9:10"},{"kind":"number","nativeSrc":"2653:4:10","nodeType":"YulLiteral","src":"2653:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:10","nodeType":"YulIdentifier","src":"2638:3:10"},"nativeSrc":"2638:20:10","nodeType":"YulFunctionCall","src":"2638:20:10"}],"functionName":{"name":"mload","nativeSrc":"2632:5:10","nodeType":"YulIdentifier","src":"2632:5:10"},"nativeSrc":"2632:27:10","nodeType":"YulFunctionCall","src":"2632:27:10"},"variableNames":[{"name":"s","nativeSrc":"2627:1:10","nodeType":"YulIdentifier","src":"2627:1:10"}]},{"nativeSrc":"2676:41:10","nodeType":"YulAssignment","src":"2676:41:10","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:10","nodeType":"YulLiteral","src":"2686:1:10","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:10","nodeType":"YulIdentifier","src":"2699:9:10"},{"kind":"number","nativeSrc":"2710:4:10","nodeType":"YulLiteral","src":"2710:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:10","nodeType":"YulIdentifier","src":"2695:3:10"},"nativeSrc":"2695:20:10","nodeType":"YulFunctionCall","src":"2695:20:10"}],"functionName":{"name":"mload","nativeSrc":"2689:5:10","nodeType":"YulIdentifier","src":"2689:5:10"},"nativeSrc":"2689:27:10","nodeType":"YulFunctionCall","src":"2689:27:10"}],"functionName":{"name":"byte","nativeSrc":"2681:4:10","nodeType":"YulIdentifier","src":"2681:4:10"},"nativeSrc":"2681:36:10","nodeType":"YulFunctionCall","src":"2681:36:10"},"variableNames":[{"name":"v","nativeSrc":"2676:1:10","nodeType":"YulIdentifier","src":"2676:1:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2774,"isOffset":false,"isSlot":false,"src":"2578:1:10","valueSize":1},{"declaration":2777,"isOffset":false,"isSlot":false,"src":"2627:1:10","valueSize":1},{"declaration":2759,"isOffset":false,"isSlot":false,"src":"2593:9:10","valueSize":1},{"declaration":2759,"isOffset":false,"isSlot":false,"src":"2642:9:10","valueSize":1},{"declaration":2759,"isOffset":false,"isSlot":false,"src":"2699:9:10","valueSize":1},{"declaration":2780,"isOffset":false,"isSlot":false,"src":"2676:1:10","valueSize":1}],"flags":["memory-safe"],"id":2782,"nodeType":"InlineAssembly","src":"2535:196:10"},{"expression":{"arguments":[{"id":2784,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"2762:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2785,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"2768:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2786,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"2771:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2787,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"2774:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2783,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2807,2887,2995],"referencedDeclaration":2995,"src":"2751:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2768,"id":2789,"nodeType":"Return","src":"2744:32:10"}]}}]},"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"857:1267:10","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2807,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:10","nodeType":"FunctionDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"hash","nameLocation":"2166:4:10","nodeType":"VariableDeclaration","scope":2807,"src":"2158:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"signature","nameLocation":"2193:9:10","nodeType":"VariableDeclaration","scope":2807,"src":"2180:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2758,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:10"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:10","nodeType":"VariableDeclaration","scope":2807,"src":"2232:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2765,"mutability":"mutable","name":"err","nameLocation":"2264:3:10","nodeType":"VariableDeclaration","scope":2807,"src":"2251:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2764,"nodeType":"UserDefinedTypeName","pathNode":{"id":2763,"name":"RecoverError","nameLocations":["2251:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2741,"src":"2251:12:10"},"referencedDeclaration":2741,"src":"2251:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2767,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:10","nodeType":"VariableDeclaration","scope":2807,"src":"2269:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:10"},"scope":3081,"src":"2129:778:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2836,"nodeType":"Block","src":"3801:168:10","statements":[{"assignments":[2818,2821,2823],"declarations":[{"constant":false,"id":2818,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:10","nodeType":"VariableDeclaration","scope":2836,"src":"3812:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"error","nameLocation":"3844:5:10","nodeType":"VariableDeclaration","scope":2836,"src":"3831:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2820,"nodeType":"UserDefinedTypeName","pathNode":{"id":2819,"name":"RecoverError","nameLocations":["3831:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2741,"src":"3831:12:10"},"referencedDeclaration":2741,"src":"3831:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2823,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:10","nodeType":"VariableDeclaration","scope":2836,"src":"3851:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2828,"initialValue":{"arguments":[{"id":2825,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"3882:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2826,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"3888:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2824,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2807,2887,2995],"referencedDeclaration":2807,"src":"3871:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:10"},{"expression":{"arguments":[{"id":2830,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"3920:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},{"id":2831,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"3927:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2829,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"3908:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2741_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2833,"nodeType":"ExpressionStatement","src":"3908:28:10"},{"expression":{"id":2834,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"3953:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2816,"id":2835,"nodeType":"Return","src":"3946:16:10"}]},"documentation":{"id":2808,"nodeType":"StructuredDocumentation","src":"2913:796:10","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2837,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:10","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"hash","nameLocation":"3739:4:10","nodeType":"VariableDeclaration","scope":2837,"src":"3731:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"signature","nameLocation":"3758:9:10","nodeType":"VariableDeclaration","scope":2837,"src":"3745:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2811,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:10"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2837,"src":"3792:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2814,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:10"},"scope":3081,"src":"3714:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2886,"nodeType":"Block","src":"4348:342:10","statements":[{"id":2885,"nodeType":"UncheckedBlock","src":"4358:326:10","statements":[{"assignments":[2855],"declarations":[{"constant":false,"id":2855,"mutability":"mutable","name":"s","nameLocation":"4390:1:10","nodeType":"VariableDeclaration","scope":2885,"src":"4382:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2862,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2856,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"4394:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:10","typeDescriptions":{}}},"id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:10"},{"assignments":[2864],"declarations":[{"constant":false,"id":2864,"mutability":"mutable","name":"v","nameLocation":"4591:1:10","nodeType":"VariableDeclaration","scope":2885,"src":"4585:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2863,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2877,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2869,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"4610:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:10","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:10","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2865,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:10","typeDescriptions":{}}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:10"},{"expression":{"arguments":[{"id":2879,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"4659:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2880,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"4665:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2881,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"4668:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2882,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"4671:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2878,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2807,2887,2995],"referencedDeclaration":2995,"src":"4648:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2853,"id":2884,"nodeType":"Return","src":"4641:32:10"}]}]},"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"3975:205:10","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2887,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:10","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"hash","nameLocation":"4222:4:10","nodeType":"VariableDeclaration","scope":2887,"src":"4214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"r","nameLocation":"4244:1:10","nodeType":"VariableDeclaration","scope":2887,"src":"4236:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"vs","nameLocation":"4263:2:10","nodeType":"VariableDeclaration","scope":2887,"src":"4255:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:10"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:10","nodeType":"VariableDeclaration","scope":2887,"src":"4295:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2846,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"err","nameLocation":"4327:3:10","nodeType":"VariableDeclaration","scope":2887,"src":"4314:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2849,"nodeType":"UserDefinedTypeName","pathNode":{"id":2848,"name":"RecoverError","nameLocations":["4314:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2741,"src":"4314:12:10"},"referencedDeclaration":2741,"src":"4314:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:10","nodeType":"VariableDeclaration","scope":2887,"src":"4332:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:10"},"scope":3081,"src":"4185:505:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2919,"nodeType":"Block","src":"4903:164:10","statements":[{"assignments":[2900,2903,2905],"declarations":[{"constant":false,"id":2900,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:10","nodeType":"VariableDeclaration","scope":2919,"src":"4914:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"error","nameLocation":"4946:5:10","nodeType":"VariableDeclaration","scope":2919,"src":"4933:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2902,"nodeType":"UserDefinedTypeName","pathNode":{"id":2901,"name":"RecoverError","nameLocations":["4933:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2741,"src":"4933:12:10"},"referencedDeclaration":2741,"src":"4933:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:10","nodeType":"VariableDeclaration","scope":2919,"src":"4953:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2911,"initialValue":{"arguments":[{"id":2907,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"4984:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2908,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"4990:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2909,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4993:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2906,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2807,2887,2995],"referencedDeclaration":2887,"src":"4973:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:10"},{"expression":{"arguments":[{"id":2913,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"5018:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},{"id":2914,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"5025:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2912,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"5006:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2741_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2916,"nodeType":"ExpressionStatement","src":"5006:28:10"},{"expression":{"id":2917,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"5051:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2898,"id":2918,"nodeType":"Return","src":"5044:16:10"}]},"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"4696:116:10","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2920,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:10","nodeType":"FunctionDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"hash","nameLocation":"4842:4:10","nodeType":"VariableDeclaration","scope":2920,"src":"4834:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"r","nameLocation":"4856:1:10","nodeType":"VariableDeclaration","scope":2920,"src":"4848:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2894,"mutability":"mutable","name":"vs","nameLocation":"4867:2:10","nodeType":"VariableDeclaration","scope":2920,"src":"4859:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:10"},"returnParameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2920,"src":"4894:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:10"},"scope":3081,"src":"4817:250:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2994,"nodeType":"Block","src":"5382:1372:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2941,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"6278:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:10","typeDescriptions":{}}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2955,"nodeType":"IfStatement","src":"6266:164:10","trueBody":{"id":2954,"nodeType":"Block","src":"6351:79:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2945,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:10","typeDescriptions":{}}},"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2949,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6385:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2741_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:10","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2740,"src":"6385:30:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},{"id":2951,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"6417:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2938,"id":2953,"nodeType":"Return","src":"6365:54:10"}]}},{"assignments":[2957],"declarations":[{"constant":false,"id":2957,"mutability":"mutable","name":"signer","nameLocation":"6532:6:10","nodeType":"VariableDeclaration","scope":2994,"src":"6524:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2956,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2964,"initialValue":{"arguments":[{"id":2959,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"6551:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2960,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"6557:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2961,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"6560:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2962,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"6563:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2958,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:10","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"6579:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2966,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:10","typeDescriptions":{}}},"id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2984,"nodeType":"IfStatement","src":"6575:113:10","trueBody":{"id":2983,"nodeType":"Block","src":"6601:87:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2971,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:10","typeDescriptions":{}}},"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2975,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6635:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2741_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:10","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"6635:29:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:10","typeDescriptions":{}}},"id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2981,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2938,"id":2982,"nodeType":"Return","src":"6615:62:10"}]}},{"expression":{"components":[{"id":2985,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"6706:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2986,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6714:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2741_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:10","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2737,"src":"6714:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:10","typeDescriptions":{}}},"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2938,"id":2993,"nodeType":"Return","src":"6698:49:10"}]},"documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"5073:125:10","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2995,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:10","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"hash","nameLocation":"5240:4:10","nodeType":"VariableDeclaration","scope":2995,"src":"5232:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"v","nameLocation":"5260:1:10","nodeType":"VariableDeclaration","scope":2995,"src":"5254:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2924,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"r","nameLocation":"5279:1:10","nodeType":"VariableDeclaration","scope":2995,"src":"5271:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"s","nameLocation":"5298:1:10","nodeType":"VariableDeclaration","scope":2995,"src":"5290:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:10"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:10","nodeType":"VariableDeclaration","scope":2995,"src":"5329:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2931,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"err","nameLocation":"5361:3:10","nodeType":"VariableDeclaration","scope":2995,"src":"5348:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2934,"nodeType":"UserDefinedTypeName","pathNode":{"id":2933,"name":"RecoverError","nameLocations":["5348:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2741,"src":"5348:12:10"},"referencedDeclaration":2741,"src":"5348:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:10","nodeType":"VariableDeclaration","scope":2995,"src":"5366:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:10"},"scope":3081,"src":"5203:1551:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3030,"nodeType":"Block","src":"6981:166:10","statements":[{"assignments":[3010,3013,3015],"declarations":[{"constant":false,"id":3010,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:10","nodeType":"VariableDeclaration","scope":3030,"src":"6992:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"error","nameLocation":"7024:5:10","nodeType":"VariableDeclaration","scope":3030,"src":"7011:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3012,"nodeType":"UserDefinedTypeName","pathNode":{"id":3011,"name":"RecoverError","nameLocations":["7011:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2741,"src":"7011:12:10"},"referencedDeclaration":2741,"src":"7011:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:10","nodeType":"VariableDeclaration","scope":3030,"src":"7031:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3022,"initialValue":{"arguments":[{"id":3017,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"7062:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3018,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"7068:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3019,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"7071:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3020,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"7074:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3016,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2807,2887,2995],"referencedDeclaration":2995,"src":"7051:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2741_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:10"},{"expression":{"arguments":[{"id":3024,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"7098:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},{"id":3025,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"7105:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3023,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"7086:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2741_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3027,"nodeType":"ExpressionStatement","src":"7086:28:10"},{"expression":{"id":3028,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7131:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3008,"id":3029,"nodeType":"Return","src":"7124:16:10"}]},"documentation":{"id":2996,"nodeType":"StructuredDocumentation","src":"6760:122:10","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3031,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:10","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"hash","nameLocation":"6912:4:10","nodeType":"VariableDeclaration","scope":3031,"src":"6904:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"v","nameLocation":"6924:1:10","nodeType":"VariableDeclaration","scope":3031,"src":"6918:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2999,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"r","nameLocation":"6935:1:10","nodeType":"VariableDeclaration","scope":3031,"src":"6927:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"s","nameLocation":"6946:1:10","nodeType":"VariableDeclaration","scope":3031,"src":"6938:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:10"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3031,"src":"6972:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3006,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:10"},"scope":3081,"src":"6887:260:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3079,"nodeType":"Block","src":"7352:460:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"7366:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3041,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7375:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2741_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:10","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2737,"src":"7375:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"7462:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3047,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7471:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2741_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:10","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"7471:29:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3054,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"7567:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3055,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7576:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2741_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:10","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2739,"src":"7576:35:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"7701:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3067,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7710:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2741_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:10","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2740,"src":"7710:30:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3075,"nodeType":"IfStatement","src":"7697:109:10","trueBody":{"id":3074,"nodeType":"Block","src":"7742:64:10","statements":[{"errorCall":{"arguments":[{"id":3071,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"7786:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3070,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"7763:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3073,"nodeType":"RevertStatement","src":"7756:39:10"}]}},"id":3076,"nodeType":"IfStatement","src":"7563:243:10","trueBody":{"id":3065,"nodeType":"Block","src":"7613:78:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3061,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"7670:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:10","typeDescriptions":{}}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3058,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"7634:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3064,"nodeType":"RevertStatement","src":"7627:53:10"}]}},"id":3077,"nodeType":"IfStatement","src":"7458:348:10","trueBody":{"id":3053,"nodeType":"Block","src":"7502:55:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3050,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"7523:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3052,"nodeType":"RevertStatement","src":"7516:30:10"}]}},"id":3078,"nodeType":"IfStatement","src":"7362:444:10","trueBody":{"id":3045,"nodeType":"Block","src":"7397:55:10","statements":[{"functionReturnParameters":3039,"id":3044,"nodeType":"Return","src":"7411:7:10"}]}}]},"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"7153:122:10","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3080,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:10","nodeType":"FunctionDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"error","nameLocation":"7314:5:10","nodeType":"VariableDeclaration","scope":3080,"src":"7301:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3034,"nodeType":"UserDefinedTypeName","pathNode":{"id":3033,"name":"RecoverError","nameLocations":["7301:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2741,"src":"7301:12:10"},"referencedDeclaration":2741,"src":"7301:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2741","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3037,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:10","nodeType":"VariableDeclaration","scope":3080,"src":"7321:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:10"},"returnParameters":{"id":3039,"nodeType":"ParameterList","parameters":[],"src":"7352:0:10"},"scope":3081,"src":"7280:532:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3082,"src":"344:7470:10","usedErrors":[2744,2749,2754],"usedEvents":[]}],"src":"112:7703:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3155],"Strings":[2733]},"id":3156,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3083,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3085,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3156,"sourceUnit":2734,"src":"149:39:11","symbolAliases":[{"foreign":{"id":3084,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"157:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"190:330:11","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3155,"linearizedBaseContracts":[3155],"name":"MessageHashUtils","nameLocation":"529:16:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":3095,"nodeType":"Block","src":"1314:341:11","statements":[{"AST":{"nativeSrc":"1349:300:11","nodeType":"YulBlock","src":"1349:300:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:11","nodeType":"YulLiteral","src":"1370:4:11","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:11","nodeType":"YulLiteral","src":"1376:34:11","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:11","nodeType":"YulIdentifier","src":"1363:6:11"},"nativeSrc":"1363:48:11","nodeType":"YulFunctionCall","src":"1363:48:11"},"nativeSrc":"1363:48:11","nodeType":"YulExpressionStatement","src":"1363:48:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:11","nodeType":"YulLiteral","src":"1472:4:11","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:11","nodeType":"YulIdentifier","src":"1478:11:11"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:11","nodeType":"YulIdentifier","src":"1465:6:11"},"nativeSrc":"1465:25:11","nodeType":"YulFunctionCall","src":"1465:25:11"},"nativeSrc":"1465:25:11","nodeType":"YulExpressionStatement","src":"1465:25:11"},{"nativeSrc":"1544:31:11","nodeType":"YulAssignment","src":"1544:31:11","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:11","nodeType":"YulLiteral","src":"1564:4:11","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:11","nodeType":"YulLiteral","src":"1570:4:11","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:11","nodeType":"YulIdentifier","src":"1554:9:11"},"nativeSrc":"1554:21:11","nodeType":"YulFunctionCall","src":"1554:21:11"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:11","nodeType":"YulIdentifier","src":"1544:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3092,"isOffset":false,"isSlot":false,"src":"1544:6:11","valueSize":1},{"declaration":3089,"isOffset":false,"isSlot":false,"src":"1478:11:11","valueSize":1}],"flags":["memory-safe"],"id":3094,"nodeType":"InlineAssembly","src":"1324:325:11"}]},"documentation":{"id":3087,"nodeType":"StructuredDocumentation","src":"552:665:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:11","nodeType":"FunctionDefinition","parameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:11","nodeType":"VariableDeclaration","scope":3096,"src":"1254:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:11"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"digest","nameLocation":"1306:6:11","nodeType":"VariableDeclaration","scope":3096,"src":"1298:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:11"},"scope":3155,"src":"1222:433:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3121,"nodeType":"Block","src":"2207:143:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3113,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"2316:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:11","memberName":"length","nodeType":"MemberAccess","src":"2316:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"2299:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2733_$","typeString":"type(library Strings)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:11","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"2299:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3109,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:11","typeDescriptions":{}}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3117,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"2334:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3105,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:11","typeDescriptions":{}}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3104,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3103,"id":3120,"nodeType":"Return","src":"2217:126:11"}]},"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"1661:455:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3122,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:11","nodeType":"FunctionDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"message","nameLocation":"2166:7:11","nodeType":"VariableDeclaration","scope":3122,"src":"2153:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3098,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:11"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3122,"src":"2198:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:11"},"scope":3155,"src":"2121:229:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3141,"nodeType":"Block","src":"2804:80:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3136,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"2860:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3137,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"2871:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3133,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3132,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3131,"id":3140,"nodeType":"Return","src":"2814:63:11"}]},"documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"2356:332:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3142,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:11","nodeType":"FunctionDefinition","parameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"validator","nameLocation":"2742:9:11","nodeType":"VariableDeclaration","scope":3142,"src":"2734:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3124,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"data","nameLocation":"2766:4:11","nodeType":"VariableDeclaration","scope":3142,"src":"2753:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3126,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:11"},"returnParameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3142,"src":"2795:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:11"},"scope":3155,"src":"2693:191:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3153,"nodeType":"Block","src":"3435:265:11","statements":[{"AST":{"nativeSrc":"3470:224:11","nodeType":"YulBlock","src":"3470:224:11","statements":[{"nativeSrc":"3484:22:11","nodeType":"YulVariableDeclaration","src":"3484:22:11","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:11","nodeType":"YulLiteral","src":"3501:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:11","nodeType":"YulIdentifier","src":"3495:5:11"},"nativeSrc":"3495:11:11","nodeType":"YulFunctionCall","src":"3495:11:11"},"variables":[{"name":"ptr","nativeSrc":"3488:3:11","nodeType":"YulTypedName","src":"3488:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:11","nodeType":"YulIdentifier","src":"3526:3:11"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:11","nodeType":"YulLiteral","src":"3531:10:11","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:11","nodeType":"YulIdentifier","src":"3519:6:11"},"nativeSrc":"3519:23:11","nodeType":"YulFunctionCall","src":"3519:23:11"},"nativeSrc":"3519:23:11","nodeType":"YulExpressionStatement","src":"3519:23:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:11","nodeType":"YulIdentifier","src":"3566:3:11"},{"kind":"number","nativeSrc":"3571:4:11","nodeType":"YulLiteral","src":"3571:4:11","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:11","nodeType":"YulIdentifier","src":"3562:3:11"},"nativeSrc":"3562:14:11","nodeType":"YulFunctionCall","src":"3562:14:11"},{"name":"domainSeparator","nativeSrc":"3578:15:11","nodeType":"YulIdentifier","src":"3578:15:11"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:11","nodeType":"YulIdentifier","src":"3555:6:11"},"nativeSrc":"3555:39:11","nodeType":"YulFunctionCall","src":"3555:39:11"},"nativeSrc":"3555:39:11","nodeType":"YulExpressionStatement","src":"3555:39:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:11","nodeType":"YulIdentifier","src":"3618:3:11"},{"kind":"number","nativeSrc":"3623:4:11","nodeType":"YulLiteral","src":"3623:4:11","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:11","nodeType":"YulIdentifier","src":"3614:3:11"},"nativeSrc":"3614:14:11","nodeType":"YulFunctionCall","src":"3614:14:11"},{"name":"structHash","nativeSrc":"3630:10:11","nodeType":"YulIdentifier","src":"3630:10:11"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:11","nodeType":"YulIdentifier","src":"3607:6:11"},"nativeSrc":"3607:34:11","nodeType":"YulFunctionCall","src":"3607:34:11"},"nativeSrc":"3607:34:11","nodeType":"YulExpressionStatement","src":"3607:34:11"},{"nativeSrc":"3654:30:11","nodeType":"YulAssignment","src":"3654:30:11","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:11","nodeType":"YulIdentifier","src":"3674:3:11"},{"kind":"number","nativeSrc":"3679:4:11","nodeType":"YulLiteral","src":"3679:4:11","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:11","nodeType":"YulIdentifier","src":"3664:9:11"},"nativeSrc":"3664:20:11","nodeType":"YulFunctionCall","src":"3664:20:11"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:11","nodeType":"YulIdentifier","src":"3654:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3150,"isOffset":false,"isSlot":false,"src":"3654:6:11","valueSize":1},{"declaration":3145,"isOffset":false,"isSlot":false,"src":"3578:15:11","valueSize":1},{"declaration":3147,"isOffset":false,"isSlot":false,"src":"3630:10:11","valueSize":1}],"flags":["memory-safe"],"id":3152,"nodeType":"InlineAssembly","src":"3445:249:11"}]},"documentation":{"id":3143,"nodeType":"StructuredDocumentation","src":"2890:431:11","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3154,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:11","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3145,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:11","nodeType":"VariableDeclaration","scope":3154,"src":"3351:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3147,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:11","nodeType":"VariableDeclaration","scope":3154,"src":"3376:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:11"},"returnParameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"digest","nameLocation":"3427:6:11","nodeType":"VariableDeclaration","scope":3154,"src":"3419:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:11"},"scope":3155,"src":"3326:374:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3156,"src":"521:3181:11","usedErrors":[],"usedEvents":[]}],"src":"123:3580:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4761],"Panic":[1533],"SafeCast":[6526]},"id":4762,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3157,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4762,"sourceUnit":1534,"src":"129:35:12","symbolAliases":[{"foreign":{"id":3158,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"137:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4762,"sourceUnit":6527,"src":"165:40:12","symbolAliases":[{"foreign":{"id":3160,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"173:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"207:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4761,"linearizedBaseContracts":[4761],"name":"Math","nameLocation":"289:4:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3167,"members":[{"id":3163,"name":"Floor","nameLocation":"324:5:12","nodeType":"EnumValue","src":"324:5:12"},{"id":3164,"name":"Ceil","nameLocation":"367:4:12","nodeType":"EnumValue","src":"367:4:12"},{"id":3165,"name":"Trunc","nameLocation":"409:5:12","nodeType":"EnumValue","src":"409:5:12"},{"id":3166,"name":"Expand","nameLocation":"439:6:12","nodeType":"EnumValue","src":"439:6:12"}],"name":"Rounding","nameLocation":"305:8:12","nodeType":"EnumDefinition","src":"300:169:12"},{"body":{"id":3198,"nodeType":"Block","src":"677:140:12","statements":[{"id":3197,"nodeType":"UncheckedBlock","src":"687:124:12","statements":[{"assignments":[3180],"declarations":[{"constant":false,"id":3180,"mutability":"mutable","name":"c","nameLocation":"719:1:12","nodeType":"VariableDeclaration","scope":3197,"src":"711:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3184,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"723:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3182,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"727:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3185,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"746:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"750:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3192,"nodeType":"IfStatement","src":"742:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3178,"id":3191,"nodeType":"Return","src":"753:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3194,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"798:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3178,"id":3196,"nodeType":"Return","src":"784:16:12"}]}]},"documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"475:106:12","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3199,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:12","nodeType":"FunctionDefinition","parameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"a","nameLocation":"610:1:12","nodeType":"VariableDeclaration","scope":3199,"src":"602:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"b","nameLocation":"621:1:12","nodeType":"VariableDeclaration","scope":3199,"src":"613:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:12"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"success","nameLocation":"652:7:12","nodeType":"VariableDeclaration","scope":3199,"src":"647:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3174,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"result","nameLocation":"669:6:12","nodeType":"VariableDeclaration","scope":3199,"src":"661:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:12"},"scope":4761,"src":"586:231:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3226,"nodeType":"Block","src":"1028:113:12","statements":[{"id":3225,"nodeType":"UncheckedBlock","src":"1038:97:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"1066:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"1070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3218,"nodeType":"IfStatement","src":"1062:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3210,"id":3217,"nodeType":"Return","src":"1073:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"1118:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3221,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"1122:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3210,"id":3224,"nodeType":"Return","src":"1104:20:12"}]}]},"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"823:109:12","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3227,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:12","nodeType":"FunctionDefinition","parameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"a","nameLocation":"961:1:12","nodeType":"VariableDeclaration","scope":3227,"src":"953:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3204,"mutability":"mutable","name":"b","nameLocation":"972:1:12","nodeType":"VariableDeclaration","scope":3227,"src":"964:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:12"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"success","nameLocation":"1003:7:12","nodeType":"VariableDeclaration","scope":3227,"src":"998:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3206,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"result","nameLocation":"1020:6:12","nodeType":"VariableDeclaration","scope":3227,"src":"1012:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:12"},"scope":4761,"src":"937:204:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3268,"nodeType":"Block","src":"1355:417:12","statements":[{"id":3267,"nodeType":"UncheckedBlock","src":"1365:401:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"1623:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3246,"nodeType":"IfStatement","src":"1619:28:12","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3238,"id":3245,"nodeType":"Return","src":"1631:16:12"}},{"assignments":[3248],"declarations":[{"constant":false,"id":3248,"mutability":"mutable","name":"c","nameLocation":"1669:1:12","nodeType":"VariableDeclaration","scope":3267,"src":"1661:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3252,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"1673:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3250,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"1677:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"1696:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"1700:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"1705:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"nodeType":"IfStatement","src":"1692:33:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3238,"id":3261,"nodeType":"Return","src":"1708:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3264,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"1753:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3238,"id":3266,"nodeType":"Return","src":"1739:16:12"}]}]},"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"1147:112:12","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3269,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:12","nodeType":"FunctionDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"a","nameLocation":"1288:1:12","nodeType":"VariableDeclaration","scope":3269,"src":"1280:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"b","nameLocation":"1299:1:12","nodeType":"VariableDeclaration","scope":3269,"src":"1291:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:12"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"success","nameLocation":"1330:7:12","nodeType":"VariableDeclaration","scope":3269,"src":"1325:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3234,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"result","nameLocation":"1347:6:12","nodeType":"VariableDeclaration","scope":3269,"src":"1339:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:12"},"scope":4761,"src":"1264:508:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3296,"nodeType":"Block","src":"1987:114:12","statements":[{"id":3295,"nodeType":"UncheckedBlock","src":"1997:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"2025:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3288,"nodeType":"IfStatement","src":"2021:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3280,"id":3287,"nodeType":"Return","src":"2033:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2078:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"2082:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3280,"id":3294,"nodeType":"Return","src":"2064:20:12"}]}]},"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"1778:113:12","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3297,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:12","nodeType":"FunctionDefinition","parameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"a","nameLocation":"1920:1:12","nodeType":"VariableDeclaration","scope":3297,"src":"1912:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3274,"mutability":"mutable","name":"b","nameLocation":"1931:1:12","nodeType":"VariableDeclaration","scope":3297,"src":"1923:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:12"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"success","nameLocation":"1962:7:12","nodeType":"VariableDeclaration","scope":3297,"src":"1957:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3276,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"result","nameLocation":"1979:6:12","nodeType":"VariableDeclaration","scope":3297,"src":"1971:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:12"},"scope":4761,"src":"1896:205:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3324,"nodeType":"Block","src":"2326:114:12","statements":[{"id":3323,"nodeType":"UncheckedBlock","src":"2336:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"2364:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3316,"nodeType":"IfStatement","src":"2360:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3308,"id":3315,"nodeType":"Return","src":"2372:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3318,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"2417:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3319,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"2421:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3308,"id":3322,"nodeType":"Return","src":"2403:20:12"}]}]},"documentation":{"id":3298,"nodeType":"StructuredDocumentation","src":"2107:123:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:12","nodeType":"FunctionDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"a","nameLocation":"2259:1:12","nodeType":"VariableDeclaration","scope":3325,"src":"2251:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"b","nameLocation":"2270:1:12","nodeType":"VariableDeclaration","scope":3325,"src":"2262:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:12"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"success","nameLocation":"2301:7:12","nodeType":"VariableDeclaration","scope":3325,"src":"2296:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3304,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"result","nameLocation":"2318:6:12","nodeType":"VariableDeclaration","scope":3325,"src":"2310:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:12"},"scope":4761,"src":"2235:205:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3351,"nodeType":"Block","src":"2912:207:12","statements":[{"id":3350,"nodeType":"UncheckedBlock","src":"2922:191:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"3060:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"3066:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"3070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3344,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"3091:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3342,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"3075:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"3075:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3336,"id":3349,"nodeType":"Return","src":"3053:49:12"}]}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"2446:374:12","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3352,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:12","nodeType":"FunctionDefinition","parameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"condition","nameLocation":"2847:9:12","nodeType":"VariableDeclaration","scope":3352,"src":"2842:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3327,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3330,"mutability":"mutable","name":"a","nameLocation":"2866:1:12","nodeType":"VariableDeclaration","scope":3352,"src":"2858:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"b","nameLocation":"2877:1:12","nodeType":"VariableDeclaration","scope":3352,"src":"2869:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:12"},"returnParameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3352,"src":"2903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:12"},"scope":4761,"src":"2825:294:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3370,"nodeType":"Block","src":"3256:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"3281:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3364,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"3285:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"3288:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"3291:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3362,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"3273:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3361,"id":3369,"nodeType":"Return","src":"3266:27:12"}]},"documentation":{"id":3353,"nodeType":"StructuredDocumentation","src":"3125:59:12","text":" @dev Returns the largest of two numbers."},"id":3371,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:12","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"a","nameLocation":"3210:1:12","nodeType":"VariableDeclaration","scope":3371,"src":"3202:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3354,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"b","nameLocation":"3221:1:12","nodeType":"VariableDeclaration","scope":3371,"src":"3213:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:12"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3371,"src":"3247:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:12"},"scope":4761,"src":"3189:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3389,"nodeType":"Block","src":"3438:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"3463:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3383,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"3467:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"3470:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3386,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"3473:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3381,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"3455:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3380,"id":3388,"nodeType":"Return","src":"3448:27:12"}]},"documentation":{"id":3372,"nodeType":"StructuredDocumentation","src":"3306:60:12","text":" @dev Returns the smallest of two numbers."},"id":3390,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:12","nodeType":"FunctionDefinition","parameters":{"id":3377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"a","nameLocation":"3392:1:12","nodeType":"VariableDeclaration","scope":3390,"src":"3384:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3376,"mutability":"mutable","name":"b","nameLocation":"3403:1:12","nodeType":"VariableDeclaration","scope":3390,"src":"3395:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:12"},"returnParameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3390,"src":"3429:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:12"},"scope":4761,"src":"3371:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3412,"nodeType":"Block","src":"3666:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"3721:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3401,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"3725:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"3731:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3405,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"3735:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3399,"id":3411,"nodeType":"Return","src":"3713:28:12"}]},"documentation":{"id":3391,"nodeType":"StructuredDocumentation","src":"3488:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3413,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:12","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"a","nameLocation":"3620:1:12","nodeType":"VariableDeclaration","scope":3413,"src":"3612:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"b","nameLocation":"3631:1:12","nodeType":"VariableDeclaration","scope":3413,"src":"3623:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:12"},"returnParameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3413,"src":"3657:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:12"},"scope":4761,"src":"3595:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3453,"nodeType":"Block","src":"4040:633:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"4054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"nodeType":"IfStatement","src":"4050:150:12","trueBody":{"id":3433,"nodeType":"Block","src":"4062:138:12","statements":[{"expression":{"arguments":[{"expression":{"id":3429,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4166:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1533_$","typeString":"type(library Panic)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1500,"src":"4166:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3426,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4154:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1533_$","typeString":"type(library Panic)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"4154:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3432,"nodeType":"ExpressionStatement","src":"4154:35:12"}]}},{"id":3452,"nodeType":"UncheckedBlock","src":"4583:84:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3437,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"4630:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3435,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"4614:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"4614:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"4641:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3445,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"4650:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3422,"id":3451,"nodeType":"Return","src":"4607:49:12"}]}]},"documentation":{"id":3414,"nodeType":"StructuredDocumentation","src":"3754:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3454,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:12","nodeType":"FunctionDefinition","parameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3416,"mutability":"mutable","name":"a","nameLocation":"3994:1:12","nodeType":"VariableDeclaration","scope":3454,"src":"3986:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3418,"mutability":"mutable","name":"b","nameLocation":"4005:1:12","nodeType":"VariableDeclaration","scope":3454,"src":"3997:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:12"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3454,"src":"4031:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:12"},"scope":4761,"src":"3969:704:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3590,"nodeType":"Block","src":"5094:4128:12","statements":[{"id":3589,"nodeType":"UncheckedBlock","src":"5104:4112:12","statements":[{"assignments":[3467],"declarations":[{"constant":false,"id":3467,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:12","nodeType":"VariableDeclaration","scope":3589,"src":"5433:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3466,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3471,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3468,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"5449:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3469,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5453:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:12"},{"assignments":[3473],"declarations":[{"constant":false,"id":3473,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:12","nodeType":"VariableDeclaration","scope":3589,"src":"5513:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3474,"nodeType":"VariableDeclarationStatement","src":"5513:13:12"},{"AST":{"nativeSrc":"5593:122:12","nodeType":"YulBlock","src":"5593:122:12","statements":[{"nativeSrc":"5611:30:12","nodeType":"YulVariableDeclaration","src":"5611:30:12","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:12","nodeType":"YulIdentifier","src":"5628:1:12"},{"name":"y","nativeSrc":"5631:1:12","nodeType":"YulIdentifier","src":"5631:1:12"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:12","nodeType":"YulLiteral","src":"5638:1:12","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:12","nodeType":"YulIdentifier","src":"5634:3:12"},"nativeSrc":"5634:6:12","nodeType":"YulFunctionCall","src":"5634:6:12"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:12","nodeType":"YulIdentifier","src":"5621:6:12"},"nativeSrc":"5621:20:12","nodeType":"YulFunctionCall","src":"5621:20:12"},"variables":[{"name":"mm","nativeSrc":"5615:2:12","nodeType":"YulTypedName","src":"5615:2:12","type":""}]},{"nativeSrc":"5658:43:12","nodeType":"YulAssignment","src":"5658:43:12","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:12","nodeType":"YulIdentifier","src":"5675:2:12"},{"name":"prod0","nativeSrc":"5679:5:12","nodeType":"YulIdentifier","src":"5679:5:12"}],"functionName":{"name":"sub","nativeSrc":"5671:3:12","nodeType":"YulIdentifier","src":"5671:3:12"},"nativeSrc":"5671:14:12","nodeType":"YulFunctionCall","src":"5671:14:12"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:12","nodeType":"YulIdentifier","src":"5690:2:12"},{"name":"prod0","nativeSrc":"5694:5:12","nodeType":"YulIdentifier","src":"5694:5:12"}],"functionName":{"name":"lt","nativeSrc":"5687:2:12","nodeType":"YulIdentifier","src":"5687:2:12"},"nativeSrc":"5687:13:12","nodeType":"YulFunctionCall","src":"5687:13:12"}],"functionName":{"name":"sub","nativeSrc":"5667:3:12","nodeType":"YulIdentifier","src":"5667:3:12"},"nativeSrc":"5667:34:12","nodeType":"YulFunctionCall","src":"5667:34:12"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:12","nodeType":"YulIdentifier","src":"5658:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3467,"isOffset":false,"isSlot":false,"src":"5679:5:12","valueSize":1},{"declaration":3467,"isOffset":false,"isSlot":false,"src":"5694:5:12","valueSize":1},{"declaration":3473,"isOffset":false,"isSlot":false,"src":"5658:5:12","valueSize":1},{"declaration":3457,"isOffset":false,"isSlot":false,"src":"5628:1:12","valueSize":1},{"declaration":3459,"isOffset":false,"isSlot":false,"src":"5631:1:12","valueSize":1}],"id":3475,"nodeType":"InlineAssembly","src":"5584:131:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3476,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"5796:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3484,"nodeType":"IfStatement","src":"5792:368:12","trueBody":{"id":3483,"nodeType":"Block","src":"5808:352:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3479,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"6126:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3480,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"6134:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3465,"id":3482,"nodeType":"Return","src":"6119:26:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3485,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"6270:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3486,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"6285:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3503,"nodeType":"IfStatement","src":"6266:143:12","trueBody":{"id":3502,"nodeType":"Block","src":"6292:117:12","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3492,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"6330:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3495,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"6348:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1533_$","typeString":"type(library Panic)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1500,"src":"6348:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3497,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"6372:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1533_$","typeString":"type(library Panic)"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1496,"src":"6372:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3491,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"6322:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3488,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"6310:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1533_$","typeString":"type(library Panic)"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"6310:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3501,"nodeType":"ExpressionStatement","src":"6310:84:12"}]}},{"assignments":[3505],"declarations":[{"constant":false,"id":3505,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:12","nodeType":"VariableDeclaration","scope":3589,"src":"6664:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3506,"nodeType":"VariableDeclarationStatement","src":"6664:17:12"},{"AST":{"nativeSrc":"6704:291:12","nodeType":"YulBlock","src":"6704:291:12","statements":[{"nativeSrc":"6773:38:12","nodeType":"YulAssignment","src":"6773:38:12","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:12","nodeType":"YulIdentifier","src":"6793:1:12"},{"name":"y","nativeSrc":"6796:1:12","nodeType":"YulIdentifier","src":"6796:1:12"},{"name":"denominator","nativeSrc":"6799:11:12","nodeType":"YulIdentifier","src":"6799:11:12"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:12","nodeType":"YulIdentifier","src":"6786:6:12"},"nativeSrc":"6786:25:12","nodeType":"YulFunctionCall","src":"6786:25:12"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:12","nodeType":"YulIdentifier","src":"6773:9:12"}]},{"nativeSrc":"6893:41:12","nodeType":"YulAssignment","src":"6893:41:12","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:12","nodeType":"YulIdentifier","src":"6906:5:12"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:12","nodeType":"YulIdentifier","src":"6916:9:12"},{"name":"prod0","nativeSrc":"6927:5:12","nodeType":"YulIdentifier","src":"6927:5:12"}],"functionName":{"name":"gt","nativeSrc":"6913:2:12","nodeType":"YulIdentifier","src":"6913:2:12"},"nativeSrc":"6913:20:12","nodeType":"YulFunctionCall","src":"6913:20:12"}],"functionName":{"name":"sub","nativeSrc":"6902:3:12","nodeType":"YulIdentifier","src":"6902:3:12"},"nativeSrc":"6902:32:12","nodeType":"YulFunctionCall","src":"6902:32:12"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:12","nodeType":"YulIdentifier","src":"6893:5:12"}]},{"nativeSrc":"6951:30:12","nodeType":"YulAssignment","src":"6951:30:12","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:12","nodeType":"YulIdentifier","src":"6964:5:12"},{"name":"remainder","nativeSrc":"6971:9:12","nodeType":"YulIdentifier","src":"6971:9:12"}],"functionName":{"name":"sub","nativeSrc":"6960:3:12","nodeType":"YulIdentifier","src":"6960:3:12"},"nativeSrc":"6960:21:12","nodeType":"YulFunctionCall","src":"6960:21:12"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:12","nodeType":"YulIdentifier","src":"6951:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3461,"isOffset":false,"isSlot":false,"src":"6799:11:12","valueSize":1},{"declaration":3467,"isOffset":false,"isSlot":false,"src":"6927:5:12","valueSize":1},{"declaration":3467,"isOffset":false,"isSlot":false,"src":"6951:5:12","valueSize":1},{"declaration":3467,"isOffset":false,"isSlot":false,"src":"6964:5:12","valueSize":1},{"declaration":3473,"isOffset":false,"isSlot":false,"src":"6893:5:12","valueSize":1},{"declaration":3473,"isOffset":false,"isSlot":false,"src":"6906:5:12","valueSize":1},{"declaration":3505,"isOffset":false,"isSlot":false,"src":"6773:9:12","valueSize":1},{"declaration":3505,"isOffset":false,"isSlot":false,"src":"6916:9:12","valueSize":1},{"declaration":3505,"isOffset":false,"isSlot":false,"src":"6971:9:12","valueSize":1},{"declaration":3457,"isOffset":false,"isSlot":false,"src":"6793:1:12","valueSize":1},{"declaration":3459,"isOffset":false,"isSlot":false,"src":"6796:1:12","valueSize":1}],"id":3507,"nodeType":"InlineAssembly","src":"6695:300:12"},{"assignments":[3509],"declarations":[{"constant":false,"id":3509,"mutability":"mutable","name":"twos","nameLocation":"7207:4:12","nodeType":"VariableDeclaration","scope":3589,"src":"7199:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3516,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3510,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"7214:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3512,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"7233:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:12"},{"AST":{"nativeSrc":"7268:366:12","nodeType":"YulBlock","src":"7268:366:12","statements":[{"nativeSrc":"7333:37:12","nodeType":"YulAssignment","src":"7333:37:12","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:12","nodeType":"YulIdentifier","src":"7352:11:12"},{"name":"twos","nativeSrc":"7365:4:12","nodeType":"YulIdentifier","src":"7365:4:12"}],"functionName":{"name":"div","nativeSrc":"7348:3:12","nodeType":"YulIdentifier","src":"7348:3:12"},"nativeSrc":"7348:22:12","nodeType":"YulFunctionCall","src":"7348:22:12"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:12","nodeType":"YulIdentifier","src":"7333:11:12"}]},{"nativeSrc":"7437:25:12","nodeType":"YulAssignment","src":"7437:25:12","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:12","nodeType":"YulIdentifier","src":"7450:5:12"},{"name":"twos","nativeSrc":"7457:4:12","nodeType":"YulIdentifier","src":"7457:4:12"}],"functionName":{"name":"div","nativeSrc":"7446:3:12","nodeType":"YulIdentifier","src":"7446:3:12"},"nativeSrc":"7446:16:12","nodeType":"YulFunctionCall","src":"7446:16:12"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:12","nodeType":"YulIdentifier","src":"7437:5:12"}]},{"nativeSrc":"7581:39:12","nodeType":"YulAssignment","src":"7581:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:12","nodeType":"YulLiteral","src":"7601:1:12","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:12","nodeType":"YulIdentifier","src":"7604:4:12"}],"functionName":{"name":"sub","nativeSrc":"7597:3:12","nodeType":"YulIdentifier","src":"7597:3:12"},"nativeSrc":"7597:12:12","nodeType":"YulFunctionCall","src":"7597:12:12"},{"name":"twos","nativeSrc":"7611:4:12","nodeType":"YulIdentifier","src":"7611:4:12"}],"functionName":{"name":"div","nativeSrc":"7593:3:12","nodeType":"YulIdentifier","src":"7593:3:12"},"nativeSrc":"7593:23:12","nodeType":"YulFunctionCall","src":"7593:23:12"},{"kind":"number","nativeSrc":"7618:1:12","nodeType":"YulLiteral","src":"7618:1:12","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:12","nodeType":"YulIdentifier","src":"7589:3:12"},"nativeSrc":"7589:31:12","nodeType":"YulFunctionCall","src":"7589:31:12"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:12","nodeType":"YulIdentifier","src":"7581:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3461,"isOffset":false,"isSlot":false,"src":"7333:11:12","valueSize":1},{"declaration":3461,"isOffset":false,"isSlot":false,"src":"7352:11:12","valueSize":1},{"declaration":3467,"isOffset":false,"isSlot":false,"src":"7437:5:12","valueSize":1},{"declaration":3467,"isOffset":false,"isSlot":false,"src":"7450:5:12","valueSize":1},{"declaration":3509,"isOffset":false,"isSlot":false,"src":"7365:4:12","valueSize":1},{"declaration":3509,"isOffset":false,"isSlot":false,"src":"7457:4:12","valueSize":1},{"declaration":3509,"isOffset":false,"isSlot":false,"src":"7581:4:12","valueSize":1},{"declaration":3509,"isOffset":false,"isSlot":false,"src":"7604:4:12","valueSize":1},{"declaration":3509,"isOffset":false,"isSlot":false,"src":"7611:4:12","valueSize":1}],"id":3517,"nodeType":"InlineAssembly","src":"7259:375:12"},{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3518,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"7700:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"7709:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3520,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"7717:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3523,"nodeType":"ExpressionStatement","src":"7700:21:12"},{"assignments":[3525],"declarations":[{"constant":false,"id":3525,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:12","nodeType":"VariableDeclaration","scope":3589,"src":"8056:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3532,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3527,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"8079:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:12"},{"expression":{"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3533,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"8327:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3536,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8341:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3540,"nodeType":"ExpressionStatement","src":"8312:36:12"},{"expression":{"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3541,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8382:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"8397:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3544,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8411:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3548,"nodeType":"ExpressionStatement","src":"8382:36:12"},{"expression":{"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3549,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8454:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3551,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"8469:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3552,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8483:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3556,"nodeType":"ExpressionStatement","src":"8454:36:12"},{"expression":{"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3557,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8525:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"8540:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3560,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8554:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3564,"nodeType":"ExpressionStatement","src":"8525:36:12"},{"expression":{"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3565,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8598:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"8613:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3568,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8627:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3572,"nodeType":"ExpressionStatement","src":"8598:36:12"},{"expression":{"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3573,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8672:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"8687:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3576,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8701:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3580,"nodeType":"ExpressionStatement","src":"8672:36:12"},{"expression":{"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"9154:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3582,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"9163:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3583,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"9171:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3586,"nodeType":"ExpressionStatement","src":"9154:24:12"},{"expression":{"id":3587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"9199:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3465,"id":3588,"nodeType":"Return","src":"9192:13:12"}]}]},"documentation":{"id":3455,"nodeType":"StructuredDocumentation","src":"4679:312:12","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3591,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:12","nodeType":"FunctionDefinition","parameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"x","nameLocation":"5020:1:12","nodeType":"VariableDeclaration","scope":3591,"src":"5012:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3459,"mutability":"mutable","name":"y","nameLocation":"5031:1:12","nodeType":"VariableDeclaration","scope":3591,"src":"5023:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3461,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:12","nodeType":"VariableDeclaration","scope":3591,"src":"5034:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:12"},"returnParameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"result","nameLocation":"5086:6:12","nodeType":"VariableDeclaration","scope":3591,"src":"5078:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:12"},"scope":4761,"src":"4996:4226:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"9461:128:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3607,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"9485:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3608,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"9488:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3609,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"9491:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3606,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3591,3628],"referencedDeclaration":3591,"src":"9478:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3614,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"9539:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}],"id":3613,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"9522:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3167_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3617,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"9559:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3618,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"9562:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3619,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"9565:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3616,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3611,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"9506:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"9506:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3605,"id":3626,"nodeType":"Return","src":"9471:111:12"}]},"documentation":{"id":3592,"nodeType":"StructuredDocumentation","src":"9228:118:12","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:12","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"x","nameLocation":"9375:1:12","nodeType":"VariableDeclaration","scope":3628,"src":"9367:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3596,"mutability":"mutable","name":"y","nameLocation":"9386:1:12","nodeType":"VariableDeclaration","scope":3628,"src":"9378:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3598,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:12","nodeType":"VariableDeclaration","scope":3628,"src":"9389:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:12","nodeType":"VariableDeclaration","scope":3628,"src":"9410:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"},"typeName":{"id":3600,"nodeType":"UserDefinedTypeName","pathNode":{"id":3599,"name":"Rounding","nameLocations":["9410:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3167,"src":"9410:8:12"},"referencedDeclaration":3167,"src":"9410:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:12"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3628,"src":"9452:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:12"},"scope":4761,"src":"9351:238:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3724,"nodeType":"Block","src":"10223:1849:12","statements":[{"id":3723,"nodeType":"UncheckedBlock","src":"10233:1833:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"10261:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3643,"nodeType":"IfStatement","src":"10257:20:12","trueBody":{"expression":{"hexValue":"30","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3637,"id":3642,"nodeType":"Return","src":"10269:8:12"}},{"assignments":[3645],"declarations":[{"constant":false,"id":3645,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:12","nodeType":"VariableDeclaration","scope":3723,"src":"10748:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3649,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"10768:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3647,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"10772:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:12"},{"assignments":[3651],"declarations":[{"constant":false,"id":3651,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:12","nodeType":"VariableDeclaration","scope":3723,"src":"10787:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3653,"initialValue":{"id":3652,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"10801:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:12"},{"assignments":[3655],"declarations":[{"constant":false,"id":3655,"mutability":"mutable","name":"x","nameLocation":"10945:1:12","nodeType":"VariableDeclaration","scope":3723,"src":"10938:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3654,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3657,"initialValue":{"hexValue":"30","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:12"},{"assignments":[3659],"declarations":[{"constant":false,"id":3659,"mutability":"mutable","name":"y","nameLocation":"10971:1:12","nodeType":"VariableDeclaration","scope":3723,"src":"10964:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3658,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3661,"initialValue":{"hexValue":"31","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:12"},{"body":{"id":3698,"nodeType":"Block","src":"11014:882:12","statements":[{"assignments":[3666],"declarations":[{"constant":false,"id":3666,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:12","nodeType":"VariableDeclaration","scope":3698,"src":"11032:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3670,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"11051:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3668,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"11057:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:12"},{"expression":{"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3671,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"11086:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3672,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"11091:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3673,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3674,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"11191:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3675,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"11436:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"11442:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3677,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"11454:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3682,"nodeType":"ExpressionStatement","src":"11085:395:12"},{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3683,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"11500:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3684,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"11503:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3685,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3686,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"11585:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3687,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"11839:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"11843:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3691,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"11854:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3689,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:12","typeDescriptions":{}}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3697,"nodeType":"ExpressionStatement","src":"11499:382:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"10998:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3699,"nodeType":"WhileStatement","src":"10991:905:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3700,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"11914:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3705,"nodeType":"IfStatement","src":"11910:22:12","trueBody":{"expression":{"hexValue":"30","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3637,"id":3704,"nodeType":"Return","src":"11924:8:12"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3707,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"11983:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"11990:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:12","subExpression":{"id":3713,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"12003:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:12","typeDescriptions":{}}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3719,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"12015:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:12","typeDescriptions":{}}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3706,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"11975:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3637,"id":3722,"nodeType":"Return","src":"11968:50:12"}]}]},"documentation":{"id":3629,"nodeType":"StructuredDocumentation","src":"9595:553:12","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3725,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:12","nodeType":"FunctionDefinition","parameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"a","nameLocation":"10177:1:12","nodeType":"VariableDeclaration","scope":3725,"src":"10169:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"n","nameLocation":"10188:1:12","nodeType":"VariableDeclaration","scope":3725,"src":"10180:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:12"},"returnParameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3725,"src":"10214:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:12"},"scope":4761,"src":"10153:1919:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"12672:82:12","statements":[{"id":3744,"nodeType":"UncheckedBlock","src":"12682:66:12","statements":[{"expression":{"arguments":[{"id":3737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"12725:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"12728:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3741,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"12735:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3735,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"12713:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4761_$","typeString":"type(library Math)"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:12","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3782,"src":"12713:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3734,"id":3743,"nodeType":"Return","src":"12706:31:12"}]}]},"documentation":{"id":3726,"nodeType":"StructuredDocumentation","src":"12078:514:12","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:12","nodeType":"FunctionDefinition","parameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"a","nameLocation":"12626:1:12","nodeType":"VariableDeclaration","scope":3746,"src":"12618:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"p","nameLocation":"12637:1:12","nodeType":"VariableDeclaration","scope":3746,"src":"12629:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:12"},"returnParameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3746,"src":"12663:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:12"},"scope":4761,"src":"12597:157:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3781,"nodeType":"Block","src":"13524:174:12","statements":[{"assignments":[3759,3761],"declarations":[{"constant":false,"id":3759,"mutability":"mutable","name":"success","nameLocation":"13540:7:12","nodeType":"VariableDeclaration","scope":3781,"src":"13535:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3758,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"result","nameLocation":"13557:6:12","nodeType":"VariableDeclaration","scope":3781,"src":"13549:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3767,"initialValue":{"arguments":[{"id":3763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"13577:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3764,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"13580:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3765,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"13583:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3762,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3806,3888],"referencedDeclaration":3806,"src":"13567:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:12"},{"condition":{"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:12","subExpression":{"id":3768,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"13600:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"IfStatement","src":"13595:74:12","trueBody":{"id":3777,"nodeType":"Block","src":"13609:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3773,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"13635:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1533_$","typeString":"type(library Panic)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1500,"src":"13635:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3770,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"13623:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1533_$","typeString":"type(library Panic)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"13623:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3776,"nodeType":"ExpressionStatement","src":"13623:35:12"}]}},{"expression":{"id":3779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"13685:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3757,"id":3780,"nodeType":"Return","src":"13678:13:12"}]},"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"12760:678:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3782,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:12","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"b","nameLocation":"13467:1:12","nodeType":"VariableDeclaration","scope":3782,"src":"13459:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"e","nameLocation":"13478:1:12","nodeType":"VariableDeclaration","scope":3782,"src":"13470:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"m","nameLocation":"13489:1:12","nodeType":"VariableDeclaration","scope":3782,"src":"13481:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:12"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3782,"src":"13515:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:12"},"scope":4761,"src":"13443:255:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3805,"nodeType":"Block","src":"14552:1493:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3796,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"14566:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3803,"nodeType":"IfStatement","src":"14562:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3795,"id":3802,"nodeType":"Return","src":"14574:17:12"}},{"AST":{"nativeSrc":"14626:1413:12","nodeType":"YulBlock","src":"14626:1413:12","statements":[{"nativeSrc":"14640:22:12","nodeType":"YulVariableDeclaration","src":"14640:22:12","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:12","nodeType":"YulLiteral","src":"14657:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:12","nodeType":"YulIdentifier","src":"14651:5:12"},"nativeSrc":"14651:11:12","nodeType":"YulFunctionCall","src":"14651:11:12"},"variables":[{"name":"ptr","nativeSrc":"14644:3:12","nodeType":"YulTypedName","src":"14644:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:12","nodeType":"YulIdentifier","src":"15570:3:12"},{"kind":"number","nativeSrc":"15575:4:12","nodeType":"YulLiteral","src":"15575:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:12","nodeType":"YulIdentifier","src":"15563:6:12"},"nativeSrc":"15563:17:12","nodeType":"YulFunctionCall","src":"15563:17:12"},"nativeSrc":"15563:17:12","nodeType":"YulExpressionStatement","src":"15563:17:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:12","nodeType":"YulIdentifier","src":"15604:3:12"},{"kind":"number","nativeSrc":"15609:4:12","nodeType":"YulLiteral","src":"15609:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:12","nodeType":"YulIdentifier","src":"15600:3:12"},"nativeSrc":"15600:14:12","nodeType":"YulFunctionCall","src":"15600:14:12"},{"kind":"number","nativeSrc":"15616:4:12","nodeType":"YulLiteral","src":"15616:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:12","nodeType":"YulIdentifier","src":"15593:6:12"},"nativeSrc":"15593:28:12","nodeType":"YulFunctionCall","src":"15593:28:12"},"nativeSrc":"15593:28:12","nodeType":"YulExpressionStatement","src":"15593:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:12","nodeType":"YulIdentifier","src":"15645:3:12"},{"kind":"number","nativeSrc":"15650:4:12","nodeType":"YulLiteral","src":"15650:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:12","nodeType":"YulIdentifier","src":"15641:3:12"},"nativeSrc":"15641:14:12","nodeType":"YulFunctionCall","src":"15641:14:12"},{"kind":"number","nativeSrc":"15657:4:12","nodeType":"YulLiteral","src":"15657:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:12","nodeType":"YulIdentifier","src":"15634:6:12"},"nativeSrc":"15634:28:12","nodeType":"YulFunctionCall","src":"15634:28:12"},"nativeSrc":"15634:28:12","nodeType":"YulExpressionStatement","src":"15634:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:12","nodeType":"YulIdentifier","src":"15686:3:12"},{"kind":"number","nativeSrc":"15691:4:12","nodeType":"YulLiteral","src":"15691:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:12","nodeType":"YulIdentifier","src":"15682:3:12"},"nativeSrc":"15682:14:12","nodeType":"YulFunctionCall","src":"15682:14:12"},{"name":"b","nativeSrc":"15698:1:12","nodeType":"YulIdentifier","src":"15698:1:12"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:12","nodeType":"YulIdentifier","src":"15675:6:12"},"nativeSrc":"15675:25:12","nodeType":"YulFunctionCall","src":"15675:25:12"},"nativeSrc":"15675:25:12","nodeType":"YulExpressionStatement","src":"15675:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:12","nodeType":"YulIdentifier","src":"15724:3:12"},{"kind":"number","nativeSrc":"15729:4:12","nodeType":"YulLiteral","src":"15729:4:12","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:12","nodeType":"YulIdentifier","src":"15720:3:12"},"nativeSrc":"15720:14:12","nodeType":"YulFunctionCall","src":"15720:14:12"},{"name":"e","nativeSrc":"15736:1:12","nodeType":"YulIdentifier","src":"15736:1:12"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:12","nodeType":"YulIdentifier","src":"15713:6:12"},"nativeSrc":"15713:25:12","nodeType":"YulFunctionCall","src":"15713:25:12"},"nativeSrc":"15713:25:12","nodeType":"YulExpressionStatement","src":"15713:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:12","nodeType":"YulIdentifier","src":"15762:3:12"},{"kind":"number","nativeSrc":"15767:4:12","nodeType":"YulLiteral","src":"15767:4:12","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:12","nodeType":"YulIdentifier","src":"15758:3:12"},"nativeSrc":"15758:14:12","nodeType":"YulFunctionCall","src":"15758:14:12"},{"name":"m","nativeSrc":"15774:1:12","nodeType":"YulIdentifier","src":"15774:1:12"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:12","nodeType":"YulIdentifier","src":"15751:6:12"},"nativeSrc":"15751:25:12","nodeType":"YulFunctionCall","src":"15751:25:12"},"nativeSrc":"15751:25:12","nodeType":"YulExpressionStatement","src":"15751:25:12"},{"nativeSrc":"15938:57:12","nodeType":"YulAssignment","src":"15938:57:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:12","nodeType":"YulIdentifier","src":"15960:3:12"},"nativeSrc":"15960:5:12","nodeType":"YulFunctionCall","src":"15960:5:12"},{"kind":"number","nativeSrc":"15967:4:12","nodeType":"YulLiteral","src":"15967:4:12","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:12","nodeType":"YulIdentifier","src":"15973:3:12"},{"kind":"number","nativeSrc":"15978:4:12","nodeType":"YulLiteral","src":"15978:4:12","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:12","nodeType":"YulLiteral","src":"15984:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:12","nodeType":"YulLiteral","src":"15990:4:12","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:12","nodeType":"YulIdentifier","src":"15949:10:12"},"nativeSrc":"15949:46:12","nodeType":"YulFunctionCall","src":"15949:46:12"},"variableNames":[{"name":"success","nativeSrc":"15938:7:12","nodeType":"YulIdentifier","src":"15938:7:12"}]},{"nativeSrc":"16008:21:12","nodeType":"YulAssignment","src":"16008:21:12","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:12","nodeType":"YulLiteral","src":"16024:4:12","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:12","nodeType":"YulIdentifier","src":"16018:5:12"},"nativeSrc":"16018:11:12","nodeType":"YulFunctionCall","src":"16018:11:12"},"variableNames":[{"name":"result","nativeSrc":"16008:6:12","nodeType":"YulIdentifier","src":"16008:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3785,"isOffset":false,"isSlot":false,"src":"15698:1:12","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"15736:1:12","valueSize":1},{"declaration":3789,"isOffset":false,"isSlot":false,"src":"15774:1:12","valueSize":1},{"declaration":3794,"isOffset":false,"isSlot":false,"src":"16008:6:12","valueSize":1},{"declaration":3792,"isOffset":false,"isSlot":false,"src":"15938:7:12","valueSize":1}],"flags":["memory-safe"],"id":3804,"nodeType":"InlineAssembly","src":"14601:1438:12"}]},"documentation":{"id":3783,"nodeType":"StructuredDocumentation","src":"13704:738:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3806,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:12","nodeType":"FunctionDefinition","parameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"b","nameLocation":"14474:1:12","nodeType":"VariableDeclaration","scope":3806,"src":"14466:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"e","nameLocation":"14485:1:12","nodeType":"VariableDeclaration","scope":3806,"src":"14477:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"m","nameLocation":"14496:1:12","nodeType":"VariableDeclaration","scope":3806,"src":"14488:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:12"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"success","nameLocation":"14527:7:12","nodeType":"VariableDeclaration","scope":3806,"src":"14522:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3791,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"result","nameLocation":"14544:6:12","nodeType":"VariableDeclaration","scope":3806,"src":"14536:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:12"},"scope":4761,"src":"14447:1598:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3841,"nodeType":"Block","src":"16242:179:12","statements":[{"assignments":[3819,3821],"declarations":[{"constant":false,"id":3819,"mutability":"mutable","name":"success","nameLocation":"16258:7:12","nodeType":"VariableDeclaration","scope":3841,"src":"16253:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3818,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"result","nameLocation":"16280:6:12","nodeType":"VariableDeclaration","scope":3841,"src":"16267:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3820,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3827,"initialValue":{"arguments":[{"id":3823,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"16300:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3824,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"16303:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3825,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"16306:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3822,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3806,3888],"referencedDeclaration":3888,"src":"16290:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:12"},{"condition":{"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:12","subExpression":{"id":3828,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"16323:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3838,"nodeType":"IfStatement","src":"16318:74:12","trueBody":{"id":3837,"nodeType":"Block","src":"16332:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3833,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"16358:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1533_$","typeString":"type(library Panic)"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1500,"src":"16358:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3830,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"16346:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1533_$","typeString":"type(library Panic)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"16346:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3836,"nodeType":"ExpressionStatement","src":"16346:35:12"}]}},{"expression":{"id":3839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"16408:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3817,"id":3840,"nodeType":"Return","src":"16401:13:12"}]},"documentation":{"id":3807,"nodeType":"StructuredDocumentation","src":"16051:85:12","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3842,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:12","nodeType":"FunctionDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"b","nameLocation":"16170:1:12","nodeType":"VariableDeclaration","scope":3842,"src":"16157:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3808,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"e","nameLocation":"16186:1:12","nodeType":"VariableDeclaration","scope":3842,"src":"16173:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3810,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"m","nameLocation":"16202:1:12","nodeType":"VariableDeclaration","scope":3842,"src":"16189:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3812,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:12"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3842,"src":"16228:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3815,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:12"},"scope":4761,"src":"16141:280:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3887,"nodeType":"Block","src":"16675:771:12","statements":[{"condition":{"arguments":[{"id":3857,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"16700:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3856,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"16689:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3866,"nodeType":"IfStatement","src":"16685:47:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3860,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3855,"id":3865,"nodeType":"Return","src":"16704:28:12"}},{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:12","nodeType":"VariableDeclaration","scope":3887,"src":"16743:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3871,"initialValue":{"expression":{"id":3869,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"16758:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:12","memberName":"length","nodeType":"MemberAccess","src":"16758:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:12"},{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3872,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"16848:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3875,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"16874:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:12","memberName":"length","nodeType":"MemberAccess","src":"16874:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3877,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"16884:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:12","memberName":"length","nodeType":"MemberAccess","src":"16884:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3879,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"16894:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3880,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"16900:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3881,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"16903:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3882,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"16906:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3873,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3885,"nodeType":"ExpressionStatement","src":"16848:60:12"},{"AST":{"nativeSrc":"16944:496:12","nodeType":"YulBlock","src":"16944:496:12","statements":[{"nativeSrc":"16958:32:12","nodeType":"YulVariableDeclaration","src":"16958:32:12","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:12","nodeType":"YulIdentifier","src":"16977:6:12"},{"kind":"number","nativeSrc":"16985:4:12","nodeType":"YulLiteral","src":"16985:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:12","nodeType":"YulIdentifier","src":"16973:3:12"},"nativeSrc":"16973:17:12","nodeType":"YulFunctionCall","src":"16973:17:12"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:12","nodeType":"YulTypedName","src":"16962:7:12","type":""}]},{"nativeSrc":"17080:73:12","nodeType":"YulAssignment","src":"17080:73:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:12","nodeType":"YulIdentifier","src":"17102:3:12"},"nativeSrc":"17102:5:12","nodeType":"YulFunctionCall","src":"17102:5:12"},{"kind":"number","nativeSrc":"17109:4:12","nodeType":"YulLiteral","src":"17109:4:12","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:12","nodeType":"YulIdentifier","src":"17115:7:12"},{"arguments":[{"name":"result","nativeSrc":"17130:6:12","nodeType":"YulIdentifier","src":"17130:6:12"}],"functionName":{"name":"mload","nativeSrc":"17124:5:12","nodeType":"YulIdentifier","src":"17124:5:12"},"nativeSrc":"17124:13:12","nodeType":"YulFunctionCall","src":"17124:13:12"},{"name":"dataPtr","nativeSrc":"17139:7:12","nodeType":"YulIdentifier","src":"17139:7:12"},{"name":"mLen","nativeSrc":"17148:4:12","nodeType":"YulIdentifier","src":"17148:4:12"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:12","nodeType":"YulIdentifier","src":"17091:10:12"},"nativeSrc":"17091:62:12","nodeType":"YulFunctionCall","src":"17091:62:12"},"variableNames":[{"name":"success","nativeSrc":"17080:7:12","nodeType":"YulIdentifier","src":"17080:7:12"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:12","nodeType":"YulIdentifier","src":"17309:6:12"},{"name":"mLen","nativeSrc":"17317:4:12","nodeType":"YulIdentifier","src":"17317:4:12"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:12","nodeType":"YulIdentifier","src":"17302:6:12"},"nativeSrc":"17302:20:12","nodeType":"YulFunctionCall","src":"17302:20:12"},"nativeSrc":"17302:20:12","nodeType":"YulExpressionStatement","src":"17302:20:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:12","nodeType":"YulLiteral","src":"17405:4:12","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:12","nodeType":"YulIdentifier","src":"17415:7:12"},{"name":"mLen","nativeSrc":"17424:4:12","nodeType":"YulIdentifier","src":"17424:4:12"}],"functionName":{"name":"add","nativeSrc":"17411:3:12","nodeType":"YulIdentifier","src":"17411:3:12"},"nativeSrc":"17411:18:12","nodeType":"YulFunctionCall","src":"17411:18:12"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:12","nodeType":"YulIdentifier","src":"17398:6:12"},"nativeSrc":"17398:32:12","nodeType":"YulFunctionCall","src":"17398:32:12"},"nativeSrc":"17398:32:12","nodeType":"YulExpressionStatement","src":"17398:32:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3868,"isOffset":false,"isSlot":false,"src":"17148:4:12","valueSize":1},{"declaration":3868,"isOffset":false,"isSlot":false,"src":"17317:4:12","valueSize":1},{"declaration":3868,"isOffset":false,"isSlot":false,"src":"17424:4:12","valueSize":1},{"declaration":3854,"isOffset":false,"isSlot":false,"src":"16977:6:12","valueSize":1},{"declaration":3854,"isOffset":false,"isSlot":false,"src":"17130:6:12","valueSize":1},{"declaration":3854,"isOffset":false,"isSlot":false,"src":"17309:6:12","valueSize":1},{"declaration":3852,"isOffset":false,"isSlot":false,"src":"17080:7:12","valueSize":1}],"flags":["memory-safe"],"id":3886,"nodeType":"InlineAssembly","src":"16919:521:12"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"16427:88:12","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3888,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:12","nodeType":"FunctionDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"b","nameLocation":"16561:1:12","nodeType":"VariableDeclaration","scope":3888,"src":"16548:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3844,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"e","nameLocation":"16585:1:12","nodeType":"VariableDeclaration","scope":3888,"src":"16572:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3846,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"m","nameLocation":"16609:1:12","nodeType":"VariableDeclaration","scope":3888,"src":"16596:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3848,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:12"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"success","nameLocation":"16645:7:12","nodeType":"VariableDeclaration","scope":3888,"src":"16640:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3851,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3854,"mutability":"mutable","name":"result","nameLocation":"16667:6:12","nodeType":"VariableDeclaration","scope":3888,"src":"16654:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3853,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:12"},"scope":4761,"src":"16520:926:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3920,"nodeType":"Block","src":"17601:176:12","statements":[{"body":{"id":3916,"nodeType":"Block","src":"17658:92:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3907,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"17676:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3909,"indexExpression":{"id":3908,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"17686:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3915,"nodeType":"IfStatement","src":"17672:68:12","trueBody":{"id":3914,"nodeType":"Block","src":"17695:45:12","statements":[{"expression":{"hexValue":"66616c7365","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3895,"id":3913,"nodeType":"Return","src":"17713:12:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"17631:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3901,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"17635:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:12","memberName":"length","nodeType":"MemberAccess","src":"17635:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3917,"initializationExpression":{"assignments":[3897],"declarations":[{"constant":false,"id":3897,"mutability":"mutable","name":"i","nameLocation":"17624:1:12","nodeType":"VariableDeclaration","scope":3917,"src":"17616:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3899,"initialValue":{"hexValue":"30","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:12","subExpression":{"id":3904,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"17655:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3906,"nodeType":"ExpressionStatement","src":"17653:3:12"},"nodeType":"ForStatement","src":"17611:139:12"},{"expression":{"hexValue":"74727565","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3895,"id":3919,"nodeType":"Return","src":"17759:11:12"}]},"documentation":{"id":3889,"nodeType":"StructuredDocumentation","src":"17452:72:12","text":" @dev Returns whether the provided byte array is zero."},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:12","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:12","nodeType":"VariableDeclaration","scope":3921,"src":"17549:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3890,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:12"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3921,"src":"17595:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3893,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:12"},"scope":4761,"src":"17529:248:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4139,"nodeType":"Block","src":"18137:5124:12","statements":[{"id":4138,"nodeType":"UncheckedBlock","src":"18147:5108:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"18241:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3935,"nodeType":"IfStatement","src":"18237:53:12","trueBody":{"id":3934,"nodeType":"Block","src":"18249:41:12","statements":[{"expression":{"id":3932,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"18274:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3928,"id":3933,"nodeType":"Return","src":"18267:8:12"}]}},{"assignments":[3937],"declarations":[{"constant":false,"id":3937,"mutability":"mutable","name":"aa","nameLocation":"19225:2:12","nodeType":"VariableDeclaration","scope":4138,"src":"19217:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3939,"initialValue":{"id":3938,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"19230:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:12"},{"assignments":[3941],"declarations":[{"constant":false,"id":3941,"mutability":"mutable","name":"xn","nameLocation":"19253:2:12","nodeType":"VariableDeclaration","scope":4138,"src":"19245:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3943,"initialValue":{"hexValue":"31","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19278:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3959,"nodeType":"IfStatement","src":"19274:92:12","trueBody":{"id":3958,"nodeType":"Block","src":"19296:70:12","statements":[{"expression":{"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3950,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19314:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3953,"nodeType":"ExpressionStatement","src":"19314:10:12"},{"expression":{"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3954,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"19342:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3957,"nodeType":"ExpressionStatement","src":"19342:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19383:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3975,"nodeType":"IfStatement","src":"19379:90:12","trueBody":{"id":3974,"nodeType":"Block","src":"19400:69:12","statements":[{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3966,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19418:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3969,"nodeType":"ExpressionStatement","src":"19418:9:12"},{"expression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3970,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"19445:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3973,"nodeType":"ExpressionStatement","src":"19445:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3976,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19486:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3991,"nodeType":"IfStatement","src":"19482:90:12","trueBody":{"id":3990,"nodeType":"Block","src":"19503:69:12","statements":[{"expression":{"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3982,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19521:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3985,"nodeType":"ExpressionStatement","src":"19521:9:12"},{"expression":{"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3986,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"19548:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3989,"nodeType":"ExpressionStatement","src":"19548:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3992,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19589:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4007,"nodeType":"IfStatement","src":"19585:89:12","trueBody":{"id":4006,"nodeType":"Block","src":"19606:68:12","statements":[{"expression":{"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3998,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19624:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4001,"nodeType":"ExpressionStatement","src":"19624:9:12"},{"expression":{"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4002,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"19651:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4005,"nodeType":"ExpressionStatement","src":"19651:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19691:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4023,"nodeType":"IfStatement","src":"19687:87:12","trueBody":{"id":4022,"nodeType":"Block","src":"19707:67:12","statements":[{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4014,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19725:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4017,"nodeType":"ExpressionStatement","src":"19725:8:12"},{"expression":{"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4018,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"19751:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4021,"nodeType":"ExpressionStatement","src":"19751:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4024,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19791:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4039,"nodeType":"IfStatement","src":"19787:87:12","trueBody":{"id":4038,"nodeType":"Block","src":"19807:67:12","statements":[{"expression":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4030,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19825:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4033,"nodeType":"ExpressionStatement","src":"19825:8:12"},{"expression":{"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4034,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"19851:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4037,"nodeType":"ExpressionStatement","src":"19851:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4040,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"19891:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4044,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4051,"nodeType":"IfStatement","src":"19887:61:12","trueBody":{"id":4050,"nodeType":"Block","src":"19907:41:12","statements":[{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4046,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"19925:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4049,"nodeType":"ExpressionStatement","src":"19925:8:12"}]}},{"expression":{"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4052,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"20368:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4054,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"20378:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4060,"nodeType":"ExpressionStatement","src":"20368:18:12"},{"expression":{"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4061,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22273:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4062,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22279:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"22284:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4064,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22288:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4071,"nodeType":"ExpressionStatement","src":"22273:23:12"},{"expression":{"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4072,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22382:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22388:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"22393:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4075,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22397:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4082,"nodeType":"ExpressionStatement","src":"22382:23:12"},{"expression":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4083,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22493:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4084,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22499:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"22504:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4086,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22508:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4093,"nodeType":"ExpressionStatement","src":"22493:23:12"},{"expression":{"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4094,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22602:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22608:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"22613:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4097,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22617:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4104,"nodeType":"ExpressionStatement","src":"22602:23:12"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4105,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22712:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4106,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22718:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"22723:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4108,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22727:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"22712:23:12"},{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4116,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22822:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22828:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"22833:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4119,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"22837:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4126,"nodeType":"ExpressionStatement","src":"22822:23:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4127,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"23211:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4130,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"23232:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"23237:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4132,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"23241:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4128,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"23216:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"23216:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3928,"id":4137,"nodeType":"Return","src":"23204:40:12"}]}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"17783:292:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4140,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:12","nodeType":"FunctionDefinition","parameters":{"id":3925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"a","nameLocation":"18102:1:12","nodeType":"VariableDeclaration","scope":4140,"src":"18094:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:12"},"returnParameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4140,"src":"18128:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:12"},"scope":4761,"src":"18080:5181:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4173,"nodeType":"Block","src":"23434:171:12","statements":[{"id":4172,"nodeType":"UncheckedBlock","src":"23444:155:12","statements":[{"assignments":[4152],"declarations":[{"constant":false,"id":4152,"mutability":"mutable","name":"result","nameLocation":"23476:6:12","nodeType":"VariableDeclaration","scope":4172,"src":"23468:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4156,"initialValue":{"arguments":[{"id":4154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"23490:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4153,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4140,4174],"referencedDeclaration":4140,"src":"23485:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"23513:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4161,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"23555:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}],"id":4160,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"23538:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3167_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"23568:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"23577:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4166,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"23586:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4158,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"23522:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"23522:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4150,"id":4171,"nodeType":"Return","src":"23506:82:12"}]}]},"documentation":{"id":4141,"nodeType":"StructuredDocumentation","src":"23267:86:12","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4174,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:12","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"a","nameLocation":"23380:1:12","nodeType":"VariableDeclaration","scope":4174,"src":"23372:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:12","nodeType":"VariableDeclaration","scope":4174,"src":"23383:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"},"typeName":{"id":4145,"nodeType":"UserDefinedTypeName","pathNode":{"id":4144,"name":"Rounding","nameLocations":["23383:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3167,"src":"23383:8:12"},"referencedDeclaration":3167,"src":"23383:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:12"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4174,"src":"23425:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:12"},"scope":4761,"src":"23358:247:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4369,"nodeType":"Block","src":"23796:981:12","statements":[{"assignments":[4183],"declarations":[{"constant":false,"id":4183,"mutability":"mutable","name":"result","nameLocation":"23814:6:12","nodeType":"VariableDeclaration","scope":4369,"src":"23806:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4182,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4185,"initialValue":{"hexValue":"30","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:12"},{"assignments":[4187],"declarations":[{"constant":false,"id":4187,"mutability":"mutable","name":"exp","nameLocation":"23842:3:12","nodeType":"VariableDeclaration","scope":4369,"src":"23834:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4188,"nodeType":"VariableDeclarationStatement","src":"23834:11:12"},{"id":4366,"nodeType":"UncheckedBlock","src":"23855:893:12","statements":[{"expression":{"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4189,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"23879:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"23907:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4191,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"23891:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"23891:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4204,"nodeType":"ExpressionStatement","src":"23879:51:12"},{"expression":{"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"23944:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4206,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"23954:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4208,"nodeType":"ExpressionStatement","src":"23944:13:12"},{"expression":{"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"23971:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4210,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"23981:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4212,"nodeType":"ExpressionStatement","src":"23971:13:12"},{"expression":{"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4213,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"23999:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24026:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4215,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"24010:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"24010:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4228,"nodeType":"ExpressionStatement","src":"23999:49:12"},{"expression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24062:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4230,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24072:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4232,"nodeType":"ExpressionStatement","src":"24062:13:12"},{"expression":{"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"24089:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4234,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24099:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4236,"nodeType":"ExpressionStatement","src":"24089:13:12"},{"expression":{"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4237,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24117:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24144:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4239,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"24128:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"24128:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4252,"nodeType":"ExpressionStatement","src":"24117:49:12"},{"expression":{"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24180:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4254,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24190:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4256,"nodeType":"ExpressionStatement","src":"24180:13:12"},{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"24207:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4258,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24217:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"24207:13:12"},{"expression":{"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4261,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24235:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24262:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4263,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"24246:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"24246:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4276,"nodeType":"ExpressionStatement","src":"24235:49:12"},{"expression":{"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24298:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4278,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24308:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4280,"nodeType":"ExpressionStatement","src":"24298:13:12"},{"expression":{"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"24325:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4282,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24335:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4284,"nodeType":"ExpressionStatement","src":"24325:13:12"},{"expression":{"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4285,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24353:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24379:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4287,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"24363:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"24363:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4300,"nodeType":"ExpressionStatement","src":"24353:47:12"},{"expression":{"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24414:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4302,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24424:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4304,"nodeType":"ExpressionStatement","src":"24414:13:12"},{"expression":{"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"24441:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4306,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24451:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4308,"nodeType":"ExpressionStatement","src":"24441:13:12"},{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4309,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24469:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24495:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4311,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"24479:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"24479:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"24469:47:12"},{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24530:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4326,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24540:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4328,"nodeType":"ExpressionStatement","src":"24530:13:12"},{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"24557:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4330,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24567:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4332,"nodeType":"ExpressionStatement","src":"24557:13:12"},{"expression":{"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4333,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24585:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24611:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4335,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"24595:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"24595:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4348,"nodeType":"ExpressionStatement","src":"24585:47:12"},{"expression":{"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24646:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4350,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24656:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4352,"nodeType":"ExpressionStatement","src":"24646:13:12"},{"expression":{"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4353,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"24673:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4354,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"24683:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4356,"nodeType":"ExpressionStatement","src":"24673:13:12"},{"expression":{"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"24701:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"24727:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4358,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"24711:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"24711:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4365,"nodeType":"ExpressionStatement","src":"24701:36:12"}]},{"expression":{"id":4367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"24764:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4181,"id":4368,"nodeType":"Return","src":"24757:13:12"}]},"documentation":{"id":4175,"nodeType":"StructuredDocumentation","src":"23611:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4370,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:12","nodeType":"FunctionDefinition","parameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"value","nameLocation":"23757:5:12","nodeType":"VariableDeclaration","scope":4370,"src":"23749:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:12"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4370,"src":"23787:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:12"},"scope":4761,"src":"23735:1042:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4403,"nodeType":"Block","src":"25010:175:12","statements":[{"id":4402,"nodeType":"UncheckedBlock","src":"25020:159:12","statements":[{"assignments":[4382],"declarations":[{"constant":false,"id":4382,"mutability":"mutable","name":"result","nameLocation":"25052:6:12","nodeType":"VariableDeclaration","scope":4402,"src":"25044:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4386,"initialValue":{"arguments":[{"id":4384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"25066:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4383,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4370,4404],"referencedDeclaration":4370,"src":"25061:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"25093:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4391,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"25135:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}],"id":4390,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"25118:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3167_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"25153:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"25162:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4388,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"25102:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"25102:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4380,"id":4401,"nodeType":"Return","src":"25086:82:12"}]}]},"documentation":{"id":4371,"nodeType":"StructuredDocumentation","src":"24783:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4404,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:12","nodeType":"FunctionDefinition","parameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"value","nameLocation":"24952:5:12","nodeType":"VariableDeclaration","scope":4404,"src":"24944:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4372,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4376,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:12","nodeType":"VariableDeclaration","scope":4404,"src":"24959:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"},"typeName":{"id":4375,"nodeType":"UserDefinedTypeName","pathNode":{"id":4374,"name":"Rounding","nameLocations":["24959:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3167,"src":"24959:8:12"},"referencedDeclaration":3167,"src":"24959:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:12"},"returnParameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4404,"src":"25001:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:12"},"scope":4761,"src":"24930:255:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4532,"nodeType":"Block","src":"25378:854:12","statements":[{"assignments":[4413],"declarations":[{"constant":false,"id":4413,"mutability":"mutable","name":"result","nameLocation":"25396:6:12","nodeType":"VariableDeclaration","scope":4532,"src":"25388:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4415,"initialValue":{"hexValue":"30","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:12"},{"id":4529,"nodeType":"UncheckedBlock","src":"25416:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"25444:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4432,"nodeType":"IfStatement","src":"25440:103:12","trueBody":{"id":4431,"nodeType":"Block","src":"25463:80:12","statements":[{"expression":{"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"25481:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4426,"nodeType":"ExpressionStatement","src":"25481:17:12"},{"expression":{"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"25516:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4430,"nodeType":"ExpressionStatement","src":"25516:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"25560:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4449,"nodeType":"IfStatement","src":"25556:103:12","trueBody":{"id":4448,"nodeType":"Block","src":"25579:80:12","statements":[{"expression":{"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"25597:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4443,"nodeType":"ExpressionStatement","src":"25597:17:12"},{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"25632:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4447,"nodeType":"ExpressionStatement","src":"25632:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"25676:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4466,"nodeType":"IfStatement","src":"25672:103:12","trueBody":{"id":4465,"nodeType":"Block","src":"25695:80:12","statements":[{"expression":{"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"25713:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4460,"nodeType":"ExpressionStatement","src":"25713:17:12"},{"expression":{"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"25748:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4464,"nodeType":"ExpressionStatement","src":"25748:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"25792:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4483,"nodeType":"IfStatement","src":"25788:100:12","trueBody":{"id":4482,"nodeType":"Block","src":"25810:78:12","statements":[{"expression":{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"25828:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4477,"nodeType":"ExpressionStatement","src":"25828:16:12"},{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"25862:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4481,"nodeType":"ExpressionStatement","src":"25862:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"25905:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4500,"nodeType":"IfStatement","src":"25901:100:12","trueBody":{"id":4499,"nodeType":"Block","src":"25923:78:12","statements":[{"expression":{"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"25941:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4494,"nodeType":"ExpressionStatement","src":"25941:16:12"},{"expression":{"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4495,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"25975:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4498,"nodeType":"ExpressionStatement","src":"25975:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"26018:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4517,"nodeType":"IfStatement","src":"26014:100:12","trueBody":{"id":4516,"nodeType":"Block","src":"26036:78:12","statements":[{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"26054:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4511,"nodeType":"ExpressionStatement","src":"26054:16:12"},{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"26088:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"nodeType":"ExpressionStatement","src":"26088:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"26131:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4528,"nodeType":"IfStatement","src":"26127:66:12","trueBody":{"id":4527,"nodeType":"Block","src":"26149:44:12","statements":[{"expression":{"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"26167:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4526,"nodeType":"ExpressionStatement","src":"26167:11:12"}]}}]},{"expression":{"id":4530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"26219:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4411,"id":4531,"nodeType":"Return","src":"26212:13:12"}]},"documentation":{"id":4405,"nodeType":"StructuredDocumentation","src":"25191:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4533,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:12","nodeType":"FunctionDefinition","parameters":{"id":4408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"value","nameLocation":"25339:5:12","nodeType":"VariableDeclaration","scope":4533,"src":"25331:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:12"},"returnParameters":{"id":4411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4533,"src":"25369:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:12"},"scope":4761,"src":"25316:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4566,"nodeType":"Block","src":"26467:177:12","statements":[{"id":4565,"nodeType":"UncheckedBlock","src":"26477:161:12","statements":[{"assignments":[4545],"declarations":[{"constant":false,"id":4545,"mutability":"mutable","name":"result","nameLocation":"26509:6:12","nodeType":"VariableDeclaration","scope":4565,"src":"26501:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4549,"initialValue":{"arguments":[{"id":4547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"26524:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4546,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4533,4567],"referencedDeclaration":4533,"src":"26518:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4550,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"26551:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4554,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"26593:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}],"id":4553,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"26576:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3167_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"26612:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"26621:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4551,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"26560:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"26560:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4543,"id":4564,"nodeType":"Return","src":"26544:83:12"}]}]},"documentation":{"id":4534,"nodeType":"StructuredDocumentation","src":"26238:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4567,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:12","nodeType":"FunctionDefinition","parameters":{"id":4540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"value","nameLocation":"26409:5:12","nodeType":"VariableDeclaration","scope":4567,"src":"26401:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4539,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:12","nodeType":"VariableDeclaration","scope":4567,"src":"26416:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"},"typeName":{"id":4538,"nodeType":"UserDefinedTypeName","pathNode":{"id":4537,"name":"Rounding","nameLocations":["26416:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3167,"src":"26416:8:12"},"referencedDeclaration":3167,"src":"26416:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:12"},"returnParameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4567,"src":"26458:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:12"},"scope":4761,"src":"26386:258:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4703,"nodeType":"Block","src":"26964:674:12","statements":[{"assignments":[4576],"declarations":[{"constant":false,"id":4576,"mutability":"mutable","name":"result","nameLocation":"26982:6:12","nodeType":"VariableDeclaration","scope":4703,"src":"26974:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4575,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4578,"initialValue":{"hexValue":"30","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:12"},{"assignments":[4580],"declarations":[{"constant":false,"id":4580,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:12","nodeType":"VariableDeclaration","scope":4703,"src":"27002:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4579,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4581,"nodeType":"VariableDeclarationStatement","src":"27002:12:12"},{"id":4700,"nodeType":"UncheckedBlock","src":"27024:585:12","statements":[{"expression":{"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4582,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27048:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27071:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4583,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"27055:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"27055:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4595,"nodeType":"ExpressionStatement","src":"27048:46:12"},{"expression":{"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27108:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4597,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27118:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4601,"nodeType":"ExpressionStatement","src":"27108:20:12"},{"expression":{"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4602,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"27142:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27152:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4607,"nodeType":"ExpressionStatement","src":"27142:19:12"},{"expression":{"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4608,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27176:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27199:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4609,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"27183:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"27183:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4621,"nodeType":"ExpressionStatement","src":"27176:45:12"},{"expression":{"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27235:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27245:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4627,"nodeType":"ExpressionStatement","src":"27235:19:12"},{"expression":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"27268:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4629,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27278:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4633,"nodeType":"ExpressionStatement","src":"27268:18:12"},{"expression":{"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4634,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27301:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27324:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4635,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"27308:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"27308:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4647,"nodeType":"ExpressionStatement","src":"27301:45:12"},{"expression":{"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27360:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4649,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27370:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4653,"nodeType":"ExpressionStatement","src":"27360:19:12"},{"expression":{"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"27393:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27403:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4659,"nodeType":"ExpressionStatement","src":"27393:18:12"},{"expression":{"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4660,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27426:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27449:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4661,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"27433:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"27433:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4673,"nodeType":"ExpressionStatement","src":"27426:45:12"},{"expression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27485:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27495:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4679,"nodeType":"ExpressionStatement","src":"27485:19:12"},{"expression":{"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"27518:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4681,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"27528:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4685,"nodeType":"ExpressionStatement","src":"27518:18:12"},{"expression":{"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"27551:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"27577:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4687,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"27561:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"27561:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"nodeType":"ExpressionStatement","src":"27551:47:12"}]},{"expression":{"id":4701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"27625:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4574,"id":4702,"nodeType":"Return","src":"27618:13:12"}]},"documentation":{"id":4568,"nodeType":"StructuredDocumentation","src":"26650:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4704,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:12","nodeType":"FunctionDefinition","parameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4570,"mutability":"mutable","name":"value","nameLocation":"26925:5:12","nodeType":"VariableDeclaration","scope":4704,"src":"26917:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:12"},"returnParameters":{"id":4574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4704,"src":"26955:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4572,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:12"},"scope":4761,"src":"26901:737:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4740,"nodeType":"Block","src":"27875:184:12","statements":[{"id":4739,"nodeType":"UncheckedBlock","src":"27885:168:12","statements":[{"assignments":[4716],"declarations":[{"constant":false,"id":4716,"mutability":"mutable","name":"result","nameLocation":"27917:6:12","nodeType":"VariableDeclaration","scope":4739,"src":"27909:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4715,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4720,"initialValue":{"arguments":[{"id":4718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"27933:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4717,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4704,4741],"referencedDeclaration":4704,"src":"27926:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"27960:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4725,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"28002:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}],"id":4724,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"27985:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3167_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"28021:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"28036:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4722,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"27969:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"27969:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4714,"id":4738,"nodeType":"Return","src":"27953:89:12"}]}]},"documentation":{"id":4705,"nodeType":"StructuredDocumentation","src":"27644:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4741,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:12","nodeType":"FunctionDefinition","parameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4707,"mutability":"mutable","name":"value","nameLocation":"27817:5:12","nodeType":"VariableDeclaration","scope":4741,"src":"27809:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4706,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4710,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:12","nodeType":"VariableDeclaration","scope":4741,"src":"27824:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"},"typeName":{"id":4709,"nodeType":"UserDefinedTypeName","pathNode":{"id":4708,"name":"Rounding","nameLocations":["27824:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3167,"src":"27824:8:12"},"referencedDeclaration":3167,"src":"27824:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:12"},"returnParameters":{"id":4714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4741,"src":"27866:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4712,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:12"},"scope":4761,"src":"27793:266:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4759,"nodeType":"Block","src":"28257:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4752,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"28280:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}],"id":4751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4750,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:12","typeDescriptions":{}}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4749,"id":4758,"nodeType":"Return","src":"28267:31:12"}]},"documentation":{"id":4742,"nodeType":"StructuredDocumentation","src":"28065:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4760,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:12","nodeType":"FunctionDefinition","parameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:12","nodeType":"VariableDeclaration","scope":4760,"src":"28209:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"},"typeName":{"id":4744,"nodeType":"UserDefinedTypeName","pathNode":{"id":4743,"name":"Rounding","nameLocations":["28209:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3167,"src":"28209:8:12"},"referencedDeclaration":3167,"src":"28209:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3167","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:12"},"returnParameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4760,"src":"28251:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4747,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:12"},"scope":4761,"src":"28183:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4762,"src":"281:28026:12","usedErrors":[],"usedEvents":[]}],"src":"103:28205:12"},"id":12},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6526]},"id":6527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4763,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4764,"nodeType":"StructuredDocumentation","src":"218:550:13","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6526,"linearizedBaseContracts":[6526],"name":"SafeCast","nameLocation":"777:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4765,"nodeType":"StructuredDocumentation","src":"792:68:13","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4771,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:13","nodeType":"ErrorDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"bits","nameLocation":"908:4:13","nodeType":"VariableDeclaration","scope":4771,"src":"902:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4766,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"value","nameLocation":"922:5:13","nodeType":"VariableDeclaration","scope":4771,"src":"914:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:13"},"src":"865:64:13"},{"documentation":{"id":4772,"nodeType":"StructuredDocumentation","src":"935:75:13","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4776,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:13","nodeType":"ErrorDefinition","parameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"value","nameLocation":"1056:5:13","nodeType":"VariableDeclaration","scope":4776,"src":"1049:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4773,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:13"},"src":"1015:48:13"},{"documentation":{"id":4777,"nodeType":"StructuredDocumentation","src":"1069:67:13","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4783,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:13","nodeType":"ErrorDefinition","parameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4779,"mutability":"mutable","name":"bits","nameLocation":"1183:4:13","nodeType":"VariableDeclaration","scope":4783,"src":"1177:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4778,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4781,"mutability":"mutable","name":"value","nameLocation":"1196:5:13","nodeType":"VariableDeclaration","scope":4783,"src":"1189:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4780,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:13"},"src":"1141:62:13"},{"documentation":{"id":4784,"nodeType":"StructuredDocumentation","src":"1209:75:13","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4788,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:13","nodeType":"ErrorDefinition","parameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4786,"mutability":"mutable","name":"value","nameLocation":"1331:5:13","nodeType":"VariableDeclaration","scope":4788,"src":"1323:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:13"},"src":"1289:49:13"},{"body":{"id":4815,"nodeType":"Block","src":"1695:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"1709:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4798,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4797,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:13","memberName":"max","nodeType":"MemberAccess","src":"1717:17:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4809,"nodeType":"IfStatement","src":"1705:105:13","trueBody":{"id":4808,"nodeType":"Block","src":"1736:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"1793:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4803,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"1757:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4807,"nodeType":"RevertStatement","src":"1750:49:13"}]}},{"expression":{"arguments":[{"id":4812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"1834:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4810,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:13","typeDescriptions":{}}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4795,"id":4814,"nodeType":"Return","src":"1819:21:13"}]},"documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"1344:280:13","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4816,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:13","nodeType":"FunctionDefinition","parameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"value","nameLocation":"1656:5:13","nodeType":"VariableDeclaration","scope":4816,"src":"1648:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:13"},"returnParameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4816,"src":"1686:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4793,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:13"},"scope":6526,"src":"1629:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4843,"nodeType":"Block","src":"2204:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"2218:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4826,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4825,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:13","memberName":"max","nodeType":"MemberAccess","src":"2226:17:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4837,"nodeType":"IfStatement","src":"2214:105:13","trueBody":{"id":4836,"nodeType":"Block","src":"2245:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"2302:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4831,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"2266:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4835,"nodeType":"RevertStatement","src":"2259:49:13"}]}},{"expression":{"arguments":[{"id":4840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"2343:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4838,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:13","typeDescriptions":{}}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4823,"id":4842,"nodeType":"Return","src":"2328:21:13"}]},"documentation":{"id":4817,"nodeType":"StructuredDocumentation","src":"1853:280:13","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4844,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:13","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4819,"mutability":"mutable","name":"value","nameLocation":"2165:5:13","nodeType":"VariableDeclaration","scope":4844,"src":"2157:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:13"},"returnParameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4844,"src":"2195:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4821,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:13"},"scope":6526,"src":"2138:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4871,"nodeType":"Block","src":"2713:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"2727:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4854,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4853,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:13","memberName":"max","nodeType":"MemberAccess","src":"2735:17:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4865,"nodeType":"IfStatement","src":"2723:105:13","trueBody":{"id":4864,"nodeType":"Block","src":"2754:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"2811:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4859,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"2775:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4863,"nodeType":"RevertStatement","src":"2768:49:13"}]}},{"expression":{"arguments":[{"id":4868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"2852:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4866,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:13","typeDescriptions":{}}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4851,"id":4870,"nodeType":"Return","src":"2837:21:13"}]},"documentation":{"id":4845,"nodeType":"StructuredDocumentation","src":"2362:280:13","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4872,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:13","nodeType":"FunctionDefinition","parameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"value","nameLocation":"2674:5:13","nodeType":"VariableDeclaration","scope":4872,"src":"2666:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:13"},"returnParameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4872,"src":"2704:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4849,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:13"},"scope":6526,"src":"2647:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4899,"nodeType":"Block","src":"3222:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"3236:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4882,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4881,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:13","memberName":"max","nodeType":"MemberAccess","src":"3244:17:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4893,"nodeType":"IfStatement","src":"3232:105:13","trueBody":{"id":4892,"nodeType":"Block","src":"3263:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"3320:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4887,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"3284:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4891,"nodeType":"RevertStatement","src":"3277:49:13"}]}},{"expression":{"arguments":[{"id":4896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"3361:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4894,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:13","typeDescriptions":{}}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4879,"id":4898,"nodeType":"Return","src":"3346:21:13"}]},"documentation":{"id":4873,"nodeType":"StructuredDocumentation","src":"2871:280:13","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4900,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:13","nodeType":"FunctionDefinition","parameters":{"id":4876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4875,"mutability":"mutable","name":"value","nameLocation":"3183:5:13","nodeType":"VariableDeclaration","scope":4900,"src":"3175:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4874,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:13"},"returnParameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4900,"src":"3213:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4877,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:13"},"scope":6526,"src":"3156:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4927,"nodeType":"Block","src":"3731:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"3745:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4910,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4909,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:13","memberName":"max","nodeType":"MemberAccess","src":"3753:17:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4921,"nodeType":"IfStatement","src":"3741:105:13","trueBody":{"id":4920,"nodeType":"Block","src":"3772:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"3829:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4915,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"3793:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4919,"nodeType":"RevertStatement","src":"3786:49:13"}]}},{"expression":{"arguments":[{"id":4924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"3870:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4922,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:13","typeDescriptions":{}}},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4907,"id":4926,"nodeType":"Return","src":"3855:21:13"}]},"documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"3380:280:13","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4928,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:13","nodeType":"FunctionDefinition","parameters":{"id":4904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"value","nameLocation":"3692:5:13","nodeType":"VariableDeclaration","scope":4928,"src":"3684:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4902,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:13"},"returnParameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4928,"src":"3722:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4905,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:13"},"scope":6526,"src":"3665:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4955,"nodeType":"Block","src":"4240:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"4254:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4938,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4937,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:13","memberName":"max","nodeType":"MemberAccess","src":"4262:17:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4949,"nodeType":"IfStatement","src":"4250:105:13","trueBody":{"id":4948,"nodeType":"Block","src":"4281:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"4338:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4943,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"4302:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4947,"nodeType":"RevertStatement","src":"4295:49:13"}]}},{"expression":{"arguments":[{"id":4952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"4379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4950,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:13","typeDescriptions":{}}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4935,"id":4954,"nodeType":"Return","src":"4364:21:13"}]},"documentation":{"id":4929,"nodeType":"StructuredDocumentation","src":"3889:280:13","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4956,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:13","nodeType":"FunctionDefinition","parameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"mutability":"mutable","name":"value","nameLocation":"4201:5:13","nodeType":"VariableDeclaration","scope":4956,"src":"4193:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:13"},"returnParameters":{"id":4935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4956,"src":"4231:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4933,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:13"},"scope":6526,"src":"4174:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4983,"nodeType":"Block","src":"4749:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"4763:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4966,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4965,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:13","memberName":"max","nodeType":"MemberAccess","src":"4771:17:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4977,"nodeType":"IfStatement","src":"4759:105:13","trueBody":{"id":4976,"nodeType":"Block","src":"4790:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"4847:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4971,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"4811:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4975,"nodeType":"RevertStatement","src":"4804:49:13"}]}},{"expression":{"arguments":[{"id":4980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"4888:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4978,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:13","typeDescriptions":{}}},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4963,"id":4982,"nodeType":"Return","src":"4873:21:13"}]},"documentation":{"id":4957,"nodeType":"StructuredDocumentation","src":"4398:280:13","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4984,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:13","nodeType":"FunctionDefinition","parameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"mutability":"mutable","name":"value","nameLocation":"4710:5:13","nodeType":"VariableDeclaration","scope":4984,"src":"4702:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:13"},"returnParameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4984,"src":"4740:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4961,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:13"},"scope":6526,"src":"4683:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5011,"nodeType":"Block","src":"5258:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5272:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4994,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4993,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:13","memberName":"max","nodeType":"MemberAccess","src":"5280:17:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5005,"nodeType":"IfStatement","src":"5268:105:13","trueBody":{"id":5004,"nodeType":"Block","src":"5299:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4999,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"5320:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5003,"nodeType":"RevertStatement","src":"5313:49:13"}]}},{"expression":{"arguments":[{"id":5008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5397:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5006,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:13","typeDescriptions":{}}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4991,"id":5010,"nodeType":"Return","src":"5382:21:13"}]},"documentation":{"id":4985,"nodeType":"StructuredDocumentation","src":"4907:280:13","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5012,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:13","nodeType":"FunctionDefinition","parameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"value","nameLocation":"5219:5:13","nodeType":"VariableDeclaration","scope":5012,"src":"5211:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4986,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:13"},"returnParameters":{"id":4991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5012,"src":"5249:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4989,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:13"},"scope":6526,"src":"5192:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5039,"nodeType":"Block","src":"5767:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"5781:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5022,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5021,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:13","memberName":"max","nodeType":"MemberAccess","src":"5789:17:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5033,"nodeType":"IfStatement","src":"5777:105:13","trueBody":{"id":5032,"nodeType":"Block","src":"5808:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"5865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5027,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"5829:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5031,"nodeType":"RevertStatement","src":"5822:49:13"}]}},{"expression":{"arguments":[{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"5906:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5034,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:13","typeDescriptions":{}}},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5019,"id":5038,"nodeType":"Return","src":"5891:21:13"}]},"documentation":{"id":5013,"nodeType":"StructuredDocumentation","src":"5416:280:13","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5040,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:13","nodeType":"FunctionDefinition","parameters":{"id":5016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5015,"mutability":"mutable","name":"value","nameLocation":"5728:5:13","nodeType":"VariableDeclaration","scope":5040,"src":"5720:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:13"},"returnParameters":{"id":5019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5040,"src":"5758:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5017,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:13"},"scope":6526,"src":"5701:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5067,"nodeType":"Block","src":"6276:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"6290:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5050,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5049,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:13","memberName":"max","nodeType":"MemberAccess","src":"6298:17:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5061,"nodeType":"IfStatement","src":"6286:105:13","trueBody":{"id":5060,"nodeType":"Block","src":"6317:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"6374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5055,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"6338:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5059,"nodeType":"RevertStatement","src":"6331:49:13"}]}},{"expression":{"arguments":[{"id":5064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"6415:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5062,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:13","typeDescriptions":{}}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5047,"id":5066,"nodeType":"Return","src":"6400:21:13"}]},"documentation":{"id":5041,"nodeType":"StructuredDocumentation","src":"5925:280:13","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5068,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:13","nodeType":"FunctionDefinition","parameters":{"id":5044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"value","nameLocation":"6237:5:13","nodeType":"VariableDeclaration","scope":5068,"src":"6229:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5042,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:13"},"returnParameters":{"id":5047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5068,"src":"6267:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5045,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:13"},"scope":6526,"src":"6210:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5095,"nodeType":"Block","src":"6785:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"6799:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5078,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5077,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:13","memberName":"max","nodeType":"MemberAccess","src":"6807:17:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5089,"nodeType":"IfStatement","src":"6795:105:13","trueBody":{"id":5088,"nodeType":"Block","src":"6826:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"6883:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5083,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"6847:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5087,"nodeType":"RevertStatement","src":"6840:49:13"}]}},{"expression":{"arguments":[{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"6924:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5090,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:13","typeDescriptions":{}}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5075,"id":5094,"nodeType":"Return","src":"6909:21:13"}]},"documentation":{"id":5069,"nodeType":"StructuredDocumentation","src":"6434:280:13","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5096,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:13","nodeType":"FunctionDefinition","parameters":{"id":5072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5071,"mutability":"mutable","name":"value","nameLocation":"6746:5:13","nodeType":"VariableDeclaration","scope":5096,"src":"6738:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5070,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:13"},"returnParameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5096,"src":"6776:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5073,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:13"},"scope":6526,"src":"6719:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5123,"nodeType":"Block","src":"7294:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"7308:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5106,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5105,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:13","memberName":"max","nodeType":"MemberAccess","src":"7316:17:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5117,"nodeType":"IfStatement","src":"7304:105:13","trueBody":{"id":5116,"nodeType":"Block","src":"7335:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"7392:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5111,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"7356:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5115,"nodeType":"RevertStatement","src":"7349:49:13"}]}},{"expression":{"arguments":[{"id":5120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"7433:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5118,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:13","typeDescriptions":{}}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5103,"id":5122,"nodeType":"Return","src":"7418:21:13"}]},"documentation":{"id":5097,"nodeType":"StructuredDocumentation","src":"6943:280:13","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5124,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:13","nodeType":"FunctionDefinition","parameters":{"id":5100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5099,"mutability":"mutable","name":"value","nameLocation":"7255:5:13","nodeType":"VariableDeclaration","scope":5124,"src":"7247:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5098,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:13"},"returnParameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5124,"src":"7285:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5101,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:13"},"scope":6526,"src":"7228:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5151,"nodeType":"Block","src":"7803:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"7817:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5134,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5133,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:13","memberName":"max","nodeType":"MemberAccess","src":"7825:17:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5145,"nodeType":"IfStatement","src":"7813:105:13","trueBody":{"id":5144,"nodeType":"Block","src":"7844:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"7901:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5139,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"7865:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5143,"nodeType":"RevertStatement","src":"7858:49:13"}]}},{"expression":{"arguments":[{"id":5148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"7942:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5146,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:13","typeDescriptions":{}}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5131,"id":5150,"nodeType":"Return","src":"7927:21:13"}]},"documentation":{"id":5125,"nodeType":"StructuredDocumentation","src":"7452:280:13","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5152,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:13","nodeType":"FunctionDefinition","parameters":{"id":5128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"value","nameLocation":"7764:5:13","nodeType":"VariableDeclaration","scope":5152,"src":"7756:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5126,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:13"},"returnParameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5152,"src":"7794:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5129,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:13"},"scope":6526,"src":"7737:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5179,"nodeType":"Block","src":"8312:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"8326:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5162,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5161,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:13","memberName":"max","nodeType":"MemberAccess","src":"8334:17:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5173,"nodeType":"IfStatement","src":"8322:105:13","trueBody":{"id":5172,"nodeType":"Block","src":"8353:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"8410:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5167,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"8374:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5171,"nodeType":"RevertStatement","src":"8367:49:13"}]}},{"expression":{"arguments":[{"id":5176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"8451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5174,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:13","typeDescriptions":{}}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5159,"id":5178,"nodeType":"Return","src":"8436:21:13"}]},"documentation":{"id":5153,"nodeType":"StructuredDocumentation","src":"7961:280:13","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5180,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:13","nodeType":"FunctionDefinition","parameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5155,"mutability":"mutable","name":"value","nameLocation":"8273:5:13","nodeType":"VariableDeclaration","scope":5180,"src":"8265:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5154,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:13"},"returnParameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5180,"src":"8303:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5157,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:13"},"scope":6526,"src":"8246:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5207,"nodeType":"Block","src":"8821:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"8835:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5190,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5189,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:13","memberName":"max","nodeType":"MemberAccess","src":"8843:17:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5201,"nodeType":"IfStatement","src":"8831:105:13","trueBody":{"id":5200,"nodeType":"Block","src":"8862:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"8919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5195,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"8883:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5199,"nodeType":"RevertStatement","src":"8876:49:13"}]}},{"expression":{"arguments":[{"id":5204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"8960:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5202,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:13","typeDescriptions":{}}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5187,"id":5206,"nodeType":"Return","src":"8945:21:13"}]},"documentation":{"id":5181,"nodeType":"StructuredDocumentation","src":"8470:280:13","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5208,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:13","nodeType":"FunctionDefinition","parameters":{"id":5184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"value","nameLocation":"8782:5:13","nodeType":"VariableDeclaration","scope":5208,"src":"8774:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5182,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:13"},"returnParameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5208,"src":"8812:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5185,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:13"},"scope":6526,"src":"8755:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5235,"nodeType":"Block","src":"9330:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"9344:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5218,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5217,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:13","memberName":"max","nodeType":"MemberAccess","src":"9352:17:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5229,"nodeType":"IfStatement","src":"9340:105:13","trueBody":{"id":5228,"nodeType":"Block","src":"9371:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"9428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5223,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"9392:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5227,"nodeType":"RevertStatement","src":"9385:49:13"}]}},{"expression":{"arguments":[{"id":5232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"9469:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5230,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:13","typeDescriptions":{}}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5215,"id":5234,"nodeType":"Return","src":"9454:21:13"}]},"documentation":{"id":5209,"nodeType":"StructuredDocumentation","src":"8979:280:13","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5236,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:13","nodeType":"FunctionDefinition","parameters":{"id":5212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"value","nameLocation":"9291:5:13","nodeType":"VariableDeclaration","scope":5236,"src":"9283:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5210,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:13"},"returnParameters":{"id":5215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5236,"src":"9321:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5213,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:13"},"scope":6526,"src":"9264:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5263,"nodeType":"Block","src":"9839:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"9853:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5246,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5245,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:13","memberName":"max","nodeType":"MemberAccess","src":"9861:17:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5257,"nodeType":"IfStatement","src":"9849:105:13","trueBody":{"id":5256,"nodeType":"Block","src":"9880:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"9937:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5251,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"9901:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5255,"nodeType":"RevertStatement","src":"9894:49:13"}]}},{"expression":{"arguments":[{"id":5260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"9978:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5258,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:13","typeDescriptions":{}}},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5243,"id":5262,"nodeType":"Return","src":"9963:21:13"}]},"documentation":{"id":5237,"nodeType":"StructuredDocumentation","src":"9488:280:13","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5264,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:13","nodeType":"FunctionDefinition","parameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5239,"mutability":"mutable","name":"value","nameLocation":"9800:5:13","nodeType":"VariableDeclaration","scope":5264,"src":"9792:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5238,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:13"},"returnParameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5264,"src":"9830:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5241,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:13"},"scope":6526,"src":"9773:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5291,"nodeType":"Block","src":"10348:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"10362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5274,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5273,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:13","memberName":"max","nodeType":"MemberAccess","src":"10370:17:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5285,"nodeType":"IfStatement","src":"10358:105:13","trueBody":{"id":5284,"nodeType":"Block","src":"10389:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"10446:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5279,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"10410:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5283,"nodeType":"RevertStatement","src":"10403:49:13"}]}},{"expression":{"arguments":[{"id":5288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"10487:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5286,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:13","typeDescriptions":{}}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5271,"id":5290,"nodeType":"Return","src":"10472:21:13"}]},"documentation":{"id":5265,"nodeType":"StructuredDocumentation","src":"9997:280:13","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5292,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:13","nodeType":"FunctionDefinition","parameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"value","nameLocation":"10309:5:13","nodeType":"VariableDeclaration","scope":5292,"src":"10301:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5266,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:13"},"returnParameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5292,"src":"10339:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5269,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:13"},"scope":6526,"src":"10282:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5319,"nodeType":"Block","src":"10857:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"10871:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5302,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5301,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:13","memberName":"max","nodeType":"MemberAccess","src":"10879:17:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5313,"nodeType":"IfStatement","src":"10867:105:13","trueBody":{"id":5312,"nodeType":"Block","src":"10898:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"10955:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5307,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"10919:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5311,"nodeType":"RevertStatement","src":"10912:49:13"}]}},{"expression":{"arguments":[{"id":5316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"10996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5314,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:13","typeDescriptions":{}}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5299,"id":5318,"nodeType":"Return","src":"10981:21:13"}]},"documentation":{"id":5293,"nodeType":"StructuredDocumentation","src":"10506:280:13","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5320,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:13","nodeType":"FunctionDefinition","parameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"value","nameLocation":"10818:5:13","nodeType":"VariableDeclaration","scope":5320,"src":"10810:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5294,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:13"},"returnParameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5320,"src":"10848:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5297,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:13"},"scope":6526,"src":"10791:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5347,"nodeType":"Block","src":"11360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"11374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5330,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5329,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:13","memberName":"max","nodeType":"MemberAccess","src":"11382:16:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5341,"nodeType":"IfStatement","src":"11370:103:13","trueBody":{"id":5340,"nodeType":"Block","src":"11400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"11456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5335,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"11421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5339,"nodeType":"RevertStatement","src":"11414:48:13"}]}},{"expression":{"arguments":[{"id":5344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"11496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5342,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:13","typeDescriptions":{}}},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5327,"id":5346,"nodeType":"Return","src":"11482:20:13"}]},"documentation":{"id":5321,"nodeType":"StructuredDocumentation","src":"11015:276:13","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5348,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"value","nameLocation":"11322:5:13","nodeType":"VariableDeclaration","scope":5348,"src":"11314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5322,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:13"},"returnParameters":{"id":5327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5348,"src":"11352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5325,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:13"},"scope":6526,"src":"11296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5375,"nodeType":"Block","src":"11860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"11874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5358,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:13","memberName":"max","nodeType":"MemberAccess","src":"11882:16:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5369,"nodeType":"IfStatement","src":"11870:103:13","trueBody":{"id":5368,"nodeType":"Block","src":"11900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"11956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5363,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"11921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5367,"nodeType":"RevertStatement","src":"11914:48:13"}]}},{"expression":{"arguments":[{"id":5372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"11996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5370,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:13","typeDescriptions":{}}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5355,"id":5374,"nodeType":"Return","src":"11982:20:13"}]},"documentation":{"id":5349,"nodeType":"StructuredDocumentation","src":"11515:276:13","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5376,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"value","nameLocation":"11822:5:13","nodeType":"VariableDeclaration","scope":5376,"src":"11814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5350,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:13"},"returnParameters":{"id":5355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5376,"src":"11852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5353,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:13"},"scope":6526,"src":"11796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5403,"nodeType":"Block","src":"12360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"12374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5386,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5385,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:13","memberName":"max","nodeType":"MemberAccess","src":"12382:16:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5397,"nodeType":"IfStatement","src":"12370:103:13","trueBody":{"id":5396,"nodeType":"Block","src":"12400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"12456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5391,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"12421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5395,"nodeType":"RevertStatement","src":"12414:48:13"}]}},{"expression":{"arguments":[{"id":5400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"12496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5398,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:13","typeDescriptions":{}}},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5383,"id":5402,"nodeType":"Return","src":"12482:20:13"}]},"documentation":{"id":5377,"nodeType":"StructuredDocumentation","src":"12015:276:13","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5404,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5379,"mutability":"mutable","name":"value","nameLocation":"12322:5:13","nodeType":"VariableDeclaration","scope":5404,"src":"12314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5378,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:13"},"returnParameters":{"id":5383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5404,"src":"12352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5381,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:13"},"scope":6526,"src":"12296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5431,"nodeType":"Block","src":"12860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"12874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5414,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5413,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:13","memberName":"max","nodeType":"MemberAccess","src":"12882:16:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5425,"nodeType":"IfStatement","src":"12870:103:13","trueBody":{"id":5424,"nodeType":"Block","src":"12900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"12956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5419,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"12921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5423,"nodeType":"RevertStatement","src":"12914:48:13"}]}},{"expression":{"arguments":[{"id":5428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"12996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5426,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:13","typeDescriptions":{}}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5411,"id":5430,"nodeType":"Return","src":"12982:20:13"}]},"documentation":{"id":5405,"nodeType":"StructuredDocumentation","src":"12515:276:13","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5432,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5407,"mutability":"mutable","name":"value","nameLocation":"12822:5:13","nodeType":"VariableDeclaration","scope":5432,"src":"12814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5406,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:13"},"returnParameters":{"id":5411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5432,"src":"12852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5409,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:13"},"scope":6526,"src":"12796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5459,"nodeType":"Block","src":"13360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"13374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5442,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5441,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:13","memberName":"max","nodeType":"MemberAccess","src":"13382:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5453,"nodeType":"IfStatement","src":"13370:103:13","trueBody":{"id":5452,"nodeType":"Block","src":"13400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"13456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5447,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"13421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5451,"nodeType":"RevertStatement","src":"13414:48:13"}]}},{"expression":{"arguments":[{"id":5456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"13496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5454,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:13","typeDescriptions":{}}},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5439,"id":5458,"nodeType":"Return","src":"13482:20:13"}]},"documentation":{"id":5433,"nodeType":"StructuredDocumentation","src":"13015:276:13","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5460,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5435,"mutability":"mutable","name":"value","nameLocation":"13322:5:13","nodeType":"VariableDeclaration","scope":5460,"src":"13314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5434,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:13"},"returnParameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5460,"src":"13352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5437,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:13"},"scope":6526,"src":"13296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5487,"nodeType":"Block","src":"13860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"13874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5470,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5469,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:13","memberName":"max","nodeType":"MemberAccess","src":"13882:16:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5481,"nodeType":"IfStatement","src":"13870:103:13","trueBody":{"id":5480,"nodeType":"Block","src":"13900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"13956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5475,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"13921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5479,"nodeType":"RevertStatement","src":"13914:48:13"}]}},{"expression":{"arguments":[{"id":5484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"13996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5482,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:13","typeDescriptions":{}}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5467,"id":5486,"nodeType":"Return","src":"13982:20:13"}]},"documentation":{"id":5461,"nodeType":"StructuredDocumentation","src":"13515:276:13","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5488,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"value","nameLocation":"13822:5:13","nodeType":"VariableDeclaration","scope":5488,"src":"13814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5462,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:13"},"returnParameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5488,"src":"13852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5465,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:13"},"scope":6526,"src":"13796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5515,"nodeType":"Block","src":"14360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"14374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5498,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5497,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:13","memberName":"max","nodeType":"MemberAccess","src":"14382:16:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5509,"nodeType":"IfStatement","src":"14370:103:13","trueBody":{"id":5508,"nodeType":"Block","src":"14400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"14456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5503,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"14421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5507,"nodeType":"RevertStatement","src":"14414:48:13"}]}},{"expression":{"arguments":[{"id":5512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"14496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5510,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:13","typeDescriptions":{}}},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5495,"id":5514,"nodeType":"Return","src":"14482:20:13"}]},"documentation":{"id":5489,"nodeType":"StructuredDocumentation","src":"14015:276:13","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5516,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5491,"mutability":"mutable","name":"value","nameLocation":"14322:5:13","nodeType":"VariableDeclaration","scope":5516,"src":"14314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5490,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:13"},"returnParameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5516,"src":"14352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5493,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:13"},"scope":6526,"src":"14296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5543,"nodeType":"Block","src":"14860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"14874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5526,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5525,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:13","memberName":"max","nodeType":"MemberAccess","src":"14882:16:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5537,"nodeType":"IfStatement","src":"14870:103:13","trueBody":{"id":5536,"nodeType":"Block","src":"14900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"14956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5531,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"14921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5535,"nodeType":"RevertStatement","src":"14914:48:13"}]}},{"expression":{"arguments":[{"id":5540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"14996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5538,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:13","typeDescriptions":{}}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5523,"id":5542,"nodeType":"Return","src":"14982:20:13"}]},"documentation":{"id":5517,"nodeType":"StructuredDocumentation","src":"14515:276:13","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5544,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"value","nameLocation":"14822:5:13","nodeType":"VariableDeclaration","scope":5544,"src":"14814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5518,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:13"},"returnParameters":{"id":5523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5544,"src":"14852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5521,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:13"},"scope":6526,"src":"14796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5571,"nodeType":"Block","src":"15360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"15374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5554,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5553,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:13","memberName":"max","nodeType":"MemberAccess","src":"15382:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5565,"nodeType":"IfStatement","src":"15370:103:13","trueBody":{"id":5564,"nodeType":"Block","src":"15400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"15456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5559,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"15421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5563,"nodeType":"RevertStatement","src":"15414:48:13"}]}},{"expression":{"arguments":[{"id":5568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"15496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5566,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:13","typeDescriptions":{}}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5551,"id":5570,"nodeType":"Return","src":"15482:20:13"}]},"documentation":{"id":5545,"nodeType":"StructuredDocumentation","src":"15015:276:13","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5572,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"value","nameLocation":"15322:5:13","nodeType":"VariableDeclaration","scope":5572,"src":"15314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5546,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:13"},"returnParameters":{"id":5551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5572,"src":"15352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5549,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:13"},"scope":6526,"src":"15296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5599,"nodeType":"Block","src":"15860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"15874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5582,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5581,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:13","memberName":"max","nodeType":"MemberAccess","src":"15882:16:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5593,"nodeType":"IfStatement","src":"15870:103:13","trueBody":{"id":5592,"nodeType":"Block","src":"15900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"15956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5587,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"15921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5591,"nodeType":"RevertStatement","src":"15914:48:13"}]}},{"expression":{"arguments":[{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"15996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5594,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:13","typeDescriptions":{}}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5579,"id":5598,"nodeType":"Return","src":"15982:20:13"}]},"documentation":{"id":5573,"nodeType":"StructuredDocumentation","src":"15515:276:13","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5600,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"value","nameLocation":"15822:5:13","nodeType":"VariableDeclaration","scope":5600,"src":"15814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5574,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:13"},"returnParameters":{"id":5579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5600,"src":"15852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5577,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:13"},"scope":6526,"src":"15796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5627,"nodeType":"Block","src":"16360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"16374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5610,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:13","memberName":"max","nodeType":"MemberAccess","src":"16382:16:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5621,"nodeType":"IfStatement","src":"16370:103:13","trueBody":{"id":5620,"nodeType":"Block","src":"16400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"16456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5615,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"16421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5619,"nodeType":"RevertStatement","src":"16414:48:13"}]}},{"expression":{"arguments":[{"id":5624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"16496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5622,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:13","typeDescriptions":{}}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5607,"id":5626,"nodeType":"Return","src":"16482:20:13"}]},"documentation":{"id":5601,"nodeType":"StructuredDocumentation","src":"16015:276:13","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5628,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5603,"mutability":"mutable","name":"value","nameLocation":"16322:5:13","nodeType":"VariableDeclaration","scope":5628,"src":"16314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5602,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:13"},"returnParameters":{"id":5607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5628,"src":"16352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5605,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:13"},"scope":6526,"src":"16296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5655,"nodeType":"Block","src":"16854:146:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"16868:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5638,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5637,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:13","memberName":"max","nodeType":"MemberAccess","src":"16876:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5649,"nodeType":"IfStatement","src":"16864:101:13","trueBody":{"id":5648,"nodeType":"Block","src":"16893:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"16948:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5643,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"16914:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5647,"nodeType":"RevertStatement","src":"16907:47:13"}]}},{"expression":{"arguments":[{"id":5652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"16987:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5650,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:13","typeDescriptions":{}}},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5635,"id":5654,"nodeType":"Return","src":"16974:19:13"}]},"documentation":{"id":5629,"nodeType":"StructuredDocumentation","src":"16515:272:13","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5656,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:13","nodeType":"FunctionDefinition","parameters":{"id":5632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"value","nameLocation":"16817:5:13","nodeType":"VariableDeclaration","scope":5656,"src":"16809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5630,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:13"},"returnParameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5656,"src":"16847:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5633,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:13"},"scope":6526,"src":"16792:208:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5678,"nodeType":"Block","src":"17236:128:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"17250:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5672,"nodeType":"IfStatement","src":"17246:81:13","trueBody":{"id":5671,"nodeType":"Block","src":"17261:66:13","statements":[{"errorCall":{"arguments":[{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"17310:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5667,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"17282:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5670,"nodeType":"RevertStatement","src":"17275:41:13"}]}},{"expression":{"arguments":[{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"17351:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5673,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:13","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5663,"id":5677,"nodeType":"Return","src":"17336:21:13"}]},"documentation":{"id":5657,"nodeType":"StructuredDocumentation","src":"17006:160:13","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5679,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:13","nodeType":"FunctionDefinition","parameters":{"id":5660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5659,"mutability":"mutable","name":"value","nameLocation":"17197:5:13","nodeType":"VariableDeclaration","scope":5679,"src":"17190:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5658,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:13"},"returnParameters":{"id":5663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"17227:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5661,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:13"},"scope":6526,"src":"17171:193:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5704,"nodeType":"Block","src":"17761:150:13","statements":[{"expression":{"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5687,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"17771:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"17791:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5688,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:13","typeDescriptions":{}}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5693,"nodeType":"ExpressionStatement","src":"17771:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5694,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"17811:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"17825:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5703,"nodeType":"IfStatement","src":"17807:98:13","trueBody":{"id":5702,"nodeType":"Block","src":"17832:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"17888:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5697,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"17853:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5701,"nodeType":"RevertStatement","src":"17846:48:13"}]}}]},"documentation":{"id":5680,"nodeType":"StructuredDocumentation","src":"17370:312:13","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5705,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:13","nodeType":"FunctionDefinition","parameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"value","nameLocation":"17712:5:13","nodeType":"VariableDeclaration","scope":5705,"src":"17705:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5681,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:13"},"returnParameters":{"id":5686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5685,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:13","nodeType":"VariableDeclaration","scope":5705,"src":"17742:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5684,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:13"},"scope":6526,"src":"17687:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5730,"nodeType":"Block","src":"18308:150:13","statements":[{"expression":{"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5713,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"18318:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"18338:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5714,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:13","typeDescriptions":{}}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5719,"nodeType":"ExpressionStatement","src":"18318:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5720,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"18358:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"18372:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5729,"nodeType":"IfStatement","src":"18354:98:13","trueBody":{"id":5728,"nodeType":"Block","src":"18379:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"18435:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5723,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"18400:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5727,"nodeType":"RevertStatement","src":"18393:48:13"}]}}]},"documentation":{"id":5706,"nodeType":"StructuredDocumentation","src":"17917:312:13","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5731,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:13","nodeType":"FunctionDefinition","parameters":{"id":5709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"value","nameLocation":"18259:5:13","nodeType":"VariableDeclaration","scope":5731,"src":"18252:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5707,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:13"},"returnParameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5711,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:13","nodeType":"VariableDeclaration","scope":5731,"src":"18289:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5710,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:13"},"scope":6526,"src":"18234:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5756,"nodeType":"Block","src":"18855:150:13","statements":[{"expression":{"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5739,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"18865:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"18885:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5740,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:13","typeDescriptions":{}}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5745,"nodeType":"ExpressionStatement","src":"18865:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5746,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"18905:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"18919:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5755,"nodeType":"IfStatement","src":"18901:98:13","trueBody":{"id":5754,"nodeType":"Block","src":"18926:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"18982:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5749,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"18947:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5753,"nodeType":"RevertStatement","src":"18940:48:13"}]}}]},"documentation":{"id":5732,"nodeType":"StructuredDocumentation","src":"18464:312:13","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5757,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:13","nodeType":"FunctionDefinition","parameters":{"id":5735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"value","nameLocation":"18806:5:13","nodeType":"VariableDeclaration","scope":5757,"src":"18799:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5733,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:13"},"returnParameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:13","nodeType":"VariableDeclaration","scope":5757,"src":"18836:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5736,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:13"},"scope":6526,"src":"18781:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5782,"nodeType":"Block","src":"19402:150:13","statements":[{"expression":{"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5765,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"19412:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"19432:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5766,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:13","typeDescriptions":{}}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5771,"nodeType":"ExpressionStatement","src":"19412:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5772,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"19452:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"19466:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5781,"nodeType":"IfStatement","src":"19448:98:13","trueBody":{"id":5780,"nodeType":"Block","src":"19473:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"19529:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5775,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"19494:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5779,"nodeType":"RevertStatement","src":"19487:48:13"}]}}]},"documentation":{"id":5758,"nodeType":"StructuredDocumentation","src":"19011:312:13","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5783,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:13","nodeType":"FunctionDefinition","parameters":{"id":5761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"value","nameLocation":"19353:5:13","nodeType":"VariableDeclaration","scope":5783,"src":"19346:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5759,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:13"},"returnParameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:13","nodeType":"VariableDeclaration","scope":5783,"src":"19383:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5762,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:13"},"scope":6526,"src":"19328:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5808,"nodeType":"Block","src":"19949:150:13","statements":[{"expression":{"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5791,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"19959:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"19979:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5792,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:13","typeDescriptions":{}}},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5797,"nodeType":"ExpressionStatement","src":"19959:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5798,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"19999:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"20013:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5807,"nodeType":"IfStatement","src":"19995:98:13","trueBody":{"id":5806,"nodeType":"Block","src":"20020:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"20076:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5801,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"20041:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5805,"nodeType":"RevertStatement","src":"20034:48:13"}]}}]},"documentation":{"id":5784,"nodeType":"StructuredDocumentation","src":"19558:312:13","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5809,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:13","nodeType":"FunctionDefinition","parameters":{"id":5787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5786,"mutability":"mutable","name":"value","nameLocation":"19900:5:13","nodeType":"VariableDeclaration","scope":5809,"src":"19893:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5785,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:13"},"returnParameters":{"id":5790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5789,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:13","nodeType":"VariableDeclaration","scope":5809,"src":"19930:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5788,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:13"},"scope":6526,"src":"19875:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5834,"nodeType":"Block","src":"20496:150:13","statements":[{"expression":{"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"20506:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"20526:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5818,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:13","typeDescriptions":{}}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5823,"nodeType":"ExpressionStatement","src":"20506:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5824,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"20546:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"20560:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5833,"nodeType":"IfStatement","src":"20542:98:13","trueBody":{"id":5832,"nodeType":"Block","src":"20567:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"20623:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5827,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"20588:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5831,"nodeType":"RevertStatement","src":"20581:48:13"}]}}]},"documentation":{"id":5810,"nodeType":"StructuredDocumentation","src":"20105:312:13","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5835,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:13","nodeType":"FunctionDefinition","parameters":{"id":5813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5812,"mutability":"mutable","name":"value","nameLocation":"20447:5:13","nodeType":"VariableDeclaration","scope":5835,"src":"20440:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5811,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:13"},"returnParameters":{"id":5816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5815,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:13","nodeType":"VariableDeclaration","scope":5835,"src":"20477:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5814,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:13"},"scope":6526,"src":"20422:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5860,"nodeType":"Block","src":"21043:150:13","statements":[{"expression":{"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"21053:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"21073:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5844,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:13","typeDescriptions":{}}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5849,"nodeType":"ExpressionStatement","src":"21053:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5850,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"21093:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"21107:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5859,"nodeType":"IfStatement","src":"21089:98:13","trueBody":{"id":5858,"nodeType":"Block","src":"21114:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"21170:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5853,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"21135:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5857,"nodeType":"RevertStatement","src":"21128:48:13"}]}}]},"documentation":{"id":5836,"nodeType":"StructuredDocumentation","src":"20652:312:13","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5861,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:13","nodeType":"FunctionDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"value","nameLocation":"20994:5:13","nodeType":"VariableDeclaration","scope":5861,"src":"20987:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5837,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:13"},"returnParameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:13","nodeType":"VariableDeclaration","scope":5861,"src":"21024:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5840,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:13"},"scope":6526,"src":"20969:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5886,"nodeType":"Block","src":"21590:150:13","statements":[{"expression":{"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"21600:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"21620:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5870,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:13","typeDescriptions":{}}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5875,"nodeType":"ExpressionStatement","src":"21600:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5876,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"21640:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"21654:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5885,"nodeType":"IfStatement","src":"21636:98:13","trueBody":{"id":5884,"nodeType":"Block","src":"21661:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"21717:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5879,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"21682:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5883,"nodeType":"RevertStatement","src":"21675:48:13"}]}}]},"documentation":{"id":5862,"nodeType":"StructuredDocumentation","src":"21199:312:13","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5887,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:13","nodeType":"FunctionDefinition","parameters":{"id":5865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5864,"mutability":"mutable","name":"value","nameLocation":"21541:5:13","nodeType":"VariableDeclaration","scope":5887,"src":"21534:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5863,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:13"},"returnParameters":{"id":5868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5867,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:13","nodeType":"VariableDeclaration","scope":5887,"src":"21571:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5866,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:13"},"scope":6526,"src":"21516:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5912,"nodeType":"Block","src":"22137:150:13","statements":[{"expression":{"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5895,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"22147:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"22167:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5896,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:13","typeDescriptions":{}}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5901,"nodeType":"ExpressionStatement","src":"22147:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5902,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"22187:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"22201:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5911,"nodeType":"IfStatement","src":"22183:98:13","trueBody":{"id":5910,"nodeType":"Block","src":"22208:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"22264:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5905,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"22229:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5909,"nodeType":"RevertStatement","src":"22222:48:13"}]}}]},"documentation":{"id":5888,"nodeType":"StructuredDocumentation","src":"21746:312:13","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5913,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:13","nodeType":"FunctionDefinition","parameters":{"id":5891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5890,"mutability":"mutable","name":"value","nameLocation":"22088:5:13","nodeType":"VariableDeclaration","scope":5913,"src":"22081:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5889,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:13"},"returnParameters":{"id":5894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5893,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:13","nodeType":"VariableDeclaration","scope":5913,"src":"22118:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5892,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:13"},"scope":6526,"src":"22063:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5938,"nodeType":"Block","src":"22684:150:13","statements":[{"expression":{"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5921,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"22694:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"22714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5922,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:13","typeDescriptions":{}}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5927,"nodeType":"ExpressionStatement","src":"22694:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5928,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"22734:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"22748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5937,"nodeType":"IfStatement","src":"22730:98:13","trueBody":{"id":5936,"nodeType":"Block","src":"22755:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"22811:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5931,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"22776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5935,"nodeType":"RevertStatement","src":"22769:48:13"}]}}]},"documentation":{"id":5914,"nodeType":"StructuredDocumentation","src":"22293:312:13","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5939,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:13","nodeType":"FunctionDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"value","nameLocation":"22635:5:13","nodeType":"VariableDeclaration","scope":5939,"src":"22628:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5915,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:13"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:13","nodeType":"VariableDeclaration","scope":5939,"src":"22665:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5918,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:13"},"scope":6526,"src":"22610:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5964,"nodeType":"Block","src":"23231:150:13","statements":[{"expression":{"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5947,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"23241:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23261:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5948,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:13","typeDescriptions":{}}},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5953,"nodeType":"ExpressionStatement","src":"23241:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5954,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"23281:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23295:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5963,"nodeType":"IfStatement","src":"23277:98:13","trueBody":{"id":5962,"nodeType":"Block","src":"23302:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23358:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5957,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"23323:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5961,"nodeType":"RevertStatement","src":"23316:48:13"}]}}]},"documentation":{"id":5940,"nodeType":"StructuredDocumentation","src":"22840:312:13","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5965,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:13","nodeType":"FunctionDefinition","parameters":{"id":5943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5942,"mutability":"mutable","name":"value","nameLocation":"23182:5:13","nodeType":"VariableDeclaration","scope":5965,"src":"23175:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5941,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:13"},"returnParameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:13","nodeType":"VariableDeclaration","scope":5965,"src":"23212:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5944,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:13"},"scope":6526,"src":"23157:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5990,"nodeType":"Block","src":"23778:150:13","statements":[{"expression":{"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5973,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"23788:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"23808:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5974,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:13","typeDescriptions":{}}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5979,"nodeType":"ExpressionStatement","src":"23788:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5980,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"23828:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"23842:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5989,"nodeType":"IfStatement","src":"23824:98:13","trueBody":{"id":5988,"nodeType":"Block","src":"23849:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"23905:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5983,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"23870:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5987,"nodeType":"RevertStatement","src":"23863:48:13"}]}}]},"documentation":{"id":5966,"nodeType":"StructuredDocumentation","src":"23387:312:13","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5991,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:13","nodeType":"FunctionDefinition","parameters":{"id":5969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5968,"mutability":"mutable","name":"value","nameLocation":"23729:5:13","nodeType":"VariableDeclaration","scope":5991,"src":"23722:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5967,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:13"},"returnParameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5971,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:13","nodeType":"VariableDeclaration","scope":5991,"src":"23759:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5970,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:13"},"scope":6526,"src":"23704:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6016,"nodeType":"Block","src":"24325:150:13","statements":[{"expression":{"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5999,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"24335:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"24355:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6000,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:13","typeDescriptions":{}}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6005,"nodeType":"ExpressionStatement","src":"24335:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6006,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"24375:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"24389:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6015,"nodeType":"IfStatement","src":"24371:98:13","trueBody":{"id":6014,"nodeType":"Block","src":"24396:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"24452:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6009,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24417:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6013,"nodeType":"RevertStatement","src":"24410:48:13"}]}}]},"documentation":{"id":5992,"nodeType":"StructuredDocumentation","src":"23934:312:13","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6017,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:13","nodeType":"FunctionDefinition","parameters":{"id":5995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5994,"mutability":"mutable","name":"value","nameLocation":"24276:5:13","nodeType":"VariableDeclaration","scope":6017,"src":"24269:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5993,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:13"},"returnParameters":{"id":5998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:13","nodeType":"VariableDeclaration","scope":6017,"src":"24306:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5996,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:13"},"scope":6526,"src":"24251:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6042,"nodeType":"Block","src":"24872:150:13","statements":[{"expression":{"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6025,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"24882:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"24902:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6026,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:13","typeDescriptions":{}}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6031,"nodeType":"ExpressionStatement","src":"24882:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6032,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"24922:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"24936:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6041,"nodeType":"IfStatement","src":"24918:98:13","trueBody":{"id":6040,"nodeType":"Block","src":"24943:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"24999:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6035,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"24964:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6039,"nodeType":"RevertStatement","src":"24957:48:13"}]}}]},"documentation":{"id":6018,"nodeType":"StructuredDocumentation","src":"24481:312:13","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6043,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:13","nodeType":"FunctionDefinition","parameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6020,"mutability":"mutable","name":"value","nameLocation":"24823:5:13","nodeType":"VariableDeclaration","scope":6043,"src":"24816:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6019,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:13"},"returnParameters":{"id":6024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6023,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:13","nodeType":"VariableDeclaration","scope":6043,"src":"24853:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6022,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:13"},"scope":6526,"src":"24798:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6068,"nodeType":"Block","src":"25419:150:13","statements":[{"expression":{"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6051,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"25429:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"25449:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6052,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:13","typeDescriptions":{}}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6057,"nodeType":"ExpressionStatement","src":"25429:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6058,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"25469:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"25483:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6067,"nodeType":"IfStatement","src":"25465:98:13","trueBody":{"id":6066,"nodeType":"Block","src":"25490:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"25546:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6061,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"25511:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6065,"nodeType":"RevertStatement","src":"25504:48:13"}]}}]},"documentation":{"id":6044,"nodeType":"StructuredDocumentation","src":"25028:312:13","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6069,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:13","nodeType":"FunctionDefinition","parameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"value","nameLocation":"25370:5:13","nodeType":"VariableDeclaration","scope":6069,"src":"25363:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6045,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:13"},"returnParameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:13","nodeType":"VariableDeclaration","scope":6069,"src":"25400:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6048,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:13"},"scope":6526,"src":"25345:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6094,"nodeType":"Block","src":"25966:150:13","statements":[{"expression":{"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6077,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"25976:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"25996:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6078,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:13","typeDescriptions":{}}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6083,"nodeType":"ExpressionStatement","src":"25976:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6084,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"26016:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"26030:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6093,"nodeType":"IfStatement","src":"26012:98:13","trueBody":{"id":6092,"nodeType":"Block","src":"26037:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"26093:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6087,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"26058:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6091,"nodeType":"RevertStatement","src":"26051:48:13"}]}}]},"documentation":{"id":6070,"nodeType":"StructuredDocumentation","src":"25575:312:13","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6095,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:13","nodeType":"FunctionDefinition","parameters":{"id":6073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"value","nameLocation":"25917:5:13","nodeType":"VariableDeclaration","scope":6095,"src":"25910:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6071,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:13"},"returnParameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6075,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:13","nodeType":"VariableDeclaration","scope":6095,"src":"25947:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6074,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:13"},"scope":6526,"src":"25892:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6120,"nodeType":"Block","src":"26513:150:13","statements":[{"expression":{"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6103,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"26523:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"26543:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6104,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:13","typeDescriptions":{}}},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6109,"nodeType":"ExpressionStatement","src":"26523:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6110,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"26563:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"26577:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6119,"nodeType":"IfStatement","src":"26559:98:13","trueBody":{"id":6118,"nodeType":"Block","src":"26584:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"26640:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6113,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"26605:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6117,"nodeType":"RevertStatement","src":"26598:48:13"}]}}]},"documentation":{"id":6096,"nodeType":"StructuredDocumentation","src":"26122:312:13","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6121,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:13","nodeType":"FunctionDefinition","parameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"mutability":"mutable","name":"value","nameLocation":"26464:5:13","nodeType":"VariableDeclaration","scope":6121,"src":"26457:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6097,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:13"},"returnParameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:13","nodeType":"VariableDeclaration","scope":6121,"src":"26494:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6100,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:13"},"scope":6526,"src":"26439:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6146,"nodeType":"Block","src":"27060:150:13","statements":[{"expression":{"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6129,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"27070:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"27090:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6130,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:13","typeDescriptions":{}}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6135,"nodeType":"ExpressionStatement","src":"27070:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6136,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"27110:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"27124:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6145,"nodeType":"IfStatement","src":"27106:98:13","trueBody":{"id":6144,"nodeType":"Block","src":"27131:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"27187:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6139,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"27152:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6143,"nodeType":"RevertStatement","src":"27145:48:13"}]}}]},"documentation":{"id":6122,"nodeType":"StructuredDocumentation","src":"26669:312:13","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6147,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:13","nodeType":"FunctionDefinition","parameters":{"id":6125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6124,"mutability":"mutable","name":"value","nameLocation":"27011:5:13","nodeType":"VariableDeclaration","scope":6147,"src":"27004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6123,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:13"},"returnParameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:13","nodeType":"VariableDeclaration","scope":6147,"src":"27041:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6126,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:13"},"scope":6526,"src":"26986:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6172,"nodeType":"Block","src":"27607:150:13","statements":[{"expression":{"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"27617:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"27637:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6156,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:13","typeDescriptions":{}}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6161,"nodeType":"ExpressionStatement","src":"27617:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6162,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"27657:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"27671:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6171,"nodeType":"IfStatement","src":"27653:98:13","trueBody":{"id":6170,"nodeType":"Block","src":"27678:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"27734:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6165,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"27699:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6169,"nodeType":"RevertStatement","src":"27692:48:13"}]}}]},"documentation":{"id":6148,"nodeType":"StructuredDocumentation","src":"27216:312:13","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6173,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:13","nodeType":"FunctionDefinition","parameters":{"id":6151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6150,"mutability":"mutable","name":"value","nameLocation":"27558:5:13","nodeType":"VariableDeclaration","scope":6173,"src":"27551:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6149,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:13"},"returnParameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:13","nodeType":"VariableDeclaration","scope":6173,"src":"27588:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6152,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:13"},"scope":6526,"src":"27533:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6198,"nodeType":"Block","src":"28147:148:13","statements":[{"expression":{"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"28157:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"28176:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6182,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:13","typeDescriptions":{}}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6187,"nodeType":"ExpressionStatement","src":"28157:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"28196:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"28210:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6197,"nodeType":"IfStatement","src":"28192:97:13","trueBody":{"id":6196,"nodeType":"Block","src":"28217:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"28272:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6191,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"28238:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6195,"nodeType":"RevertStatement","src":"28231:47:13"}]}}]},"documentation":{"id":6174,"nodeType":"StructuredDocumentation","src":"27763:307:13","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6199,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:13","nodeType":"FunctionDefinition","parameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"mutability":"mutable","name":"value","nameLocation":"28099:5:13","nodeType":"VariableDeclaration","scope":6199,"src":"28092:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6175,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:13"},"returnParameters":{"id":6180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:13","nodeType":"VariableDeclaration","scope":6199,"src":"28129:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6178,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:13"},"scope":6526,"src":"28075:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6224,"nodeType":"Block","src":"28685:148:13","statements":[{"expression":{"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"28695:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"28714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6208,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:13","typeDescriptions":{}}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6213,"nodeType":"ExpressionStatement","src":"28695:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6214,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"28734:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"28748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6223,"nodeType":"IfStatement","src":"28730:97:13","trueBody":{"id":6222,"nodeType":"Block","src":"28755:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"28810:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6217,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"28776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6221,"nodeType":"RevertStatement","src":"28769:47:13"}]}}]},"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"28301:307:13","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6225,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:13","nodeType":"FunctionDefinition","parameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"value","nameLocation":"28637:5:13","nodeType":"VariableDeclaration","scope":6225,"src":"28630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6201,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:13"},"returnParameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:13","nodeType":"VariableDeclaration","scope":6225,"src":"28667:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6204,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:13"},"scope":6526,"src":"28613:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6250,"nodeType":"Block","src":"29223:148:13","statements":[{"expression":{"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"29233:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"29252:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6234,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:13","typeDescriptions":{}}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6239,"nodeType":"ExpressionStatement","src":"29233:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6240,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"29272:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"29286:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6249,"nodeType":"IfStatement","src":"29268:97:13","trueBody":{"id":6248,"nodeType":"Block","src":"29293:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"29348:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6243,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"29314:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6247,"nodeType":"RevertStatement","src":"29307:47:13"}]}}]},"documentation":{"id":6226,"nodeType":"StructuredDocumentation","src":"28839:307:13","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6251,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:13","nodeType":"FunctionDefinition","parameters":{"id":6229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6228,"mutability":"mutable","name":"value","nameLocation":"29175:5:13","nodeType":"VariableDeclaration","scope":6251,"src":"29168:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6227,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:13"},"returnParameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:13","nodeType":"VariableDeclaration","scope":6251,"src":"29205:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6230,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:13"},"scope":6526,"src":"29151:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6276,"nodeType":"Block","src":"29761:148:13","statements":[{"expression":{"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"29771:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"29790:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6260,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:13","typeDescriptions":{}}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6265,"nodeType":"ExpressionStatement","src":"29771:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6266,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"29810:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"29824:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6275,"nodeType":"IfStatement","src":"29806:97:13","trueBody":{"id":6274,"nodeType":"Block","src":"29831:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"29886:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6269,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"29852:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6273,"nodeType":"RevertStatement","src":"29845:47:13"}]}}]},"documentation":{"id":6252,"nodeType":"StructuredDocumentation","src":"29377:307:13","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:13","nodeType":"FunctionDefinition","parameters":{"id":6255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6254,"mutability":"mutable","name":"value","nameLocation":"29713:5:13","nodeType":"VariableDeclaration","scope":6277,"src":"29706:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6253,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:13"},"returnParameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:13","nodeType":"VariableDeclaration","scope":6277,"src":"29743:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6256,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:13"},"scope":6526,"src":"29689:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6302,"nodeType":"Block","src":"30299:148:13","statements":[{"expression":{"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"30309:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"30328:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6286,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:13","typeDescriptions":{}}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6291,"nodeType":"ExpressionStatement","src":"30309:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6292,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"30348:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"30362:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6301,"nodeType":"IfStatement","src":"30344:97:13","trueBody":{"id":6300,"nodeType":"Block","src":"30369:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"30424:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6295,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"30390:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6299,"nodeType":"RevertStatement","src":"30383:47:13"}]}}]},"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"29915:307:13","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6303,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:13","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"value","nameLocation":"30251:5:13","nodeType":"VariableDeclaration","scope":6303,"src":"30244:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6279,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:13"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:13","nodeType":"VariableDeclaration","scope":6303,"src":"30281:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6282,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:13"},"scope":6526,"src":"30227:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6328,"nodeType":"Block","src":"30837:148:13","statements":[{"expression":{"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"30847:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"30866:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6312,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:13","typeDescriptions":{}}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6317,"nodeType":"ExpressionStatement","src":"30847:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6318,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"30886:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"30900:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6327,"nodeType":"IfStatement","src":"30882:97:13","trueBody":{"id":6326,"nodeType":"Block","src":"30907:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"30962:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6321,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"30928:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6325,"nodeType":"RevertStatement","src":"30921:47:13"}]}}]},"documentation":{"id":6304,"nodeType":"StructuredDocumentation","src":"30453:307:13","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6329,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:13","nodeType":"FunctionDefinition","parameters":{"id":6307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6306,"mutability":"mutable","name":"value","nameLocation":"30789:5:13","nodeType":"VariableDeclaration","scope":6329,"src":"30782:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6305,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:13"},"returnParameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:13","nodeType":"VariableDeclaration","scope":6329,"src":"30819:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6308,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:13"},"scope":6526,"src":"30765:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6354,"nodeType":"Block","src":"31375:148:13","statements":[{"expression":{"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"31385:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"31404:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6338,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:13","typeDescriptions":{}}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6343,"nodeType":"ExpressionStatement","src":"31385:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6344,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"31424:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"31438:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6353,"nodeType":"IfStatement","src":"31420:97:13","trueBody":{"id":6352,"nodeType":"Block","src":"31445:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"31500:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6347,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"31466:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6351,"nodeType":"RevertStatement","src":"31459:47:13"}]}}]},"documentation":{"id":6330,"nodeType":"StructuredDocumentation","src":"30991:307:13","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6355,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:13","nodeType":"FunctionDefinition","parameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"value","nameLocation":"31327:5:13","nodeType":"VariableDeclaration","scope":6355,"src":"31320:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6331,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:13"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:13","nodeType":"VariableDeclaration","scope":6355,"src":"31357:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6334,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:13"},"scope":6526,"src":"31303:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6380,"nodeType":"Block","src":"31913:148:13","statements":[{"expression":{"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"31923:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"31942:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6364,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:13","typeDescriptions":{}}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6369,"nodeType":"ExpressionStatement","src":"31923:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6370,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"31962:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"31976:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6379,"nodeType":"IfStatement","src":"31958:97:13","trueBody":{"id":6378,"nodeType":"Block","src":"31983:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"32038:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6373,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"32004:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6377,"nodeType":"RevertStatement","src":"31997:47:13"}]}}]},"documentation":{"id":6356,"nodeType":"StructuredDocumentation","src":"31529:307:13","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6381,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:13","nodeType":"FunctionDefinition","parameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"value","nameLocation":"31865:5:13","nodeType":"VariableDeclaration","scope":6381,"src":"31858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6357,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:13"},"returnParameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:13","nodeType":"VariableDeclaration","scope":6381,"src":"31895:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6360,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:13"},"scope":6526,"src":"31841:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6406,"nodeType":"Block","src":"32451:148:13","statements":[{"expression":{"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"32461:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"32480:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6390,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:13","typeDescriptions":{}}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6395,"nodeType":"ExpressionStatement","src":"32461:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6396,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"32500:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"32514:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6405,"nodeType":"IfStatement","src":"32496:97:13","trueBody":{"id":6404,"nodeType":"Block","src":"32521:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"32576:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6399,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"32542:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6403,"nodeType":"RevertStatement","src":"32535:47:13"}]}}]},"documentation":{"id":6382,"nodeType":"StructuredDocumentation","src":"32067:307:13","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6407,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:13","nodeType":"FunctionDefinition","parameters":{"id":6385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6384,"mutability":"mutable","name":"value","nameLocation":"32403:5:13","nodeType":"VariableDeclaration","scope":6407,"src":"32396:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6383,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:13"},"returnParameters":{"id":6388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6387,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:13","nodeType":"VariableDeclaration","scope":6407,"src":"32433:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6386,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:13"},"scope":6526,"src":"32379:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6432,"nodeType":"Block","src":"32989:148:13","statements":[{"expression":{"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"32999:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"33018:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6416,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:13","typeDescriptions":{}}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6421,"nodeType":"ExpressionStatement","src":"32999:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6422,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"33038:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"33052:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6431,"nodeType":"IfStatement","src":"33034:97:13","trueBody":{"id":6430,"nodeType":"Block","src":"33059:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"33114:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6425,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"33080:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6429,"nodeType":"RevertStatement","src":"33073:47:13"}]}}]},"documentation":{"id":6408,"nodeType":"StructuredDocumentation","src":"32605:307:13","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6433,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:13","nodeType":"FunctionDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"value","nameLocation":"32941:5:13","nodeType":"VariableDeclaration","scope":6433,"src":"32934:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6409,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:13"},"returnParameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:13","nodeType":"VariableDeclaration","scope":6433,"src":"32971:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6412,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:13"},"scope":6526,"src":"32917:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"33527:148:13","statements":[{"expression":{"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"33537:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"33556:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6442,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:13","typeDescriptions":{}}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6447,"nodeType":"ExpressionStatement","src":"33537:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6448,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"33576:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"33590:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6457,"nodeType":"IfStatement","src":"33572:97:13","trueBody":{"id":6456,"nodeType":"Block","src":"33597:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"33652:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6451,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"33618:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6455,"nodeType":"RevertStatement","src":"33611:47:13"}]}}]},"documentation":{"id":6434,"nodeType":"StructuredDocumentation","src":"33143:307:13","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:13","nodeType":"FunctionDefinition","parameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"value","nameLocation":"33479:5:13","nodeType":"VariableDeclaration","scope":6459,"src":"33472:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6435,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:13"},"returnParameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:13","nodeType":"VariableDeclaration","scope":6459,"src":"33509:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6438,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:13"},"scope":6526,"src":"33455:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6484,"nodeType":"Block","src":"34058:146:13","statements":[{"expression":{"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"34068:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"34086:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6468,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:13","typeDescriptions":{}}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6473,"nodeType":"ExpressionStatement","src":"34068:24:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6474,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"34106:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"34120:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6483,"nodeType":"IfStatement","src":"34102:96:13","trueBody":{"id":6482,"nodeType":"Block","src":"34127:71:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"34181:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6477,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"34148:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6481,"nodeType":"RevertStatement","src":"34141:46:13"}]}}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"33681:302:13","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6485,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:13","nodeType":"FunctionDefinition","parameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"34011:5:13","nodeType":"VariableDeclaration","scope":6485,"src":"34004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6461,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:13"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:13","nodeType":"VariableDeclaration","scope":6485,"src":"34041:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6464,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:13"},"scope":6526,"src":"33988:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6514,"nodeType":"Block","src":"34444:250:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"34557:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6497,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:13","memberName":"max","nodeType":"MemberAccess","src":"34573:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6494,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:13","typeDescriptions":{}}},"id":6501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6508,"nodeType":"IfStatement","src":"34553:105:13","trueBody":{"id":6507,"nodeType":"Block","src":"34592:66:13","statements":[{"errorCall":{"arguments":[{"id":6504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"34641:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6503,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"34613:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6506,"nodeType":"RevertStatement","src":"34606:41:13"}]}},{"expression":{"arguments":[{"id":6511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"34681:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6509,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:13","typeDescriptions":{}}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6492,"id":6513,"nodeType":"Return","src":"34667:20:13"}]},"documentation":{"id":6486,"nodeType":"StructuredDocumentation","src":"34210:165:13","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6515,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:13","nodeType":"FunctionDefinition","parameters":{"id":6489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"value","nameLocation":"34406:5:13","nodeType":"VariableDeclaration","scope":6515,"src":"34398:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6487,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:13"},"returnParameters":{"id":6492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6515,"src":"34436:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6490,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:13"},"scope":6526,"src":"34380:314:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6524,"nodeType":"Block","src":"34853:87:13","statements":[{"AST":{"nativeSrc":"34888:46:13","nodeType":"YulBlock","src":"34888:46:13","statements":[{"nativeSrc":"34902:22:13","nodeType":"YulAssignment","src":"34902:22:13","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:13","nodeType":"YulIdentifier","src":"34921:1:13"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:13","nodeType":"YulIdentifier","src":"34914:6:13"},"nativeSrc":"34914:9:13","nodeType":"YulFunctionCall","src":"34914:9:13"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:13","nodeType":"YulIdentifier","src":"34907:6:13"},"nativeSrc":"34907:17:13","nodeType":"YulFunctionCall","src":"34907:17:13"},"variableNames":[{"name":"u","nativeSrc":"34902:1:13","nodeType":"YulIdentifier","src":"34902:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6518,"isOffset":false,"isSlot":false,"src":"34921:1:13","valueSize":1},{"declaration":6521,"isOffset":false,"isSlot":false,"src":"34902:1:13","valueSize":1}],"flags":["memory-safe"],"id":6523,"nodeType":"InlineAssembly","src":"34863:71:13"}]},"documentation":{"id":6516,"nodeType":"StructuredDocumentation","src":"34700:90:13","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6525,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:13","nodeType":"FunctionDefinition","parameters":{"id":6519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6518,"mutability":"mutable","name":"b","nameLocation":"34816:1:13","nodeType":"VariableDeclaration","scope":6525,"src":"34811:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6517,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:13"},"returnParameters":{"id":6522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6521,"mutability":"mutable","name":"u","nameLocation":"34850:1:13","nodeType":"VariableDeclaration","scope":6525,"src":"34842:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6520,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:13"},"scope":6526,"src":"34795:145:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6527,"src":"769:34173:13","usedErrors":[4771,4776,4783,4788],"usedEvents":[]}],"src":"192:34751:13"},"id":13},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6526],"SignedMath":[6670]},"id":6671,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6671,"sourceUnit":6527,"src":"135:40:14","symbolAliases":[{"foreign":{"id":6529,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"143:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6531,"nodeType":"StructuredDocumentation","src":"177:80:14","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6670,"linearizedBaseContracts":[6670],"name":"SignedMath","nameLocation":"266:10:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":6560,"nodeType":"Block","src":"746:215:14","statements":[{"id":6559,"nodeType":"UncheckedBlock","src":"756:199:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6543,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"894:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6544,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6536,"src":"900:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6545,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"904:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6552,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"932:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6550,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"916:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6526_$","typeString":"type(library SafeCast)"}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6525,"src":"916:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6548,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:14","typeDescriptions":{}}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6542,"id":6558,"nodeType":"Return","src":"887:57:14"}]}]},"documentation":{"id":6532,"nodeType":"StructuredDocumentation","src":"283:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6561,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:14","nodeType":"FunctionDefinition","parameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"condition","nameLocation":"684:9:14","nodeType":"VariableDeclaration","scope":6561,"src":"679:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6533,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6536,"mutability":"mutable","name":"a","nameLocation":"702:1:14","nodeType":"VariableDeclaration","scope":6561,"src":"695:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6535,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6538,"mutability":"mutable","name":"b","nameLocation":"712:1:14","nodeType":"VariableDeclaration","scope":6561,"src":"705:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6537,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:14"},"returnParameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6561,"src":"738:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6540,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:14"},"scope":6670,"src":"662:299:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6579,"nodeType":"Block","src":"1102:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6564,"src":"1127:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6573,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"1131:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6564,"src":"1134:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"1137:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6571,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"1119:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6570,"id":6578,"nodeType":"Return","src":"1112:27:14"}]},"documentation":{"id":6562,"nodeType":"StructuredDocumentation","src":"967:66:14","text":" @dev Returns the largest of two signed numbers."},"id":6580,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:14","nodeType":"FunctionDefinition","parameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6564,"mutability":"mutable","name":"a","nameLocation":"1058:1:14","nodeType":"VariableDeclaration","scope":6580,"src":"1051:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6563,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6566,"mutability":"mutable","name":"b","nameLocation":"1068:1:14","nodeType":"VariableDeclaration","scope":6580,"src":"1061:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6565,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:14"},"returnParameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6580,"src":"1094:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6568,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:14"},"scope":6670,"src":"1038:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6598,"nodeType":"Block","src":"1288:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"1313:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6592,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"1317:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"1320:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6595,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"1323:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6590,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"1305:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6589,"id":6597,"nodeType":"Return","src":"1298:27:14"}]},"documentation":{"id":6581,"nodeType":"StructuredDocumentation","src":"1152:67:14","text":" @dev Returns the smallest of two signed numbers."},"id":6599,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:14","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6583,"mutability":"mutable","name":"a","nameLocation":"1244:1:14","nodeType":"VariableDeclaration","scope":6599,"src":"1237:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6582,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6585,"mutability":"mutable","name":"b","nameLocation":"1254:1:14","nodeType":"VariableDeclaration","scope":6599,"src":"1247:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6584,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:14"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6599,"src":"1280:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6587,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:14"},"scope":6670,"src":"1224:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6642,"nodeType":"Block","src":"1537:162:14","statements":[{"assignments":[6610],"declarations":[{"constant":false,"id":6610,"mutability":"mutable","name":"x","nameLocation":"1606:1:14","nodeType":"VariableDeclaration","scope":6642,"src":"1599:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6609,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6623,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"1611:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6612,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"1615:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6615,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"1622:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6616,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"1626:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:14"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6624,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"1651:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6629,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"1671:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:14","typeDescriptions":{}}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6625,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:14","typeDescriptions":{}}},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"1685:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6635,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"1689:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6608,"id":6641,"nodeType":"Return","src":"1644:48:14"}]},"documentation":{"id":6600,"nodeType":"StructuredDocumentation","src":"1338:126:14","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6643,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:14","nodeType":"FunctionDefinition","parameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6602,"mutability":"mutable","name":"a","nameLocation":"1493:1:14","nodeType":"VariableDeclaration","scope":6643,"src":"1486:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6601,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6604,"mutability":"mutable","name":"b","nameLocation":"1503:1:14","nodeType":"VariableDeclaration","scope":6643,"src":"1496:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6603,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:14"},"returnParameters":{"id":6608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6643,"src":"1529:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6606,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:14"},"scope":6670,"src":"1469:230:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6668,"nodeType":"Block","src":"1843:767:14","statements":[{"id":6667,"nodeType":"UncheckedBlock","src":"1853:751:14","statements":[{"assignments":[6652],"declarations":[{"constant":false,"id":6652,"mutability":"mutable","name":"mask","nameLocation":"2424:4:14","nodeType":"VariableDeclaration","scope":6667,"src":"2417:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6651,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6656,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6653,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"2431:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6659,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"2576:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6660,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"2580:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6663,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"2588:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:14","typeDescriptions":{}}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6650,"id":6666,"nodeType":"Return","src":"2560:33:14"}]}]},"documentation":{"id":6644,"nodeType":"StructuredDocumentation","src":"1705:78:14","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6669,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:14","nodeType":"FunctionDefinition","parameters":{"id":6647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"n","nameLocation":"1808:1:14","nodeType":"VariableDeclaration","scope":6669,"src":"1801:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6645,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:14"},"returnParameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6669,"src":"1834:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:14"},"scope":6670,"src":"1788:822:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6671,"src":"258:2354:14","usedErrors":[],"usedEvents":[]}],"src":"109:2504:14"},"id":14},"contracts/phoneLink.sol":{"ast":{"absolutePath":"contracts/phoneLink.sol","exportedSymbols":{"ContextUpgradeable":[1111],"ECDSA":[3081],"ERC20Upgradeable":[1065],"IERC20":[1455],"IERC20Errors":[1282],"IERC20Metadata":[1481],"Initializable":[448],"MessageHashUtils":[3155],"OwnableUpgradeable":[194],"ReentrancyGuardUpgradeable":[1240],"Strings":[2733],"phoneLink":[7859]},"id":7860,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6672,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":6673,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7860,"sourceUnit":1066,"src":"59:78:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7860,"sourceUnit":1456,"src":"138:56:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":6675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7860,"sourceUnit":449,"src":"195:75:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":6676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7860,"sourceUnit":1241,"src":"271:82:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":6677,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7860,"sourceUnit":195,"src":"354:75:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6678,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7860,"sourceUnit":3082,"src":"430:62:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":6679,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7860,"sourceUnit":3156,"src":"493:73:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6680,"name":"Initializable","nameLocations":["592:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"592:13:15"},"id":6681,"nodeType":"InheritanceSpecifier","src":"592:13:15"},{"baseName":{"id":6682,"name":"ERC20Upgradeable","nameLocations":["609:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1065,"src":"609:16:15"},"id":6683,"nodeType":"InheritanceSpecifier","src":"609:16:15"},{"baseName":{"id":6684,"name":"ReentrancyGuardUpgradeable","nameLocations":["629:26:15"],"nodeType":"IdentifierPath","referencedDeclaration":1240,"src":"629:26:15"},"id":6685,"nodeType":"InheritanceSpecifier","src":"629:26:15"},{"baseName":{"id":6686,"name":"OwnableUpgradeable","nameLocations":["659:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"659:18:15"},"id":6687,"nodeType":"InheritanceSpecifier","src":"659:18:15"}],"canonicalName":"phoneLink","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7859,"linearizedBaseContracts":[7859,194,1240,1065,1282,1481,1455,1111,448],"name":"phoneLink","nameLocation":"577:9:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"5e385b92","id":6689,"mutability":"mutable","name":"marketowner","nameLocation":"705:11:15","nodeType":"VariableDeclaration","scope":7859,"src":"682:34:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6688,"name":"address","nodeType":"ElementaryTypeName","src":"682:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"constant":false,"functionSelector":"26232a2e","id":6691,"mutability":"mutable","name":"platformFee","nameLocation":"738:11:15","nodeType":"VariableDeclaration","scope":7859,"src":"723:26:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6690,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"34a7f193","id":6693,"mutability":"mutable","name":"_itemIds","nameLocation":"853:8:15","nodeType":"VariableDeclaration","scope":7859,"src":"838:23:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6692,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"phoneLink.Details","id":6704,"members":[{"constant":false,"id":6695,"mutability":"mutable","name":"name","nameLocation":"937:4:15","nodeType":"VariableDeclaration","scope":6704,"src":"930:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6694,"name":"string","nodeType":"ElementaryTypeName","src":"930:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6697,"mutability":"mutable","name":"identifier","nameLocation":"954:10:15","nodeType":"VariableDeclaration","scope":6704,"src":"947:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6696,"name":"string","nodeType":"ElementaryTypeName","src":"947:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6699,"mutability":"mutable","name":"typeOfIdentifier","nameLocation":"977:16:15","nodeType":"VariableDeclaration","scope":6704,"src":"970:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6698,"name":"string","nodeType":"ElementaryTypeName","src":"970:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6701,"mutability":"mutable","name":"connectedWalletAddress","nameLocation":"1007:22:15","nodeType":"VariableDeclaration","scope":6704,"src":"999:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6700,"name":"address","nodeType":"ElementaryTypeName","src":"999:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6703,"mutability":"mutable","name":"isPrimaryWallet","nameLocation":"1040:15:15","nodeType":"VariableDeclaration","scope":6704,"src":"1035:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6702,"name":"bool","nodeType":"ElementaryTypeName","src":"1035:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Details","nameLocation":"916:7:15","nodeType":"StructDefinition","scope":7859,"src":"909:151:15","visibility":"public"},{"constant":false,"functionSelector":"52d95491","id":6709,"mutability":"mutable","name":"phoneToDetails","nameLocation":"1099:14:15","nodeType":"VariableDeclaration","scope":7859,"src":"1064:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details)"},"typeName":{"id":6708,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1064:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6707,"nodeType":"UserDefinedTypeName","pathNode":{"id":6706,"name":"Details","nameLocations":["1083:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"1083:7:15"},"referencedDeclaration":6704,"src":"1083:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}}},"visibility":"public"},{"constant":false,"functionSelector":"f24d3af2","id":6714,"mutability":"mutable","name":"phoneToDetailsUPI","nameLocation":"1151:17:15","nodeType":"VariableDeclaration","scope":7859,"src":"1117:51:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(string => struct phoneLink.Details)"},"typeName":{"id":6713,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6710,"name":"string","nodeType":"ElementaryTypeName","src":"1125:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1117:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(string => struct phoneLink.Details)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6712,"nodeType":"UserDefinedTypeName","pathNode":{"id":6711,"name":"Details","nameLocations":["1135:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"1135:7:15"},"referencedDeclaration":6704,"src":"1135:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}}},"visibility":"public"},{"global":false,"id":6717,"libraryName":{"id":6715,"name":"ECDSA","nameLocations":["1387:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":3081,"src":"1387:5:15"},"nodeType":"UsingForDirective","src":"1381:24:15","typeName":{"id":6716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1397:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"anonymous":false,"eventSelector":"2e3249f822bd56e4e9ae7d39402def6df4618c14f212fbe4c35e0c94eddef9fe","id":6729,"name":"DetailsCreated","nameLocation":"1415:14:15","nodeType":"EventDefinition","parameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"indexed":true,"mutability":"mutable","name":"name","nameLocation":"1450:4:15","nodeType":"VariableDeclaration","scope":6729,"src":"1435:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6718,"name":"string","nodeType":"ElementaryTypeName","src":"1435:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6721,"indexed":true,"mutability":"mutable","name":"identifier","nameLocation":"1475:10:15","nodeType":"VariableDeclaration","scope":6729,"src":"1460:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6720,"name":"string","nodeType":"ElementaryTypeName","src":"1460:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6723,"indexed":true,"mutability":"mutable","name":"typeOfIdentifier","nameLocation":"1506:16:15","nodeType":"VariableDeclaration","scope":6729,"src":"1491:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6722,"name":"string","nodeType":"ElementaryTypeName","src":"1491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6725,"indexed":false,"mutability":"mutable","name":"connectedWalletAddress","nameLocation":"1536:22:15","nodeType":"VariableDeclaration","scope":6729,"src":"1528:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6724,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6727,"indexed":false,"mutability":"mutable","name":"isPrimaryWallet","nameLocation":"1569:15:15","nodeType":"VariableDeclaration","scope":6729,"src":"1564:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6726,"name":"bool","nodeType":"ElementaryTypeName","src":"1564:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1429:159:15"},"src":"1409:180:15"},{"constant":false,"id":6731,"mutability":"mutable","name":"glltoken","nameLocation":"1606:8:15","nodeType":"VariableDeclaration","scope":7859,"src":"1590:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6730,"name":"address","nodeType":"ElementaryTypeName","src":"1590:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":6767,"nodeType":"Block","src":"1670:339:15","statements":[{"expression":{"arguments":[{"hexValue":"","id":6739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1689:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":6740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1693:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":6738,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"1676:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1676:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6742,"nodeType":"ExpressionStatement","src":"1676:20:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6743,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"1702:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1702:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6745,"nodeType":"ExpressionStatement","src":"1702:24:15"},{"expression":{"arguments":[{"expression":{"id":6747,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1747:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1751:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1747:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6746,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1732:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1732:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6750,"nodeType":"ExpressionStatement","src":"1732:26:15"},{"expression":{"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6751,"name":"marketowner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"1930:11:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6754,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1952:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1956:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1952:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1944:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6752,"name":"address","nodeType":"ElementaryTypeName","src":"1944:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1930:33:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6758,"nodeType":"ExpressionStatement","src":"1930:33:15"},{"expression":{"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6759,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"1969:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"35","id":6760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1983:1:15","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1969:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6762,"nodeType":"ExpressionStatement","src":"1969:15:15"},{"expression":{"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6763,"name":"glltoken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"1990:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6764,"name":"gll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"2001:3:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1990:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6766,"nodeType":"ExpressionStatement","src":"1990:14:15"}]},"functionSelector":"c4d66de8","id":6768,"implemented":true,"kind":"function","modifiers":[{"id":6736,"kind":"modifierInvocation","modifierName":{"id":6735,"name":"initializer","nameLocations":["1658:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"1658:11:15"},"nodeType":"ModifierInvocation","src":"1658:11:15"}],"name":"initialize","nameLocation":"1627:10:15","nodeType":"FunctionDefinition","parameters":{"id":6734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6733,"mutability":"mutable","name":"gll","nameLocation":"1646:3:15","nodeType":"VariableDeclaration","scope":6768,"src":"1638:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6732,"name":"address","nodeType":"ElementaryTypeName","src":"1638:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1637:13:15"},"returnParameters":{"id":6737,"nodeType":"ParameterList","parameters":[],"src":"1670:0:15"},"scope":7859,"src":"1618:391:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6776,"nodeType":"Block","src":"2857:29:15","statements":[{"expression":{"id":6774,"name":"marketowner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"2870:11:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":6773,"id":6775,"nodeType":"Return","src":"2863:18:15"}]},"documentation":{"id":6769,"nodeType":"StructuredDocumentation","src":"2165:127:15","text":" @dev both Ownable and ERC2771Context have a sender function, so we need to override and select which one to use."},"functionSelector":"451e9cf0","id":6777,"implemented":true,"kind":"function","modifiers":[],"name":"getMarketOwner","nameLocation":"2800:14:15","nodeType":"FunctionDefinition","parameters":{"id":6770,"nodeType":"ParameterList","parameters":[],"src":"2814:2:15"},"returnParameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6777,"src":"2840:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6771,"name":"address","nodeType":"ElementaryTypeName","src":"2840:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2839:17:15"},"scope":7859,"src":"2791:95:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6788,"nodeType":"Block","src":"2955:29:15","statements":[{"expression":{"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6784,"name":"marketowner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"2961:11:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6785,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"2975:4:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2961:18:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6787,"nodeType":"ExpressionStatement","src":"2961:18:15"}]},"functionSelector":"6cdaa421","id":6789,"implemented":true,"kind":"function","modifiers":[{"id":6782,"kind":"modifierInvocation","modifierName":{"id":6781,"name":"onlyOwner","nameLocations":["2945:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2945:9:15"},"nodeType":"ModifierInvocation","src":"2945:9:15"}],"name":"setMarketOwner","nameLocation":"2899:14:15","nodeType":"FunctionDefinition","parameters":{"id":6780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6779,"mutability":"mutable","name":"addr","nameLocation":"2930:4:15","nodeType":"VariableDeclaration","scope":6789,"src":"2914:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6778,"name":"address","nodeType":"ElementaryTypeName","src":"2914:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2913:22:15"},"returnParameters":{"id":6783,"nodeType":"ParameterList","parameters":[],"src":"2955:0:15"},"scope":7859,"src":"2890:94:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6802,"nodeType":"Block","src":"3057:28:15","statements":[{"expression":{"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6798,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"3063:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6799,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"3077:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3063:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6801,"nodeType":"ExpressionStatement","src":"3063:17:15"}]},"functionSelector":"12e8e2c3","id":6803,"implemented":true,"kind":"function","modifiers":[{"id":6794,"kind":"modifierInvocation","modifierName":{"id":6793,"name":"onlyOwner","nameLocations":["3034:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3034:9:15"},"nodeType":"ModifierInvocation","src":"3034:9:15"},{"id":6796,"kind":"modifierInvocation","modifierName":{"id":6795,"name":"nonReentrant","nameLocations":["3044:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"3044:12:15"},"nodeType":"ModifierInvocation","src":"3044:12:15"}],"name":"setPlatformFee","nameLocation":"2997:14:15","nodeType":"FunctionDefinition","parameters":{"id":6792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6791,"mutability":"mutable","name":"fee","nameLocation":"3020:3:15","nodeType":"VariableDeclaration","scope":6803,"src":"3012:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6790,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3011:13:15"},"returnParameters":{"id":6797,"nodeType":"ParameterList","parameters":[],"src":"3057:0:15"},"scope":7859,"src":"2988:97:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6875,"nodeType":"Block","src":"3231:476:15","statements":[{"assignments":[6813],"declarations":[{"constant":false,"id":6813,"mutability":"mutable","name":"totalItemCount","nameLocation":"3297:14:15","nodeType":"VariableDeclaration","scope":6875,"src":"3289:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6812,"name":"uint256","nodeType":"ElementaryTypeName","src":"3289:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6815,"initialValue":{"id":6814,"name":"_itemIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"3314:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3289:33:15"},{"assignments":[6817],"declarations":[{"constant":false,"id":6817,"mutability":"mutable","name":"currentIndex","nameLocation":"3336:12:15","nodeType":"VariableDeclaration","scope":6875,"src":"3328:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6816,"name":"uint256","nodeType":"ElementaryTypeName","src":"3328:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6819,"initialValue":{"hexValue":"30","id":6818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3351:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3328:24:15"},{"assignments":[6824],"declarations":[{"constant":false,"id":6824,"mutability":"mutable","name":"items","nameLocation":"3376:5:15","nodeType":"VariableDeclaration","scope":6875,"src":"3359:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details[]"},"typeName":{"baseType":{"id":6822,"nodeType":"UserDefinedTypeName","pathNode":{"id":6821,"name":"Details","nameLocations":["3359:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"3359:7:15"},"referencedDeclaration":6704,"src":"3359:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":6823,"nodeType":"ArrayTypeName","src":"3359:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}},"visibility":"internal"}],"id":6831,"initialValue":{"arguments":[{"id":6829,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"3398:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3384:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct phoneLink.Details memory[] memory)"},"typeName":{"baseType":{"id":6826,"nodeType":"UserDefinedTypeName","pathNode":{"id":6825,"name":"Details","nameLocations":["3388:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"3388:7:15"},"referencedDeclaration":6704,"src":"3388:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":6827,"nodeType":"ArrayTypeName","src":"3388:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}}},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3359:54:15"},{"body":{"id":6871,"nodeType":"Block","src":"3464:221:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6842,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"3476:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":6846,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6843,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"3491:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3495:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3491:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3476:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":6847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3498:22:15","memberName":"connectedWalletAddress","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"3476:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6848,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"3524:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3476:61:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6870,"nodeType":"IfStatement","src":"3472:207:15","trueBody":{"id":6869,"nodeType":"Block","src":"3539:140:15","statements":[{"assignments":[6852],"declarations":[{"constant":false,"id":6852,"mutability":"mutable","name":"currentItem","nameLocation":"3565:11:15","nodeType":"VariableDeclaration","scope":6869,"src":"3549:27:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"},"typeName":{"id":6851,"nodeType":"UserDefinedTypeName","pathNode":{"id":6850,"name":"Details","nameLocations":["3549:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"3549:7:15"},"referencedDeclaration":6704,"src":"3549:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"visibility":"internal"}],"id":6858,"initialValue":{"baseExpression":{"id":6853,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"3579:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":6857,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"3594:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3598:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3594:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3579:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3549:51:15"},{"expression":{"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6859,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"3610:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"id":6861,"indexExpression":{"id":6860,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"3616:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3610:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_memory_ptr","typeString":"struct phoneLink.Details memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6862,"name":"currentItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"3632:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details storage pointer"}},"src":"3610:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_memory_ptr","typeString":"struct phoneLink.Details memory"}},"id":6864,"nodeType":"ExpressionStatement","src":"3610:33:15"},{"expression":{"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6865,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"3653:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3669:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3653:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6868,"nodeType":"ExpressionStatement","src":"3653:17:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6836,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"3439:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6837,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"3443:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3439:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6872,"initializationExpression":{"assignments":[6833],"declarations":[{"constant":false,"id":6833,"mutability":"mutable","name":"i","nameLocation":"3432:1:15","nodeType":"VariableDeclaration","scope":6872,"src":"3424:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6832,"name":"uint256","nodeType":"ElementaryTypeName","src":"3424:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6835,"initialValue":{"hexValue":"30","id":6834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3436:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3424:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3459:3:15","subExpression":{"id":6839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"3459:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6841,"nodeType":"ExpressionStatement","src":"3459:3:15"},"nodeType":"ForStatement","src":"3419:266:15"},{"expression":{"id":6873,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"3697:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"functionReturnParameters":6811,"id":6874,"nodeType":"Return","src":"3690:12:15"}]},"functionSelector":"8cae45d2","id":6876,"implemented":true,"kind":"function","modifiers":[],"name":"getWalletDetails","nameLocation":"3144:16:15","nodeType":"FunctionDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"walletAddress","nameLocation":"3174:13:15","nodeType":"VariableDeclaration","scope":6876,"src":"3166:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6804,"name":"address","nodeType":"ElementaryTypeName","src":"3166:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3160:31:15"},"returnParameters":{"id":6811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6876,"src":"3213:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details[]"},"typeName":{"baseType":{"id":6808,"nodeType":"UserDefinedTypeName","pathNode":{"id":6807,"name":"Details","nameLocations":["3213:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"3213:7:15"},"referencedDeclaration":6704,"src":"3213:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":6809,"nodeType":"ArrayTypeName","src":"3213:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}},"visibility":"internal"}],"src":"3212:18:15"},"scope":7859,"src":"3135:572:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6942,"nodeType":"Block","src":"3815:424:15","statements":[{"assignments":[6886],"declarations":[{"constant":false,"id":6886,"mutability":"mutable","name":"totalItemCount","nameLocation":"3881:14:15","nodeType":"VariableDeclaration","scope":6942,"src":"3873:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6885,"name":"uint256","nodeType":"ElementaryTypeName","src":"3873:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6888,"initialValue":{"id":6887,"name":"_itemIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"3898:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3873:33:15"},{"assignments":[6890],"declarations":[{"constant":false,"id":6890,"mutability":"mutable","name":"currentIndex","nameLocation":"3920:12:15","nodeType":"VariableDeclaration","scope":6942,"src":"3912:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6889,"name":"uint256","nodeType":"ElementaryTypeName","src":"3912:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6892,"initialValue":{"hexValue":"30","id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3935:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3912:24:15"},{"assignments":[6897],"declarations":[{"constant":false,"id":6897,"mutability":"mutable","name":"items","nameLocation":"3960:5:15","nodeType":"VariableDeclaration","scope":6942,"src":"3943:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details[]"},"typeName":{"baseType":{"id":6895,"nodeType":"UserDefinedTypeName","pathNode":{"id":6894,"name":"Details","nameLocations":["3943:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"3943:7:15"},"referencedDeclaration":6704,"src":"3943:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":6896,"nodeType":"ArrayTypeName","src":"3943:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}},"visibility":"internal"}],"id":6904,"initialValue":{"arguments":[{"id":6902,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"3982:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3968:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct phoneLink.Details memory[] memory)"},"typeName":{"baseType":{"id":6899,"nodeType":"UserDefinedTypeName","pathNode":{"id":6898,"name":"Details","nameLocations":["3972:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"3972:7:15"},"referencedDeclaration":6704,"src":"3972:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":6900,"nodeType":"ArrayTypeName","src":"3972:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3968:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3943:54:15"},{"body":{"id":6938,"nodeType":"Block","src":"4048:169:15","statements":[{"assignments":[6916],"declarations":[{"constant":false,"id":6916,"mutability":"mutable","name":"currentId","nameLocation":"4064:9:15","nodeType":"VariableDeclaration","scope":6938,"src":"4056:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6915,"name":"uint256","nodeType":"ElementaryTypeName","src":"4056:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6920,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"4076:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4080:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4076:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4056:25:15"},{"assignments":[6923],"declarations":[{"constant":false,"id":6923,"mutability":"mutable","name":"currentItem","nameLocation":"4105:11:15","nodeType":"VariableDeclaration","scope":6938,"src":"4089:27:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"},"typeName":{"id":6922,"nodeType":"UserDefinedTypeName","pathNode":{"id":6921,"name":"Details","nameLocations":["4089:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"4089:7:15"},"referencedDeclaration":6704,"src":"4089:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"visibility":"internal"}],"id":6927,"initialValue":{"baseExpression":{"id":6924,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"4119:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":6926,"indexExpression":{"id":6925,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"4134:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4119:25:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4089:55:15"},{"expression":{"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6928,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"4152:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"id":6930,"indexExpression":{"id":6929,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"4158:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4152:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_memory_ptr","typeString":"struct phoneLink.Details memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6931,"name":"currentItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"4174:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details storage pointer"}},"src":"4152:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_memory_ptr","typeString":"struct phoneLink.Details memory"}},"id":6933,"nodeType":"ExpressionStatement","src":"4152:33:15"},{"expression":{"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6934,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"4193:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4209:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4193:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6937,"nodeType":"ExpressionStatement","src":"4193:17:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6909,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"4023:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6910,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"4027:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4023:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6939,"initializationExpression":{"assignments":[6906],"declarations":[{"constant":false,"id":6906,"mutability":"mutable","name":"i","nameLocation":"4016:1:15","nodeType":"VariableDeclaration","scope":6939,"src":"4008:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6905,"name":"uint256","nodeType":"ElementaryTypeName","src":"4008:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6908,"initialValue":{"hexValue":"30","id":6907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4020:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4008:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4043:3:15","subExpression":{"id":6912,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"4043:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6914,"nodeType":"ExpressionStatement","src":"4043:3:15"},"nodeType":"ForStatement","src":"4003:214:15"},{"expression":{"id":6940,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"4229:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"functionReturnParameters":6884,"id":6941,"nodeType":"Return","src":"4222:12:15"}]},"functionSelector":"5a12d0f8","id":6943,"implemented":true,"kind":"function","modifiers":[{"id":6879,"kind":"modifierInvocation","modifierName":{"id":6878,"name":"onlyOwner","nameLocations":["3778:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3778:9:15"},"nodeType":"ModifierInvocation","src":"3778:9:15"}],"name":"getPhoneToDetails","nameLocation":"3746:17:15","nodeType":"FunctionDefinition","parameters":{"id":6877,"nodeType":"ParameterList","parameters":[],"src":"3763:2:15"},"returnParameters":{"id":6884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6943,"src":"3797:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details[]"},"typeName":{"baseType":{"id":6881,"nodeType":"UserDefinedTypeName","pathNode":{"id":6880,"name":"Details","nameLocations":["3797:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"3797:7:15"},"referencedDeclaration":6704,"src":"3797:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":6882,"nodeType":"ArrayTypeName","src":"3797:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}},"visibility":"internal"}],"src":"3796:18:15"},"scope":7859,"src":"3737:502:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7059,"nodeType":"Block","src":"4413:853:15","statements":[{"expression":{"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4448:10:15","subExpression":{"id":6956,"name":"_itemIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"4448:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6958,"nodeType":"ExpressionStatement","src":"4448:10:15"},{"assignments":[6960],"declarations":[{"constant":false,"id":6960,"mutability":"mutable","name":"slNo","nameLocation":"4514:4:15","nodeType":"VariableDeclaration","scope":7059,"src":"4506:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6959,"name":"uint256","nodeType":"ElementaryTypeName","src":"4506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6962,"initialValue":{"id":6961,"name":"_itemIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"4521:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4506:23:15"},{"body":{"id":7004,"nodeType":"Block","src":"4571:216:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":6976,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"4620:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":6980,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"4635:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4639:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4635:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4620:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":6981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4642:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"4620:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":6982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4619:34:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":6974,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4602:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4606:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"4602:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6973,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4592:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4592:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"components":[{"id":6988,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"4695:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4694:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6986,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4677:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4681:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"4677:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4677:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6985,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4667:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4667:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4592:116:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7003,"nodeType":"IfStatement","src":"4579:202:15","trueBody":{"id":7002,"nodeType":"Block","src":"4717:64:15","statements":[{"expression":{"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6993,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"4727:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":6997,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6994,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"4742:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4742:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4727:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":6998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4749:15:15","memberName":"isPrimaryWallet","nodeType":"MemberAccess","referencedDeclaration":6703,"src":"4727:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4767:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4727:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7001,"nodeType":"ExpressionStatement","src":"4727:45:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"4556:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6968,"name":"slNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"4560:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4556:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7005,"initializationExpression":{"assignments":[6964],"declarations":[{"constant":false,"id":6964,"mutability":"mutable","name":"i","nameLocation":"4549:1:15","nodeType":"VariableDeclaration","scope":7005,"src":"4541:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6963,"name":"uint256","nodeType":"ElementaryTypeName","src":"4541:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6966,"initialValue":{"hexValue":"30","id":6965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4553:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4541:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4566:3:15","subExpression":{"id":6970,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"4566:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6972,"nodeType":"ExpressionStatement","src":"4566:3:15"},"nodeType":"ForStatement","src":"4536:251:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7010,"name":"phoneToDetailsUPI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"4835:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(string memory => struct phoneLink.Details storage ref)"}},"id":7012,"indexExpression":{"id":7011,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"4853:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4835:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4859:4:15","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":6695,"src":"4835:28:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4834:30:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7008,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4817:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4821:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"4817:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4817:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7007,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4807:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4807:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"","id":7020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4905:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7018,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4888:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4892:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"4888:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4888:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7017,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4878:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4807:102:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416e20554349206964206173736f63696174656420776974682074686973206e616d6520616c7265616479206578697374732e20506c656173652063686f6f7365206120646966666572656e74206e616d65202121","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4917:87:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070","typeString":"literal_string \"An UCI id associated with this name already exists. Please choose a different name !!\""},"value":"An UCI id associated with this name already exists. Please choose a different name !!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070","typeString":"literal_string \"An UCI id associated with this name already exists. Please choose a different name !!\""}],"id":7006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4792:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4792:218:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7026,"nodeType":"ExpressionStatement","src":"4792:218:15"},{"expression":{"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7027,"name":"phoneToDetailsUPI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"5016:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(string memory => struct phoneLink.Details storage ref)"}},"id":7029,"indexExpression":{"id":7028,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"5034:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5016:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7031,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"5050:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7032,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"5056:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7033,"name":"typeOfIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"5068:16:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7034,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"5086:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5094:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7030,"name":"Details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"5042:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Details_$6704_storage_ptr_$","typeString":"type(struct phoneLink.Details storage pointer)"}},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_memory_ptr","typeString":"struct phoneLink.Details memory"}},"src":"5016:83:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7038,"nodeType":"ExpressionStatement","src":"5016:83:15"},{"expression":{"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7039,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"5105:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7041,"indexExpression":{"id":7040,"name":"slNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"5120:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5105:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7043,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"5136:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7044,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"5142:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7045,"name":"typeOfIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"5154:16:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7046,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"5172:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5180:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7042,"name":"Details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"5128:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Details_$6704_storage_ptr_$","typeString":"type(struct phoneLink.Details storage pointer)"}},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5128:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_memory_ptr","typeString":"struct phoneLink.Details memory"}},"src":"5105:80:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7050,"nodeType":"ExpressionStatement","src":"5105:80:15"},{"eventCall":{"arguments":[{"id":7052,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"5212:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7053,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"5218:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7054,"name":"typeOfIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"5230:16:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7055,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"5248:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5256:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7051,"name":"DetailsCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"5197:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_bool_$returns$__$","typeString":"function (string memory,string memory,string memory,address,bool)"}},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5197:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7058,"nodeType":"EmitStatement","src":"5192:69:15"}]},"functionSelector":"2a41ffd9","id":7060,"implemented":true,"kind":"function","modifiers":[{"id":6954,"kind":"modifierInvocation","modifierName":{"id":6953,"name":"nonReentrant","nameLocations":["4400:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"4400:12:15"},"nodeType":"ModifierInvocation","src":"4400:12:15"}],"name":"enterDetails","nameLocation":"4266:12:15","nodeType":"FunctionDefinition","parameters":{"id":6952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"name","nameLocation":"4298:4:15","nodeType":"VariableDeclaration","scope":7060,"src":"4284:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6944,"name":"string","nodeType":"ElementaryTypeName","src":"4284:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6947,"mutability":"mutable","name":"identifier","nameLocation":"4322:10:15","nodeType":"VariableDeclaration","scope":7060,"src":"4308:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6946,"name":"string","nodeType":"ElementaryTypeName","src":"4308:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6949,"mutability":"mutable","name":"typeOfIdentifier","nameLocation":"4352:16:15","nodeType":"VariableDeclaration","scope":7060,"src":"4338:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6948,"name":"string","nodeType":"ElementaryTypeName","src":"4338:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6951,"mutability":"mutable","name":"sender","nameLocation":"4382:6:15","nodeType":"VariableDeclaration","scope":7060,"src":"4374:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6950,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4278:114:15"},"returnParameters":{"id":6955,"nodeType":"ParameterList","parameters":[],"src":"4413:0:15"},"scope":7859,"src":"4257:1009:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7091,"nodeType":"Block","src":"5343:187:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7070,"name":"phoneToDetailsUPI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"5388:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(string memory => struct phoneLink.Details storage ref)"}},"id":7072,"indexExpression":{"id":7071,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"5406:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5388:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5412:4:15","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":6695,"src":"5388:28:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5387:30:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7068,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5370:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5374:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"5370:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5370:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7067,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5360:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5360:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"","id":7080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5456:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7078,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5439:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5443:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"5439:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5439:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7077,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5429:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5429:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5360:100:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7089,"nodeType":"Block","src":"5499:27:15","statements":[{"expression":{"hexValue":"66616c7365","id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5514:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7066,"id":7088,"nodeType":"Return","src":"5507:12:15"}]},"id":7090,"nodeType":"IfStatement","src":"5349:177:15","trueBody":{"id":7086,"nodeType":"Block","src":"5467:26:15","statements":[{"expression":{"hexValue":"74727565","id":7084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5482:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7066,"id":7085,"nodeType":"Return","src":"5475:11:15"}]}}]},"functionSelector":"e13d23e5","id":7092,"implemented":true,"kind":"function","modifiers":[],"name":"checkUniqueUCI","nameLocation":"5279:14:15","nodeType":"FunctionDefinition","parameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7062,"mutability":"mutable","name":"name","nameLocation":"5308:4:15","nodeType":"VariableDeclaration","scope":7092,"src":"5294:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7061,"name":"string","nodeType":"ElementaryTypeName","src":"5294:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5293:20:15"},"returnParameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7092,"src":"5337:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7064,"name":"bool","nodeType":"ElementaryTypeName","src":"5337:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5336:6:15"},"scope":7859,"src":"5270:260:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7200,"nodeType":"Block","src":"5641:755:15","statements":[{"assignments":[7102],"declarations":[{"constant":false,"id":7102,"mutability":"mutable","name":"slNo","nameLocation":"5697:4:15","nodeType":"VariableDeclaration","scope":7200,"src":"5689:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7101,"name":"uint256","nodeType":"ElementaryTypeName","src":"5689:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7104,"initialValue":{"id":7103,"name":"_itemIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"5704:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5689:23:15"},{"body":{"id":7146,"nodeType":"Block","src":"5799:216:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7118,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"5848:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7122,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7119,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"5863:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5867:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5863:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5848:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5870:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"5848:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5847:34:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7116,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5830:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5834:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"5830:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5830:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7115,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5820:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5820:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"components":[{"id":7130,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"5923:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5922:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7128,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5905:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5909:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"5905:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5895:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5895:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5820:116:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7145,"nodeType":"IfStatement","src":"5807:202:15","trueBody":{"id":7144,"nodeType":"Block","src":"5945:64:15","statements":[{"expression":{"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7135,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"5955:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7139,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"5970:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5974:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5970:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5955:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5977:15:15","memberName":"isPrimaryWallet","nodeType":"MemberAccess","referencedDeclaration":6703,"src":"5955:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5995:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5955:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7143,"nodeType":"ExpressionStatement","src":"5955:45:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"5784:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7110,"name":"slNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"5788:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5784:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7147,"initializationExpression":{"assignments":[7106],"declarations":[{"constant":false,"id":7106,"mutability":"mutable","name":"i","nameLocation":"5777:1:15","nodeType":"VariableDeclaration","scope":7147,"src":"5769:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7105,"name":"uint256","nodeType":"ElementaryTypeName","src":"5769:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7108,"initialValue":{"hexValue":"30","id":7107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5781:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5769:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5794:3:15","subExpression":{"id":7112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"5794:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7114,"nodeType":"ExpressionStatement","src":"5794:3:15"},"nodeType":"ForStatement","src":"5764:251:15"},{"body":{"id":7198,"nodeType":"Block","src":"6111:281:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7158,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"6132:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7162,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7159,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"6147:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6151:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6147:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6132:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6154:22:15","memberName":"connectedWalletAddress","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"6132:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7164,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"6180:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6132:54:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7169,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"6226:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7173,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"6241:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6245:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6241:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6226:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6248:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"6226:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6225:34:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7167,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6208:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6212:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"6208:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6208:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7166,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6198:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"components":[{"id":7181,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"6301:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6300:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7179,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6283:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6287:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"6283:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6283:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7178,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6273:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6198:116:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6132:182:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7197,"nodeType":"IfStatement","src":"6119:267:15","trueBody":{"id":7196,"nodeType":"Block","src":"6323:63:15","statements":[{"expression":{"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7187,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"6333:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7191,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"6348:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6352:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6348:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6333:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6355:15:15","memberName":"isPrimaryWallet","nodeType":"MemberAccess","referencedDeclaration":6703,"src":"6333:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6373:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6333:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7195,"nodeType":"ExpressionStatement","src":"6333:44:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"6096:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7153,"name":"slNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"6100:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6096:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7199,"initializationExpression":{"assignments":[7149],"declarations":[{"constant":false,"id":7149,"mutability":"mutable","name":"i","nameLocation":"6089:1:15","nodeType":"VariableDeclaration","scope":7199,"src":"6081:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6081:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7151,"initialValue":{"hexValue":"30","id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6093:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6081:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6106:3:15","subExpression":{"id":7155,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"6106:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7157,"nodeType":"ExpressionStatement","src":"6106:3:15"},"nodeType":"ForStatement","src":"6076:316:15"}]},"functionSelector":"0c60b372","id":7201,"implemented":true,"kind":"function","modifiers":[{"id":7099,"kind":"modifierInvocation","modifierName":{"id":7098,"name":"nonReentrant","nameLocations":["5628:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"5628:12:15"},"nodeType":"ModifierInvocation","src":"5628:12:15"}],"name":"makePrimary","nameLocation":"5567:11:15","nodeType":"FunctionDefinition","parameters":{"id":7097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"wallet","nameLocation":"5587:6:15","nodeType":"VariableDeclaration","scope":7201,"src":"5579:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7093,"name":"address","nodeType":"ElementaryTypeName","src":"5579:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7096,"mutability":"mutable","name":"identifier","nameLocation":"5609:10:15","nodeType":"VariableDeclaration","scope":7201,"src":"5595:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7095,"name":"string","nodeType":"ElementaryTypeName","src":"5595:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5578:42:15"},"returnParameters":{"id":7100,"nodeType":"ParameterList","parameters":[],"src":"5641:0:15"},"scope":7859,"src":"5558:838:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7311,"nodeType":"Block","src":"6475:747:15","statements":[{"assignments":[7209],"declarations":[{"constant":false,"id":7209,"mutability":"mutable","name":"totalItemCount","nameLocation":"6541:14:15","nodeType":"VariableDeclaration","scope":7311,"src":"6533:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7208,"name":"uint256","nodeType":"ElementaryTypeName","src":"6533:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7211,"initialValue":{"id":7210,"name":"_itemIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"6558:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6533:33:15"},{"assignments":[7213],"declarations":[{"constant":false,"id":7213,"mutability":"mutable","name":"currentIndex","nameLocation":"6580:12:15","nodeType":"VariableDeclaration","scope":7311,"src":"6572:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7212,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7215,"initialValue":{"hexValue":"30","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6595:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6572:24:15"},{"assignments":[7220],"declarations":[{"constant":false,"id":7220,"mutability":"mutable","name":"items","nameLocation":"6620:5:15","nodeType":"VariableDeclaration","scope":7311,"src":"6603:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details[]"},"typeName":{"baseType":{"id":7218,"nodeType":"UserDefinedTypeName","pathNode":{"id":7217,"name":"Details","nameLocations":["6603:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"6603:7:15"},"referencedDeclaration":6704,"src":"6603:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":7219,"nodeType":"ArrayTypeName","src":"6603:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}},"visibility":"internal"}],"id":7227,"initialValue":{"arguments":[{"id":7225,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"6642:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6628:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct phoneLink.Details memory[] memory)"},"typeName":{"baseType":{"id":7222,"nodeType":"UserDefinedTypeName","pathNode":{"id":7221,"name":"Details","nameLocations":["6632:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"6632:7:15"},"referencedDeclaration":6704,"src":"6632:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":7223,"nodeType":"ArrayTypeName","src":"6632:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6628:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6603:54:15"},{"body":{"id":7307,"nodeType":"Block","src":"6708:491:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7238,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"6720:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7242,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"6735:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6739:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6735:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6720:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6742:22:15","memberName":"connectedWalletAddress","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"6720:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7244,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6768:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6772:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6768:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6720:58:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7306,"nodeType":"IfStatement","src":"6716:477:15","trueBody":{"id":7305,"nodeType":"Block","src":"6780:413:15","statements":[{"body":{"id":7303,"nodeType":"Block","src":"6835:350:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7260,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"6892:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7264,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7261,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"6907:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6911:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6907:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6892:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6914:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"6892:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6891:34:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7258,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6874:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6878:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"6874:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6874:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7257,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6864:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6864:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7272,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"6971:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7276,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7273,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"6986:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6990:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6986:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6971:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6993:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"6971:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6970:34:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7270,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6953:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6957:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"6953:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6953:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7269,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6943:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6943:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6864:142:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7302,"nodeType":"IfStatement","src":"6847:328:15","trueBody":{"id":7301,"nodeType":"Block","src":"7019:156:15","statements":[{"assignments":[7284],"declarations":[{"constant":false,"id":7284,"mutability":"mutable","name":"currentItem","nameLocation":"7049:11:15","nodeType":"VariableDeclaration","scope":7301,"src":"7033:27:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"},"typeName":{"id":7283,"nodeType":"UserDefinedTypeName","pathNode":{"id":7282,"name":"Details","nameLocations":["7033:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"7033:7:15"},"referencedDeclaration":6704,"src":"7033:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"visibility":"internal"}],"id":7290,"initialValue":{"baseExpression":{"id":7285,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"7063:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7289,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7286,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"7078:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7082:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7078:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7063:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7033:51:15"},{"expression":{"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7291,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"7098:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"id":7293,"indexExpression":{"id":7292,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"7104:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7098:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_memory_ptr","typeString":"struct phoneLink.Details memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7294,"name":"currentItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"7120:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details storage pointer"}},"src":"7098:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_memory_ptr","typeString":"struct phoneLink.Details memory"}},"id":7296,"nodeType":"ExpressionStatement","src":"7098:33:15"},{"expression":{"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7297,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"7145:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7161:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7145:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7300,"nodeType":"ExpressionStatement","src":"7145:17:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7251,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"6810:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7252,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"6814:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7304,"initializationExpression":{"assignments":[7248],"declarations":[{"constant":false,"id":7248,"mutability":"mutable","name":"j","nameLocation":"6803:1:15","nodeType":"VariableDeclaration","scope":7304,"src":"6795:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6795:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7250,"initialValue":{"hexValue":"30","id":7249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6807:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6795:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6830:3:15","subExpression":{"id":7254,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"6830:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7256,"nodeType":"ExpressionStatement","src":"6830:3:15"},"nodeType":"ForStatement","src":"6790:395:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7232,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"6683:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7233,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"6687:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6683:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7308,"initializationExpression":{"assignments":[7229],"declarations":[{"constant":false,"id":7229,"mutability":"mutable","name":"i","nameLocation":"6676:1:15","nodeType":"VariableDeclaration","scope":7308,"src":"6668:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7228,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7231,"initialValue":{"hexValue":"30","id":7230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6680:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6668:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6703:3:15","subExpression":{"id":7235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"6703:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7237,"nodeType":"ExpressionStatement","src":"6703:3:15"},"nodeType":"ForStatement","src":"6663:536:15"},{"expression":{"id":7309,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"7212:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"functionReturnParameters":7207,"id":7310,"nodeType":"Return","src":"7205:12:15"}]},"functionSelector":"d263be48","id":7312,"implemented":true,"kind":"function","modifiers":[],"name":"myWallets","nameLocation":"6424:9:15","nodeType":"FunctionDefinition","parameters":{"id":7202,"nodeType":"ParameterList","parameters":[],"src":"6433:2:15"},"returnParameters":{"id":7207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7312,"src":"6457:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details[]"},"typeName":{"baseType":{"id":7204,"nodeType":"UserDefinedTypeName","pathNode":{"id":7203,"name":"Details","nameLocations":["6457:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"6457:7:15"},"referencedDeclaration":6704,"src":"6457:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":7205,"nodeType":"ArrayTypeName","src":"6457:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}},"visibility":"internal"}],"src":"6456:18:15"},"scope":7859,"src":"6415:807:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7424,"nodeType":"Block","src":"7435:760:15","statements":[{"assignments":[7328],"declarations":[{"constant":false,"id":7328,"mutability":"mutable","name":"totalItemCount","nameLocation":"7501:14:15","nodeType":"VariableDeclaration","scope":7424,"src":"7493:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7327,"name":"uint256","nodeType":"ElementaryTypeName","src":"7493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7330,"initialValue":{"id":7329,"name":"_itemIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"7518:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7493:33:15"},{"body":{"id":7422,"nodeType":"Block","src":"7578:613:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7341,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"7590:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7345,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"7605:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7609:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7605:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7590:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7612:22:15","memberName":"connectedWalletAddress","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"7590:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7347,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"7638:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7590:54:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7421,"nodeType":"IfStatement","src":"7586:599:15","trueBody":{"id":7420,"nodeType":"Block","src":"7646:539:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7352,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"7699:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7356,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7353,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"7714:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7718:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7714:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7699:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:16:15","memberName":"typeOfIdentifier","nodeType":"MemberAccess","referencedDeclaration":6699,"src":"7699:38:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7698:40:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7350,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7681:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7685:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"7681:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7681:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7349,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7671:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7671:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"components":[{"id":7364,"name":"typeOfIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"7782:16:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7781:18:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7362,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7764:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7768:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"7764:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7764:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7361,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7754:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7754:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7671:130:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7419,"nodeType":"IfStatement","src":"7656:521:15","trueBody":{"id":7418,"nodeType":"Block","src":"7812:365:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7372,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"7869:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7376,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7373,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"7884:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7888:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7884:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7869:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7891:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"7869:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7868:34:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7370,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7851:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7855:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"7851:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7851:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7369,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7841:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"components":[{"id":7384,"name":"oldIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"7948:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7947:15:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7382,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7930:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7934:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"7930:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7381,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7920:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7920:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7841:123:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7417,"nodeType":"IfStatement","src":"7824:343:15","trueBody":{"id":7416,"nodeType":"Block","src":"7977:190:15","statements":[{"expression":{"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7389,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"7991:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7393,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"8006:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8010:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8006:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7991:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8013:4:15","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":6695,"src":"7991:26:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7395,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"8020:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7991:33:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7397,"nodeType":"ExpressionStatement","src":"7991:33:15"},{"expression":{"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7398,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"8038:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7402,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7399,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"8053:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8057:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8053:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8038:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8060:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"8038:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7404,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"8073:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8038:45:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7406,"nodeType":"ExpressionStatement","src":"8038:45:15"},{"expression":{"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7407,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"8097:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7411,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7408,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"8112:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8116:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8112:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8097:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8119:16:15","memberName":"typeOfIdentifier","nodeType":"MemberAccess","referencedDeclaration":6699,"src":"8097:38:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7413,"name":"typeOfIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"8138:16:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8097:57:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7415,"nodeType":"ExpressionStatement","src":"8097:57:15"}]}}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"7553:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7336,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"7557:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7553:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7423,"initializationExpression":{"assignments":[7332],"declarations":[{"constant":false,"id":7332,"mutability":"mutable","name":"i","nameLocation":"7546:1:15","nodeType":"VariableDeclaration","scope":7423,"src":"7538:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7331,"name":"uint256","nodeType":"ElementaryTypeName","src":"7538:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7334,"initialValue":{"hexValue":"30","id":7333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7550:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7538:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7573:3:15","subExpression":{"id":7338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"7573:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7340,"nodeType":"ExpressionStatement","src":"7573:3:15"},"nodeType":"ForStatement","src":"7533:658:15"}]},"functionSelector":"b9598c5e","id":7425,"implemented":true,"kind":"function","modifiers":[{"id":7325,"kind":"modifierInvocation","modifierName":{"id":7324,"name":"nonReentrant","nameLocations":["7422:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"7422:12:15"},"nodeType":"ModifierInvocation","src":"7422:12:15"}],"name":"editProfile","nameLocation":"7256:11:15","nodeType":"FunctionDefinition","parameters":{"id":7323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7314,"mutability":"mutable","name":"name","nameLocation":"7287:4:15","nodeType":"VariableDeclaration","scope":7425,"src":"7273:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7313,"name":"string","nodeType":"ElementaryTypeName","src":"7273:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7316,"mutability":"mutable","name":"identifier","nameLocation":"7311:10:15","nodeType":"VariableDeclaration","scope":7425,"src":"7297:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7315,"name":"string","nodeType":"ElementaryTypeName","src":"7297:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7318,"mutability":"mutable","name":"typeOfIdentifier","nameLocation":"7341:16:15","nodeType":"VariableDeclaration","scope":7425,"src":"7327:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7317,"name":"string","nodeType":"ElementaryTypeName","src":"7327:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7320,"mutability":"mutable","name":"oldIdentifier","nameLocation":"7377:13:15","nodeType":"VariableDeclaration","scope":7425,"src":"7363:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7319,"name":"string","nodeType":"ElementaryTypeName","src":"7363:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7322,"mutability":"mutable","name":"sender","nameLocation":"7404:6:15","nodeType":"VariableDeclaration","scope":7425,"src":"7396:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7321,"name":"address","nodeType":"ElementaryTypeName","src":"7396:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7267:147:15"},"returnParameters":{"id":7326,"nodeType":"ParameterList","parameters":[],"src":"7435:0:15"},"scope":7859,"src":"7247:948:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7555,"nodeType":"Block","src":"8538:855:15","statements":[{"assignments":[7435],"declarations":[{"constant":false,"id":7435,"mutability":"mutable","name":"totalItemCount","nameLocation":"8604:14:15","nodeType":"VariableDeclaration","scope":7555,"src":"8596:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7434,"name":"uint256","nodeType":"ElementaryTypeName","src":"8596:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7437,"initialValue":{"id":7436,"name":"_itemIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"8621:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8596:33:15"},{"assignments":[7439],"declarations":[{"constant":false,"id":7439,"mutability":"mutable","name":"itemCount","nameLocation":"8643:9:15","nodeType":"VariableDeclaration","scope":7555,"src":"8635:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7438,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7441,"initialValue":{"hexValue":"30","id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8655:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8635:21:15"},{"assignments":[7443],"declarations":[{"constant":false,"id":7443,"mutability":"mutable","name":"currentIndex","nameLocation":"8670:12:15","nodeType":"VariableDeclaration","scope":7555,"src":"8662:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7442,"name":"uint256","nodeType":"ElementaryTypeName","src":"8662:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7445,"initialValue":{"hexValue":"30","id":7444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8685:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8662:24:15"},{"body":{"id":7482,"nodeType":"Block","src":"8738:189:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7459,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"8787:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7463,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"8802:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8802:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8787:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8809:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"8787:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8786:34:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7457,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8769:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8773:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"8769:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8769:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7456,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8759:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8759:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"components":[{"id":7471,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"8862:14:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8861:16:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7469,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8844:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8848:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"8844:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8844:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7468,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8834:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8834:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8759:120:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7481,"nodeType":"IfStatement","src":"8746:175:15","trueBody":{"id":7480,"nodeType":"Block","src":"8888:33:15","statements":[{"expression":{"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7476,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"8898:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8911:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8898:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7479,"nodeType":"ExpressionStatement","src":"8898:14:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"8713:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7451,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"8717:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8713:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7483,"initializationExpression":{"assignments":[7447],"declarations":[{"constant":false,"id":7447,"mutability":"mutable","name":"i","nameLocation":"8706:1:15","nodeType":"VariableDeclaration","scope":7483,"src":"8698:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7446,"name":"uint256","nodeType":"ElementaryTypeName","src":"8698:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7449,"initialValue":{"hexValue":"30","id":7448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8710:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8698:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8733:3:15","subExpression":{"id":7453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"8733:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7455,"nodeType":"ExpressionStatement","src":"8733:3:15"},"nodeType":"ForStatement","src":"8693:234:15"},{"assignments":[7488],"declarations":[{"constant":false,"id":7488,"mutability":"mutable","name":"detail","nameLocation":"8950:6:15","nodeType":"VariableDeclaration","scope":7555,"src":"8933:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details[]"},"typeName":{"baseType":{"id":7486,"nodeType":"UserDefinedTypeName","pathNode":{"id":7485,"name":"Details","nameLocations":["8933:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"8933:7:15"},"referencedDeclaration":6704,"src":"8933:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":7487,"nodeType":"ArrayTypeName","src":"8933:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}},"visibility":"internal"}],"id":7495,"initialValue":{"arguments":[{"id":7493,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"8973:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8959:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct phoneLink.Details memory[] memory)"},"typeName":{"baseType":{"id":7490,"nodeType":"UserDefinedTypeName","pathNode":{"id":7489,"name":"Details","nameLocations":["8963:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"8963:7:15"},"referencedDeclaration":6704,"src":"8963:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":7491,"nodeType":"ArrayTypeName","src":"8963:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8959:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8933:50:15"},{"body":{"id":7551,"nodeType":"Block","src":"9034:336:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7509,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"9083:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7513,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"9098:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9102:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9098:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9083:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9105:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"9083:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9082:34:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7507,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9065:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9069:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"9065:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7506,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9055:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9055:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"components":[{"id":7521,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"9158:14:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9157:16:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7519,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9140:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9144:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"9140:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9140:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7518,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9130:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9130:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9055:120:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7550,"nodeType":"IfStatement","src":"9042:322:15","trueBody":{"id":7549,"nodeType":"Block","src":"9184:180:15","statements":[{"assignments":[7527],"declarations":[{"constant":false,"id":7527,"mutability":"mutable","name":"currentId","nameLocation":"9202:9:15","nodeType":"VariableDeclaration","scope":7549,"src":"9194:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7526,"name":"uint256","nodeType":"ElementaryTypeName","src":"9194:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7531,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7528,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"9214:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9218:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9214:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9194:25:15"},{"assignments":[7534],"declarations":[{"constant":false,"id":7534,"mutability":"mutable","name":"currentItem","nameLocation":"9245:11:15","nodeType":"VariableDeclaration","scope":7549,"src":"9229:27:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"},"typeName":{"id":7533,"nodeType":"UserDefinedTypeName","pathNode":{"id":7532,"name":"Details","nameLocations":["9229:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"9229:7:15"},"referencedDeclaration":6704,"src":"9229:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"visibility":"internal"}],"id":7538,"initialValue":{"baseExpression":{"id":7535,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"9259:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7537,"indexExpression":{"id":7536,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"9274:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9259:25:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9229:55:15"},{"expression":{"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7539,"name":"detail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"9294:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"id":7541,"indexExpression":{"id":7540,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"9301:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9294:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_memory_ptr","typeString":"struct phoneLink.Details memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7542,"name":"currentItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7534,"src":"9317:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details storage pointer"}},"src":"9294:34:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_memory_ptr","typeString":"struct phoneLink.Details memory"}},"id":7544,"nodeType":"ExpressionStatement","src":"9294:34:15"},{"expression":{"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7545,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"9338:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9354:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9338:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7548,"nodeType":"ExpressionStatement","src":"9338:17:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7500,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"9009:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7501,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"9013:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9009:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7552,"initializationExpression":{"assignments":[7497],"declarations":[{"constant":false,"id":7497,"mutability":"mutable","name":"i","nameLocation":"9002:1:15","nodeType":"VariableDeclaration","scope":7552,"src":"8994:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7496,"name":"uint256","nodeType":"ElementaryTypeName","src":"8994:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7499,"initialValue":{"hexValue":"30","id":7498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8994:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9029:3:15","subExpression":{"id":7503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"9029:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7505,"nodeType":"ExpressionStatement","src":"9029:3:15"},"nodeType":"ForStatement","src":"8989:381:15"},{"expression":{"id":7553,"name":"detail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"9382:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details memory[] memory"}},"functionReturnParameters":7433,"id":7554,"nodeType":"Return","src":"9375:13:15"}]},"functionSelector":"6e997665","id":7556,"implemented":true,"kind":"function","modifiers":[],"name":"fetchAllWalletAddress","nameLocation":"8439:21:15","nodeType":"FunctionDefinition","parameters":{"id":7428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"userIdentifier","nameLocation":"8480:14:15","nodeType":"VariableDeclaration","scope":7556,"src":"8466:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7426,"name":"string","nodeType":"ElementaryTypeName","src":"8466:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8460:38:15"},"returnParameters":{"id":7433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7556,"src":"8520:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","typeString":"struct phoneLink.Details[]"},"typeName":{"baseType":{"id":7430,"nodeType":"UserDefinedTypeName","pathNode":{"id":7429,"name":"Details","nameLocations":["8520:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":6704,"src":"8520:7:15"},"referencedDeclaration":6704,"src":"8520:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage_ptr","typeString":"struct phoneLink.Details"}},"id":7431,"nodeType":"ArrayTypeName","src":"8520:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Details_$6704_storage_$dyn_storage_ptr","typeString":"struct phoneLink.Details[]"}},"visibility":"internal"}],"src":"8519:18:15"},"scope":7859,"src":"8430:963:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7622,"nodeType":"Block","src":"9510:430:15","statements":[{"assignments":[7564],"declarations":[{"constant":false,"id":7564,"mutability":"mutable","name":"unique","nameLocation":"9521:6:15","nodeType":"VariableDeclaration","scope":7622,"src":"9516:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7563,"name":"bool","nodeType":"ElementaryTypeName","src":"9516:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7566,"initialValue":{"hexValue":"74727565","id":7565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9530:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"9516:18:15"},{"assignments":[7568],"declarations":[{"constant":false,"id":7568,"mutability":"mutable","name":"slNo","nameLocation":"9590:4:15","nodeType":"VariableDeclaration","scope":7622,"src":"9582:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7567,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7570,"initialValue":{"id":7569,"name":"_itemIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"9597:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9582:23:15"},{"body":{"id":7618,"nodeType":"Block","src":"9647:270:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7581,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"9668:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7585,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7582,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"9683:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9687:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9683:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9668:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9690:22:15","memberName":"connectedWalletAddress","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"9668:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9716:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9720:6:15","memberName":"sender","nodeType":"MemberAccess","src":"9716:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9668:58:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7593,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"9766:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7597,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7594,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"9781:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9785:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9781:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9766:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9788:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"9766:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9765:34:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7591,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9748:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9752:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"9748:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9748:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7590,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9738:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9738:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"components":[{"id":7605,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7558,"src":"9841:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9840:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7603,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9823:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9827:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"9823:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9823:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7602,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9813:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9813:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9738:116:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9668:186:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7617,"nodeType":"IfStatement","src":"9655:256:15","trueBody":{"id":7616,"nodeType":"Block","src":"9863:48:15","statements":[{"expression":{"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7611,"name":"unique","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"9873:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9882:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9873:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7614,"nodeType":"ExpressionStatement","src":"9873:14:15"},{"id":7615,"nodeType":"Break","src":"9897:5:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"9632:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7576,"name":"slNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"9636:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9632:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7619,"initializationExpression":{"assignments":[7572],"declarations":[{"constant":false,"id":7572,"mutability":"mutable","name":"i","nameLocation":"9625:1:15","nodeType":"VariableDeclaration","scope":7619,"src":"9617:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7571,"name":"uint256","nodeType":"ElementaryTypeName","src":"9617:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7574,"initialValue":{"hexValue":"30","id":7573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9629:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9617:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9642:3:15","subExpression":{"id":7578,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"9642:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7580,"nodeType":"ExpressionStatement","src":"9642:3:15"},"nodeType":"ForStatement","src":"9612:305:15"},{"expression":{"id":7620,"name":"unique","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"9929:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7562,"id":7621,"nodeType":"Return","src":"9922:13:15"}]},"functionSelector":"15ccb680","id":7623,"implemented":true,"kind":"function","modifiers":[],"name":"uniqueEntry","nameLocation":"9437:11:15","nodeType":"FunctionDefinition","parameters":{"id":7559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7558,"mutability":"mutable","name":"identifier","nameLocation":"9468:10:15","nodeType":"VariableDeclaration","scope":7623,"src":"9454:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7557,"name":"string","nodeType":"ElementaryTypeName","src":"9454:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9448:34:15"},"returnParameters":{"id":7562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7623,"src":"9504:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7560,"name":"bool","nodeType":"ElementaryTypeName","src":"9504:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9503:6:15"},"scope":7859,"src":"9428:512:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7696,"nodeType":"Block","src":"10047:499:15","statements":[{"assignments":[7631],"declarations":[{"constant":false,"id":7631,"mutability":"mutable","name":"totalItemCount","nameLocation":"10113:14:15","nodeType":"VariableDeclaration","scope":7696,"src":"10105:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7630,"name":"uint256","nodeType":"ElementaryTypeName","src":"10105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7633,"initialValue":{"id":7632,"name":"_itemIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"10130:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10105:33:15"},{"assignments":[7635],"declarations":[{"constant":false,"id":7635,"mutability":"mutable","name":"wallet","nameLocation":"10152:6:15","nodeType":"VariableDeclaration","scope":7696,"src":"10144:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7634,"name":"address","nodeType":"ElementaryTypeName","src":"10144:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7640,"initialValue":{"arguments":[{"hexValue":"30","id":7638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10161:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7636,"name":"address","nodeType":"ElementaryTypeName","src":"10161:7:15","typeDescriptions":{}}},"id":7639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10144:27:15"},{"body":{"id":7692,"nodeType":"Block","src":"10223:300:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"components":[{"expression":{"baseExpression":{"id":7654,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"10272:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7658,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7655,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"10287:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10291:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10287:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10272:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10294:10:15","memberName":"identifier","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"10272:32:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":7660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10271:34:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":7652,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10254:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10258:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"10254:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10254:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7651,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10244:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10244:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"components":[{"id":7666,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"10347:14:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10346:16:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7664,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10329:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10333:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"10329:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10329:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7663,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10319:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10319:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10244:120:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7671,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"10376:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7675,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7672,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"10391:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10395:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10391:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10376:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:15:15","memberName":"isPrimaryWallet","nodeType":"MemberAccess","referencedDeclaration":6703,"src":"10376:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":7677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10417:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10376:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10244:177:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7691,"nodeType":"IfStatement","src":"10231:286:15","trueBody":{"id":7690,"nodeType":"Block","src":"10430:87:15","statements":[{"expression":{"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7680,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"10440:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":7681,"name":"phoneToDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"10449:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(uint256 => struct phoneLink.Details storage ref)"}},"id":7685,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"10464:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10468:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10464:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10449:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10471:22:15","memberName":"connectedWalletAddress","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"10449:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10440:53:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7688,"nodeType":"ExpressionStatement","src":"10440:53:15"},{"id":7689,"nodeType":"Break","src":"10503:5:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"10198:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7646,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"10202:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10198:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7693,"initializationExpression":{"assignments":[7642],"declarations":[{"constant":false,"id":7642,"mutability":"mutable","name":"i","nameLocation":"10191:1:15","nodeType":"VariableDeclaration","scope":7693,"src":"10183:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7641,"name":"uint256","nodeType":"ElementaryTypeName","src":"10183:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7644,"initialValue":{"hexValue":"30","id":7643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10195:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10183:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10218:3:15","subExpression":{"id":7648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"10218:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7650,"nodeType":"ExpressionStatement","src":"10218:3:15"},"nodeType":"ForStatement","src":"10178:345:15"},{"expression":{"id":7694,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"10535:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7629,"id":7695,"nodeType":"Return","src":"10528:13:15"}]},"functionSelector":"db461e1a","id":7697,"implemented":true,"kind":"function","modifiers":[],"name":"fetchPrimaryWalletAddress","nameLocation":"9953:25:15","nodeType":"FunctionDefinition","parameters":{"id":7626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7625,"mutability":"mutable","name":"userIdentifier","nameLocation":"9998:14:15","nodeType":"VariableDeclaration","scope":7697,"src":"9984:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7624,"name":"string","nodeType":"ElementaryTypeName","src":"9984:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9978:38:15"},"returnParameters":{"id":7629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7697,"src":"10038:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7627,"name":"address","nodeType":"ElementaryTypeName","src":"10038:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10037:9:15"},"scope":7859,"src":"9944:602:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7709,"nodeType":"Block","src":"10632:64:15","statements":[{"expression":{"expression":{"baseExpression":{"id":7704,"name":"phoneToDetailsUPI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"10645:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Details_$6704_storage_$","typeString":"mapping(string memory => struct phoneLink.Details storage ref)"}},"id":7706,"indexExpression":{"id":7705,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"10663:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10645:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Details_$6704_storage","typeString":"struct phoneLink.Details storage ref"}},"id":7707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10669:22:15","memberName":"connectedWalletAddress","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"10645:46:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7703,"id":7708,"nodeType":"Return","src":"10638:53:15"}]},"functionSelector":"04874354","id":7710,"implemented":true,"kind":"function","modifiers":[],"name":"fetchWalletAddressUCI","nameLocation":"10558:21:15","nodeType":"FunctionDefinition","parameters":{"id":7700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7699,"mutability":"mutable","name":"name","nameLocation":"10594:4:15","nodeType":"VariableDeclaration","scope":7710,"src":"10580:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7698,"name":"string","nodeType":"ElementaryTypeName","src":"10580:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10579:20:15"},"returnParameters":{"id":7703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7710,"src":"10623:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7701,"name":"address","nodeType":"ElementaryTypeName","src":"10623:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10622:9:15"},"scope":7859,"src":"10549:147:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7796,"nodeType":"Block","src":"10881:692:15","statements":[{"assignments":[7728],"declarations":[{"constant":false,"id":7728,"mutability":"mutable","name":"messageHash","nameLocation":"10895:11:15","nodeType":"VariableDeclaration","scope":7796,"src":"10887:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10887:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7738,"initialValue":{"arguments":[{"arguments":[{"id":7732,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"10943:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7733,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"10951:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7734,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7716,"src":"10958:8:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7735,"name":"coinAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"10968:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7730,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10926:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10930:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"10926:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10926:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7729,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10909:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10909:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10887:98:15"},{"assignments":[7740],"declarations":[{"constant":false,"id":7740,"mutability":"mutable","name":"ethSignedMessageHash","nameLocation":"11080:20:15","nodeType":"VariableDeclaration","scope":7796,"src":"11072:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11072:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7745,"initialValue":{"arguments":[{"id":7743,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"11143:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7741,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"11103:16:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3155_$","typeString":"type(library MessageHashUtils)"}},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11120:22:15","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":3096,"src":"11103:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11103:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11072:83:15"},{"assignments":[7747],"declarations":[{"constant":false,"id":7747,"mutability":"mutable","name":"recoveredSigner","nameLocation":"11169:15:15","nodeType":"VariableDeclaration","scope":7796,"src":"11161:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7746,"name":"address","nodeType":"ElementaryTypeName","src":"11161:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7753,"initialValue":{"arguments":[{"id":7750,"name":"ethSignedMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"11201:20:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7751,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"11223:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7748,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"11187:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3081_$","typeString":"type(library ECDSA)"}},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11193:7:15","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2837,"src":"11187:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11187:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11161:72:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7755,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"11248:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7756,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"11267:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11248:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":7758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11275:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":7754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11240:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11240:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7760,"nodeType":"ExpressionStatement","src":"11240:55:15"},{"assignments":[7762],"declarations":[{"constant":false,"id":7762,"mutability":"mutable","name":"myProfit","nameLocation":"11310:8:15","nodeType":"VariableDeclaration","scope":7796,"src":"11302:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7761,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7769,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7763,"name":"coinAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"11322:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7764,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"11335:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11322:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11321:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":7767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11350:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"11321:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11302:52:15"},{"assignments":[7771],"declarations":[{"constant":false,"id":7771,"mutability":"mutable","name":"amountToBeTransferred","nameLocation":"11368:21:15","nodeType":"VariableDeclaration","scope":7796,"src":"11360:29:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7770,"name":"uint256","nodeType":"ElementaryTypeName","src":"11360:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7775,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7772,"name":"coinAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"11392:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7773,"name":"myProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"11405:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11392:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11360:53:15"},{"expression":{"arguments":[{"id":7780,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"11447:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7781,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7716,"src":"11455:8:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7782,"name":"amountToBeTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"11465:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7777,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"11427:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7776,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"11420:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1455_$","typeString":"type(contract IERC20)"}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11420:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1455","typeString":"contract IERC20"}},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11434:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1454,"src":"11420:26:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11420:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7784,"nodeType":"ExpressionStatement","src":"11420:67:15"},{"expression":{"arguments":[{"id":7789,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"11520:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7790,"name":"marketowner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"11528:11:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7791,"name":"myProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"11541:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7786,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"11500:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7785,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"11493:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1455_$","typeString":"type(contract IERC20)"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11493:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1455","typeString":"contract IERC20"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11507:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1454,"src":"11493:26:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11493:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7793,"nodeType":"ExpressionStatement","src":"11493:57:15"},{"expression":{"hexValue":"74727565","id":7794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11564:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7726,"id":7795,"nodeType":"Return","src":"11557:11:15"}]},"functionSelector":"0f1d5ec7","id":7797,"implemented":true,"kind":"function","modifiers":[{"id":7723,"kind":"modifierInvocation","modifierName":{"id":7722,"name":"nonReentrant","nameLocations":["10853:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"10853:12:15"},"nodeType":"ModifierInvocation","src":"10853:12:15"}],"name":"sendMoney","nameLocation":"10709:9:15","nodeType":"FunctionDefinition","parameters":{"id":7721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7712,"mutability":"mutable","name":"coinAmount","nameLocation":"10732:10:15","nodeType":"VariableDeclaration","scope":7797,"src":"10724:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7711,"name":"uint256","nodeType":"ElementaryTypeName","src":"10724:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7714,"mutability":"mutable","name":"token","nameLocation":"10756:5:15","nodeType":"VariableDeclaration","scope":7797,"src":"10748:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7713,"name":"address","nodeType":"ElementaryTypeName","src":"10748:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7716,"mutability":"mutable","name":"receiver","nameLocation":"10783:8:15","nodeType":"VariableDeclaration","scope":7797,"src":"10767:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7715,"name":"address","nodeType":"ElementaryTypeName","src":"10767:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7718,"mutability":"mutable","name":"sender","nameLocation":"10805:6:15","nodeType":"VariableDeclaration","scope":7797,"src":"10797:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7717,"name":"address","nodeType":"ElementaryTypeName","src":"10797:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7720,"mutability":"mutable","name":"signature","nameLocation":"10830:9:15","nodeType":"VariableDeclaration","scope":7797,"src":"10817:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7719,"name":"bytes","nodeType":"ElementaryTypeName","src":"10817:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10718:125:15"},"returnParameters":{"id":7726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7797,"src":"10875:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7724,"name":"bool","nodeType":"ElementaryTypeName","src":"10875:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10874:6:15"},"scope":7859,"src":"10700:873:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7837,"nodeType":"Block","src":"11653:243:15","statements":[{"assignments":[7805],"declarations":[{"constant":false,"id":7805,"mutability":"mutable","name":"myProfit","nameLocation":"11667:8:15","nodeType":"VariableDeclaration","scope":7837,"src":"11659:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7804,"name":"uint256","nodeType":"ElementaryTypeName","src":"11659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7813,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7806,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11679:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11683:5:15","memberName":"value","nodeType":"MemberAccess","src":"11679:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7808,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"11691:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11679:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11678:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":7811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"11678:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11659:51:15"},{"assignments":[7815],"declarations":[{"constant":false,"id":7815,"mutability":"mutable","name":"amountToBeTransferred","nameLocation":"11747:21:15","nodeType":"VariableDeclaration","scope":7837,"src":"11739:29:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7814,"name":"uint256","nodeType":"ElementaryTypeName","src":"11739:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7820,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7816,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11771:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11775:5:15","memberName":"value","nodeType":"MemberAccess","src":"11771:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7818,"name":"myProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"11783:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11771:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11739:52:15"},{"expression":{"arguments":[{"id":7826,"name":"amountToBeTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"11824:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7823,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"11805:8:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11797:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7821,"name":"address","nodeType":"ElementaryTypeName","src":"11797:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11797:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11815:8:15","memberName":"transfer","nodeType":"MemberAccess","src":"11797:26:15","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11797:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7828,"nodeType":"ExpressionStatement","src":"11797:49:15"},{"expression":{"arguments":[{"id":7834,"name":"myProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"11882:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7831,"name":"marketowner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"11860:11:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11852:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7829,"name":"address","nodeType":"ElementaryTypeName","src":"11852:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11852:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:8:15","memberName":"transfer","nodeType":"MemberAccess","src":"11852:29:15","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11852:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7836,"nodeType":"ExpressionStatement","src":"11852:39:15"}]},"functionSelector":"1888d712","id":7838,"implemented":true,"kind":"function","modifiers":[{"id":7802,"kind":"modifierInvocation","modifierName":{"id":7801,"name":"nonReentrant","nameLocations":["11640:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"11640:12:15"},"nodeType":"ModifierInvocation","src":"11640:12:15"}],"name":"sendNative","nameLocation":"11586:10:15","nodeType":"FunctionDefinition","parameters":{"id":7800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7799,"mutability":"mutable","name":"receiver","nameLocation":"11613:8:15","nodeType":"VariableDeclaration","scope":7838,"src":"11597:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7798,"name":"address","nodeType":"ElementaryTypeName","src":"11597:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"11596:26:15"},"returnParameters":{"id":7803,"nodeType":"ParameterList","parameters":[],"src":"11653:0:15"},"scope":7859,"src":"11577:319:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7857,"nodeType":"Block","src":"12002:58:15","statements":[{"expression":{"arguments":[{"id":7853,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"12034:8:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7854,"name":"coinAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"12044:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7850,"name":"glltoken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"12015:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7849,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"12008:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1455_$","typeString":"type(contract IERC20)"}},"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1455","typeString":"contract IERC20"}},"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12025:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1422,"src":"12008:25:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7856,"nodeType":"ExpressionStatement","src":"12008:47:15"}]},"functionSelector":"c34d9d7c","id":7858,"implemented":true,"kind":"function","modifiers":[{"id":7845,"kind":"modifierInvocation","modifierName":{"id":7844,"name":"onlyOwner","nameLocations":["11979:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"11979:9:15"},"nodeType":"ModifierInvocation","src":"11979:9:15"},{"id":7847,"kind":"modifierInvocation","modifierName":{"id":7846,"name":"nonReentrant","nameLocations":["11989:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"11989:12:15"},"nodeType":"ModifierInvocation","src":"11989:12:15"}],"name":"getGLL","nameLocation":"11909:6:15","nodeType":"FunctionDefinition","parameters":{"id":7843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7840,"mutability":"mutable","name":"coinAmount","nameLocation":"11924:10:15","nodeType":"VariableDeclaration","scope":7858,"src":"11916:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7839,"name":"uint256","nodeType":"ElementaryTypeName","src":"11916:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7842,"mutability":"mutable","name":"receiver","nameLocation":"11952:8:15","nodeType":"VariableDeclaration","scope":7858,"src":"11936:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7841,"name":"address","nodeType":"ElementaryTypeName","src":"11936:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"11915:46:15"},"returnParameters":{"id":7848,"nodeType":"ParameterList","parameters":[],"src":"12002:0:15"},"scope":7859,"src":"11900:160:15","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":7860,"src":"568:11495:15","usedErrors":[30,35,211,214,1142,1252,1257,1262,1271,1276,1281,2744,2749,2754],"usedEvents":[41,219,1389,1398,6729]}],"src":"33:12031:15"},"id":15}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x5c54228bbb2f1f8616179c51bdb90b7960f4a3414c390ad5c6ead6763eb55a59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://745fe72596bb8fde5f294d9d6b943db942202e4445536ee00da3ba011f876e86\",\"dweb:/ipfs/QmcjeESkk4rbhUVaSBfyq5f8rY56Jms1TwcJXaRD55K3UH\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202534be0585d225cf17dd4a862c6e9d466e4ae75e4801277999e5c51c39b8b07464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 CALLVALUE 0xBE SDIV DUP6 0xD2 0x25 0xCF OR 0xDD BLOBBASEFEE DUP7 0x2C PUSH15 0x9D466E4AE75E4801277999E5C51C39 0xB8 0xB0 PUSH21 0x64736F6C634300081C003300000000000000000000 ","sourceMap":"297:16541:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202534be0585d225cf17dd4a862c6e9d466e4ae75e4801277999e5c51c39b8b07464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 CALLVALUE 0xBE SDIV DUP6 0xD2 0x25 0xCF OR 0xDD BLOBBASEFEE DUP7 0x2C PUSH15 0x9D466E4AE75E4801277999E5C51C39 0xB8 0xB0 PUSH21 0x64736F6C634300081C003300000000000000000000 ","sourceMap":"297:16541:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208085cc65bf4952b9489a6842edb282980f611ce1a6dc5c25eb3b82566de8a8da64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DUP6 0xCC PUSH6 0xBF4952B9489A PUSH9 0x42EDB282980F611CE1 0xA6 0xDC TLOAD 0x25 0xEB EXTCODESIZE DUP3 JUMP PUSH14 0xE8A8DA64736F6C634300081C0033 ","sourceMap":"344:7470:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208085cc65bf4952b9489a6842edb282980f611ce1a6dc5c25eb3b82566de8a8da64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DUP6 0xCC PUSH6 0xBF4952B9489A PUSH9 0x42EDB282980F611CE1 0xA6 0xDC TLOAD 0x25 0xEB EXTCODESIZE DUP3 JUMP PUSH14 0xE8A8DA64736F6C634300081C0033 ","sourceMap":"344:7470:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203abc25de824c285b106a58baf5ab2b9c484a373cc37b7e4c7367aba648b9bb4a64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xBC 0x25 0xDE DUP3 0x4C 0x28 JUMPDEST LT PUSH11 0x58BAF5AB2B9C484A373CC3 PUSH28 0x7E4C7367ABA648B9BB4A64736F6C634300081C003300000000000000 ","sourceMap":"521:3181:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203abc25de824c285b106a58baf5ab2b9c484a373cc37b7e4c7367aba648b9bb4a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xBC 0x25 0xDE DUP3 0x4C 0x28 JUMPDEST LT PUSH11 0x58BAF5AB2B9C484A373CC3 PUSH28 0x7E4C7367ABA648B9BB4A64736F6C634300081C003300000000000000 ","sourceMap":"521:3181:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d05a8eeb523adc0e549aa210d84231cd9746f3a9024f31cd415841f5d525715c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 GAS DUP15 0xEB MSTORE GASPRICE 0xDC 0xE SLOAD SWAP11 LOG2 LT 0xD8 TIMESTAMP BALANCE 0xCD SWAP8 CHAINID RETURN 0xA9 MUL 0x4F BALANCE 0xCD COINBASE PC COINBASE CREATE2 0xD5 0x25 PUSH18 0x5C64736F6C634300081C0033000000000000 ","sourceMap":"258:2354:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/phoneLink.sol":{"phoneLink":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"name","type":"string"},{"indexed":true,"internalType":"string","name":"identifier","type":"string"},{"indexed":true,"internalType":"string","name":"typeOfIdentifier","type":"string"},{"indexed":false,"internalType":"address","name":"connectedWalletAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"isPrimaryWallet","type":"bool"}],"name":"DetailsCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"_itemIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"checkUniqueUCI","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"identifier","type":"string"},{"internalType":"string","name":"typeOfIdentifier","type":"string"},{"internalType":"string","name":"oldIdentifier","type":"string"},{"internalType":"address","name":"sender","type":"address"}],"name":"editProfile","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"identifier","type":"string"},{"internalType":"string","name":"typeOfIdentifier","type":"string"},{"internalType":"address","name":"sender","type":"address"}],"name":"enterDetails","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"userIdentifier","type":"string"}],"name":"fetchAllWalletAddress","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"identifier","type":"string"},{"internalType":"string","name":"typeOfIdentifier","type":"string"},{"internalType":"address","name":"connectedWalletAddress","type":"address"},{"internalType":"bool","name":"isPrimaryWallet","type":"bool"}],"internalType":"struct phoneLink.Details[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"userIdentifier","type":"string"}],"name":"fetchPrimaryWalletAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"fetchWalletAddressUCI","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"coinAmount","type":"uint256"},{"internalType":"address payable","name":"receiver","type":"address"}],"name":"getGLL","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getMarketOwner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPhoneToDetails","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"identifier","type":"string"},{"internalType":"string","name":"typeOfIdentifier","type":"string"},{"internalType":"address","name":"connectedWalletAddress","type":"address"},{"internalType":"bool","name":"isPrimaryWallet","type":"bool"}],"internalType":"struct phoneLink.Details[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"}],"name":"getWalletDetails","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"identifier","type":"string"},{"internalType":"string","name":"typeOfIdentifier","type":"string"},{"internalType":"address","name":"connectedWalletAddress","type":"address"},{"internalType":"bool","name":"isPrimaryWallet","type":"bool"}],"internalType":"struct phoneLink.Details[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"gll","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"string","name":"identifier","type":"string"}],"name":"makePrimary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"marketowner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"myWallets","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"identifier","type":"string"},{"internalType":"string","name":"typeOfIdentifier","type":"string"},{"internalType":"address","name":"connectedWalletAddress","type":"address"},{"internalType":"bool","name":"isPrimaryWallet","type":"bool"}],"internalType":"struct phoneLink.Details[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"phoneToDetails","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"identifier","type":"string"},{"internalType":"string","name":"typeOfIdentifier","type":"string"},{"internalType":"address","name":"connectedWalletAddress","type":"address"},{"internalType":"bool","name":"isPrimaryWallet","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"phoneToDetailsUPI","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"identifier","type":"string"},{"internalType":"string","name":"typeOfIdentifier","type":"string"},{"internalType":"address","name":"connectedWalletAddress","type":"address"},{"internalType":"bool","name":"isPrimaryWallet","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"coinAmount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address payable","name":"receiver","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"sendMoney","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"receiver","type":"address"}],"name":"sendNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address payable","name":"addr","type":"address"}],"name":"setMarketOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"name":"setPlatformFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"identifier","type":"string"}],"name":"uniqueEntry","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b506154578061001f6000396000f3fe6080604052600436106102045760003560e01c80635e385b9211610118578063b9598c5e116100a0578063db461e1a1161006f578063db461e1a1461078d578063dd62ed3e146107ca578063e13d23e514610807578063f24d3af214610844578063f2fde38b1461088557610204565b8063b9598c5e146106f4578063c34d9d7c1461071d578063c4d66de814610739578063d263be481461076257610204565b8063715018a6116100e7578063715018a61461060d5780638cae45d2146106245780638da5cb5b1461066157806395d89b411461068c578063a9059cbb146106b757610204565b80635e385b921461053f5780636cdaa4211461056a5780636e9976651461059357806370a08231146105d057610204565b80631888d7121161019b578063313ce5671161016a578063313ce5671461045257806334a7f1931461047d578063451e9cf0146104a857806352d95491146104d35780635a12d0f81461051457610204565b80631888d712146103a557806323b872dd146103c157806326232a2e146103fe5780632a41ffd91461042957610204565b80630f1d5ec7116101d75780630f1d5ec7146102d757806312e8e2c31461031457806315ccb6801461033d57806318160ddd1461037a57610204565b8063048743541461020957806306fdde0314610246578063095ea7b3146102715780630c60b372146102ae575b600080fd5b34801561021557600080fd5b50610230600480360381019061022b9190614034565b6108ae565b60405161023d91906140be565b60405180910390f35b34801561025257600080fd5b5061025b6108f9565b6040516102689190614158565b60405180910390f35b34801561027d57600080fd5b50610298600480360381019061029391906141dc565b61099a565b6040516102a59190614237565b60405180910390f35b3480156102ba57600080fd5b506102d560048036038101906102d09190614252565b6109bd565b005b3480156102e357600080fd5b506102fe60048036038101906102f9919061438d565b610be5565b60405161030b9190614237565b60405180910390f35b34801561032057600080fd5b5061033b60048036038101906103369190614424565b610e14565b005b34801561034957600080fd5b50610364600480360381019061035f9190614034565b610e36565b6040516103719190614237565b60405180910390f35b34801561038657600080fd5b5061038f610f5e565b60405161039c9190614460565b60405180910390f35b6103bf60048036038101906103ba919061447b565b610f76565b005b3480156103cd57600080fd5b506103e860048036038101906103e391906144a8565b611068565b6040516103f59190614237565b60405180910390f35b34801561040a57600080fd5b50610413611097565b6040516104209190614460565b60405180910390f35b34801561043557600080fd5b50610450600480360381019061044b91906144fb565b61109d565b005b34801561045e57600080fd5b506104676114cd565b60405161047491906145d2565b60405180910390f35b34801561048957600080fd5b506104926114d6565b60405161049f9190614460565b60405180910390f35b3480156104b457600080fd5b506104bd6114dc565b6040516104ca91906145fc565b60405180910390f35b3480156104df57600080fd5b506104fa60048036038101906104f59190614424565b611505565b60405161050b959493929190614617565b60405180910390f35b34801561052057600080fd5b50610529611700565b604051610536919061482d565b60405180910390f35b34801561054b57600080fd5b50610554611a16565b60405161056191906145fc565b60405180910390f35b34801561057657600080fd5b50610591600480360381019061058c919061447b565b611a3a565b005b34801561059f57600080fd5b506105ba60048036038101906105b59190614034565b611a85565b6040516105c7919061482d565b60405180910390f35b3480156105dc57600080fd5b506105f760048036038101906105f2919061484f565b611eaa565b6040516106049190614460565b60405180910390f35b34801561061957600080fd5b50610622611f01565b005b34801561063057600080fd5b5061064b6004803603810190610646919061484f565b611f15565b604051610658919061482d565b60405180910390f35b34801561066d57600080fd5b50610676612295565b60405161068391906140be565b60405180910390f35b34801561069857600080fd5b506106a16122cd565b6040516106ae9190614158565b60405180910390f35b3480156106c357600080fd5b506106de60048036038101906106d991906141dc565b61236e565b6040516106eb9190614237565b60405180910390f35b34801561070057600080fd5b5061071b6004803603810190610716919061487c565b612391565b005b61073760048036038101906107329190614967565b6125b9565b005b34801561074557600080fd5b50610760600480360381019061075b919061484f565b612676565b005b34801561076e57600080fd5b506107776128be565b604051610784919061482d565b60405180910390f35b34801561079957600080fd5b506107b460048036038101906107af9190614034565b612ceb565b6040516107c191906140be565b60405180910390f35b3480156107d657600080fd5b506107f160048036038101906107ec91906149a7565b612e15565b6040516107fe9190614460565b60405180910390f35b34801561081357600080fd5b5061082e60048036038101906108299190614034565b612eaa565b60405161083b9190614237565b60405180910390f35b34801561085057600080fd5b5061086b60048036038101906108669190614034565b612f30565b60405161087c959493929190614617565b60405180910390f35b34801561089157600080fd5b506108ac60048036038101906108a7919061484f565b613141565b005b60006004826040516108c09190614a23565b908152602001604051809103902060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b606060006109056131c7565b905080600301805461091690614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461094290614a69565b801561098f5780601f106109645761010080835404028352916020019161098f565b820191906000526020600020905b81548152906001019060200180831161097257829003601f168201915b505050505091505090565b6000806109a56131ef565b90506109b28185856131f7565b600191505092915050565b6109c5613209565b6000600254905060005b81811015610a9457826040516020016109e89190614a23565b6040516020818303038152906040528051906020012060036000600184610a0f9190614ac9565b8152602001908152602001600020600101604051602001610a309190614b95565b6040516020818303038152906040528051906020012003610a8757600060036000600184610a5e9190614ac9565b815260200190815260200160002060030160146101000a81548160ff0219169083151502179055505b80806001019150506109cf565b5060005b81811015610bd7578373ffffffffffffffffffffffffffffffffffffffff1660036000600184610ac89190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610b89575082604051602001610b299190614a23565b6040516020818303038152906040528051906020012060036000600184610b509190614ac9565b8152602001908152602001600020600101604051602001610b719190614b95565b60405160208183030381529060405280519060200120145b15610bca57600160036000600184610ba19190614ac9565b815260200190815260200160002060030160146101000a81548160ff0219169083151502179055505b8080600101915050610a98565b5050610be1613260565b5050565b6000610bef613209565b600083868689604051602001610c089493929190614c3e565b6040516020818303038152906040528051906020012090506000610c2b82613279565b90506000610c3982866132af565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ca9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca090614cd8565b60405180910390fd5b60006103e86001548b610cbc9190614cf8565b610cc69190614d69565b90506000818b610cd69190614d9a565b90508973ffffffffffffffffffffffffffffffffffffffff166323b872dd898b846040518463ffffffff1660e01b8152600401610d1593929190614e2d565b6020604051808303816000875af1158015610d34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d589190614e90565b508973ffffffffffffffffffffffffffffffffffffffff166323b872dd8960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b8152600401610db693929190614e2d565b6020604051808303816000875af1158015610dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df99190614e90565b50600195505050505050610e0b613260565b95945050505050565b610e1c6132db565b610e24613209565b80600181905550610e33613260565b50565b600080600190506000600254905060005b81811015610f53573373ffffffffffffffffffffffffffffffffffffffff1660036000600184610e779190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610f38575084604051602001610ed89190614a23565b6040516020818303038152906040528051906020012060036000600184610eff9190614ac9565b8152602001908152602001600020600101604051602001610f209190614b95565b60405160208183030381529060405280519060200120145b15610f465760009250610f53565b8080600101915050610e47565b508192505050919050565b600080610f696131c7565b9050806002015491505090565b610f7e613209565b60006103e860015434610f919190614cf8565b610f9b9190614d69565b905060008134610fab9190614d9a565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ff3573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561105a573d6000803e3d6000fd5b505050611065613260565b50565b6000806110736131ef565b9050611080858285613362565b61108b8585856133f7565b60019150509392505050565b60015481565b6110a5613209565b600260008154809291906110b890614ebd565b91905055506000600254905060005b8181101561118c57846040516020016110e09190614a23565b60405160208183030381529060405280519060200120600360006001846111079190614ac9565b81526020019081526020016000206001016040516020016111289190614b95565b604051602081830303815290604052805190602001200361117f576000600360006001846111569190614ac9565b815260200190815260200160002060030160146101000a81548160ff0219169083151502179055505b80806001019150506110c7565b5060405160200161119c90614f2b565b604051602081830303815290604052805190602001206004866040516111c29190614a23565b90815260200160405180910390206000016040516020016111e39190614b95565b6040516020818303038152906040528051906020012014611239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123090614fd8565b60405180910390fd5b6040518060a001604052808681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506004866040516112899190614a23565b908152602001604051809103902060008201518160000190816112ac9190615185565b5060208201518160010190816112c29190615185565b5060408201518160020190816112d89190615185565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff0219169083151502179055509050506040518060a001604052808681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506003600083815260200190815260200160002060008201518160000190816113ab9190615185565b5060208201518160010190816113c19190615185565b5060408201518160020190816113d79190615185565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff021916908315150217905550905050826040516114509190614a23565b6040518091039020846040516114669190614a23565b60405180910390208660405161147c9190614a23565b60405180910390207f2e3249f822bd56e4e9ae7d39402def6df4618c14f212fbe4c35e0c94eddef9fe8560016040516114b6929190615257565b60405180910390a4506114c7613260565b50505050565b60006012905090565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360205280600052604060002060009150905080600001805461152890614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461155490614a69565b80156115a15780601f10611576576101008083540402835291602001916115a1565b820191906000526020600020905b81548152906001019060200180831161158457829003601f168201915b5050505050908060010180546115b690614a69565b80601f01602080910402602001604051908101604052809291908181526020018280546115e290614a69565b801561162f5780601f106116045761010080835404028352916020019161162f565b820191906000526020600020905b81548152906001019060200180831161161257829003601f168201915b50505050509080600201805461164490614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461167090614a69565b80156116bd5780601f10611692576101008083540402835291602001916116bd565b820191906000526020600020905b8154815290600101906020018083116116a057829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16905085565b606061170a6132db565b600060025490506000808267ffffffffffffffff81111561172e5761172d613f09565b5b60405190808252806020026020018201604052801561176757816020015b611754613e93565b81526020019060019003908161174c5790505b50905060005b83811015611a0c5760006001826117849190614ac9565b90506000600360008381526020019081526020016000209050806040518060a00160405290816000820180546117b990614a69565b80601f01602080910402602001604051908101604052809291908181526020018280546117e590614a69565b80156118325780601f1061180757610100808354040283529160200191611832565b820191906000526020600020905b81548152906001019060200180831161181557829003601f168201915b5050505050815260200160018201805461184b90614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461187790614a69565b80156118c45780601f10611899576101008083540402835291602001916118c4565b820191906000526020600020905b8154815290600101906020018083116118a757829003601f168201915b505050505081526020016002820180546118dd90614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461190990614a69565b80156119565780601f1061192b57610100808354040283529160200191611956565b820191906000526020600020905b81548152906001019060200180831161193957829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff1615151515815250508486815181106119e3576119e2615280565b5b60200260200101819052506001856119fb9190614ac9565b94505050808060010191505061176d565b5080935050505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611a426132db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000600254905060008060005b83811015611b2d5785604051602001611aad9190614a23565b6040516020818303038152906040528051906020012060036000600184611ad49190614ac9565b8152602001908152602001600020600101604051602001611af59190614b95565b6040516020818303038152906040528051906020012003611b2057600183611b1d9190614ac9565b92505b8080600101915050611a94565b5060008267ffffffffffffffff811115611b4a57611b49613f09565b5b604051908082528060200260200182016040528015611b8357816020015b611b70613e93565b815260200190600190039081611b685790505b50905060005b84811015611e9d5786604051602001611ba29190614a23565b6040516020818303038152906040528051906020012060036000600184611bc99190614ac9565b8152602001908152602001600020600101604051602001611bea9190614b95565b6040516020818303038152906040528051906020012003611e90576000600182611c149190614ac9565b90506000600360008381526020019081526020016000209050806040518060a0016040529081600082018054611c4990614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7590614a69565b8015611cc25780601f10611c9757610100808354040283529160200191611cc2565b820191906000526020600020905b815481529060010190602001808311611ca557829003601f168201915b50505050508152602001600182018054611cdb90614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054611d0790614a69565b8015611d545780601f10611d2957610100808354040283529160200191611d54565b820191906000526020600020905b815481529060010190602001808311611d3757829003601f168201915b50505050508152602001600282018054611d6d90614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054611d9990614a69565b8015611de65780601f10611dbb57610100808354040283529160200191611de6565b820191906000526020600020905b815481529060010190602001808311611dc957829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581525050848681518110611e7357611e72615280565b5b6020026020010181905250600185611e8b9190614ac9565b945050505b8080600101915050611b89565b5080945050505050919050565b600080611eb56131c7565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b611f096132db565b611f1360006134eb565b565b6060600060025490506000808267ffffffffffffffff811115611f3b57611f3a613f09565b5b604051908082528060200260200182016040528015611f7457816020015b611f61613e93565b815260200190600190039081611f595790505b50905060005b83811015612289578573ffffffffffffffffffffffffffffffffffffffff1660036000600184611faa9190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361227c5760006003600060018461200a9190614ac9565b81526020019081526020016000209050806040518060a001604052908160008201805461203690614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461206290614a69565b80156120af5780601f10612084576101008083540402835291602001916120af565b820191906000526020600020905b81548152906001019060200180831161209257829003601f168201915b505050505081526020016001820180546120c890614a69565b80601f01602080910402602001604051908101604052809291908181526020018280546120f490614a69565b80156121415780601f1061211657610100808354040283529160200191612141565b820191906000526020600020905b81548152906001019060200180831161212457829003601f168201915b5050505050815260200160028201805461215a90614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461218690614a69565b80156121d35780601f106121a8576101008083540402835291602001916121d3565b820191906000526020600020905b8154815290600101906020018083116121b657829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff1615151515815250508385815181106122605761225f615280565b5b60200260200101819052506001846122789190614ac9565b9350505b8080600101915050611f7a565b50809350505050919050565b6000806122a06135c2565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b606060006122d96131c7565b90508060040180546122ea90614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461231690614a69565b80156123635780601f1061233857610100808354040283529160200191612363565b820191906000526020600020905b81548152906001019060200180831161234657829003601f168201915b505050505091505090565b6000806123796131ef565b90506123868185856133f7565b600191505092915050565b612399613209565b6000600254905060005b818110156125a8578273ffffffffffffffffffffffffffffffffffffffff16600360006001846123d39190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361259b57846040516020016124319190614a23565b60405160208183030381529060405280519060200120600360006001846124589190614ac9565b81526020019081526020016000206002016040516020016124799190614b95565b604051602081830303815290604052805190602001200361259a57836040516020016124a59190614a23565b60405160208183030381529060405280519060200120600360006001846124cc9190614ac9565b81526020019081526020016000206001016040516020016124ed9190614b95565b604051602081830303815290604052805190602001200361259957866003600060018461251a9190614ac9565b815260200190815260200160002060000190816125379190615185565b50856003600060018461254a9190614ac9565b815260200190815260200160002060010190816125679190615185565b50846003600060018461257a9190614ac9565b815260200190815260200160002060020190816125979190615185565b505b5b5b80806001019150506123a3565b50506125b2613260565b5050505050565b6125c16132db565b6125c9613209565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b81526004016126269291906152af565b6020604051808303816000875af1158015612645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126699190614e90565b50612672613260565b5050565b60006126806135ea565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156126ce5750825b9050600060018367ffffffffffffffff16148015612703575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015612711575080155b15612748576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156127985760018560000160086101000a81548160ff0219169083151502179055505b6127c06040518060200160405280600081525060405180602001604052806000815250613612565b6127c8613628565b6127d13361363a565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560018190555085600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156128b65760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516128ad9190615327565b60405180910390a15b505050505050565b6060600060025490506000808267ffffffffffffffff8111156128e4576128e3613f09565b5b60405190808252806020026020018201604052801561291d57816020015b61290a613e93565b8152602001906001900390816129025790505b50905060005b83811015612ce1573373ffffffffffffffffffffffffffffffffffffffff16600360006001846129539190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603612cd45760005b84811015612cd257600360006001846129bc9190614ac9565b81526020019081526020016000206001016040516020016129dd9190614b95565b6040516020818303038152906040528051906020012060036000600184612a049190614ac9565b8152602001908152602001600020600101604051602001612a259190614b95565b6040516020818303038152906040528051906020012003612cc557600060036000600184612a539190614ac9565b81526020019081526020016000209050806040518060a0016040529081600082018054612a7f90614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054612aab90614a69565b8015612af85780601f10612acd57610100808354040283529160200191612af8565b820191906000526020600020905b815481529060010190602001808311612adb57829003601f168201915b50505050508152602001600182018054612b1190614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054612b3d90614a69565b8015612b8a5780601f10612b5f57610100808354040283529160200191612b8a565b820191906000526020600020905b815481529060010190602001808311612b6d57829003601f168201915b50505050508152602001600282018054612ba390614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054612bcf90614a69565b8015612c1c5780601f10612bf157610100808354040283529160200191612c1c565b820191906000526020600020905b815481529060010190602001808311612bff57829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581525050848681518110612ca957612ca8615280565b5b6020026020010181905250600185612cc19190614ac9565b9450505b80806001019150506129a3565b505b8080600101915050612923565b5080935050505090565b60008060025490506000805b82811015612e0a5784604051602001612d109190614a23565b6040516020818303038152906040528051906020012060036000600184612d379190614ac9565b8152602001908152602001600020600101604051602001612d589190614b95565b60405160208183030381529060405280519060200120148015612dae57506001151560036000600184612d8b9190614ac9565b815260200190815260200160002060030160149054906101000a900460ff161515145b15612dfd5760036000600183612dc49190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150612e0a565b8080600101915050612cf7565b508092505050919050565b600080612e206131c7565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b6000604051602001612ebb90614f2b565b60405160208183030381529060405280519060200120600483604051612ee19190614a23565b9081526020016040518091039020600001604051602001612f029190614b95565b6040516020818303038152906040528051906020012003612f265760019050612f2b565b600090505b919050565b600481805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054612f6990614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054612f9590614a69565b8015612fe25780601f10612fb757610100808354040283529160200191612fe2565b820191906000526020600020905b815481529060010190602001808311612fc557829003601f168201915b505050505090806001018054612ff790614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461302390614a69565b80156130705780601f1061304557610100808354040283529160200191613070565b820191906000526020600020905b81548152906001019060200180831161305357829003601f168201915b50505050509080600201805461308590614a69565b80601f01602080910402602001604051908101604052809291908181526020018280546130b190614a69565b80156130fe5780601f106130d3576101008083540402835291602001916130fe565b820191906000526020600020905b8154815290600101906020018083116130e157829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16905085565b6131496132db565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036131bb5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016131b291906140be565b60405180910390fd5b6131c4816134eb565b50565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b613204838383600161364e565b505050565b6000613213613834565b90506002816000015403613253576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b600061326a613834565b90506001816000018190555050565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b6000806000806132bf868661385c565b9250925092506132cf82826138b8565b82935050505092915050565b6132e36131ef565b73ffffffffffffffffffffffffffffffffffffffff16613301612295565b73ffffffffffffffffffffffffffffffffffffffff1614613360576133246131ef565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161335791906140be565b60405180910390fd5b565b600061336e8484612e15565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156133f157818110156133e1578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016133d893929190615342565b60405180910390fd5b6133f08484848403600061364e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036134695760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161346091906140be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036134db5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016134d291906140be565b60405180910390fd5b6134e6838383613a1c565b505050565b60006134f56135c2565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61361a613c5b565b6136248282613c9b565b5050565b613630613c5b565b613638613cd8565b565b613642613c5b565b61364b81613cf9565b50565b60006136586131c7565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036136cc5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016136c391906140be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361373e5760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161373591906140be565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550811561382d578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516138249190614460565b60405180910390a35b5050505050565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b600080600060418451036138a15760008060006020870151925060408701519150606087015160001a905061389388828585613d7f565b9550955095505050506138b1565b60006002855160001b9250925092505b9250925092565b600060038111156138cc576138cb615379565b5b8260038111156138df576138de615379565b5b0315613a1857600160038111156138f9576138f8615379565b5b82600381111561390c5761390b615379565b5b03613943576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561395757613956615379565b5b82600381111561396a57613969615379565b5b036139af578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016139a69190614460565b60405180910390fd5b6003808111156139c2576139c1615379565b5b8260038111156139d5576139d4615379565b5b03613a1757806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401613a0e91906153c1565b60405180910390fd5b5b5050565b6000613a266131c7565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603613a7c5781816002016000828254613a709190614ac9565b92505081905550613b55565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015613b0b578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401613b0293929190615342565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603613ba057818160020160008282540392505081905550613bf0565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051613c4d9190614460565b60405180910390a350505050565b613c63613e73565b613c99576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b613ca3613c5b565b6000613cad6131c7565b905082816003019081613cc09190615185565b5081816004019081613cd29190615185565b50505050565b613ce0613c5b565b6000613cea613834565b90506001816000018190555050565b613d01613c5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613d735760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401613d6a91906140be565b60405180910390fd5b613d7c816134eb565b50565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115613dbf576000600385925092509250613e69565b600060018888888860405160008152602001604052604051613de494939291906153dc565b6020604051602081039080840390855afa158015613e06573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613e5a57600060016000801b93509350935050613e69565b8060008060001b935093509350505b9450945094915050565b6000613e7d6135ea565b60000160089054906101000a900460ff16905090565b6040518060a00160405280606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613f4182613ef8565b810181811067ffffffffffffffff82111715613f6057613f5f613f09565b5b80604052505050565b6000613f73613eda565b9050613f7f8282613f38565b919050565b600067ffffffffffffffff821115613f9f57613f9e613f09565b5b613fa882613ef8565b9050602081019050919050565b82818337600083830152505050565b6000613fd7613fd284613f84565b613f69565b905082815260208101848484011115613ff357613ff2613ef3565b5b613ffe848285613fb5565b509392505050565b600082601f83011261401b5761401a613eee565b5b813561402b848260208601613fc4565b91505092915050565b60006020828403121561404a57614049613ee4565b5b600082013567ffffffffffffffff81111561406857614067613ee9565b5b61407484828501614006565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006140a88261407d565b9050919050565b6140b88161409d565b82525050565b60006020820190506140d360008301846140af565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156141135780820151818401526020810190506140f8565b60008484015250505050565b600061412a826140d9565b61413481856140e4565b93506141448185602086016140f5565b61414d81613ef8565b840191505092915050565b60006020820190508181036000830152614172818461411f565b905092915050565b6141838161409d565b811461418e57600080fd5b50565b6000813590506141a08161417a565b92915050565b6000819050919050565b6141b9816141a6565b81146141c457600080fd5b50565b6000813590506141d6816141b0565b92915050565b600080604083850312156141f3576141f2613ee4565b5b600061420185828601614191565b9250506020614212858286016141c7565b9150509250929050565b60008115159050919050565b6142318161421c565b82525050565b600060208201905061424c6000830184614228565b92915050565b6000806040838503121561426957614268613ee4565b5b600061427785828601614191565b925050602083013567ffffffffffffffff81111561429857614297613ee9565b5b6142a485828601614006565b9150509250929050565b60006142b98261407d565b9050919050565b6142c9816142ae565b81146142d457600080fd5b50565b6000813590506142e6816142c0565b92915050565b600067ffffffffffffffff82111561430757614306613f09565b5b61431082613ef8565b9050602081019050919050565b600061433061432b846142ec565b613f69565b90508281526020810184848401111561434c5761434b613ef3565b5b614357848285613fb5565b509392505050565b600082601f83011261437457614373613eee565b5b813561438484826020860161431d565b91505092915050565b600080600080600060a086880312156143a9576143a8613ee4565b5b60006143b7888289016141c7565b95505060206143c888828901614191565b94505060406143d9888289016142d7565b93505060606143ea88828901614191565b925050608086013567ffffffffffffffff81111561440b5761440a613ee9565b5b6144178882890161435f565b9150509295509295909350565b60006020828403121561443a57614439613ee4565b5b6000614448848285016141c7565b91505092915050565b61445a816141a6565b82525050565b60006020820190506144756000830184614451565b92915050565b60006020828403121561449157614490613ee4565b5b600061449f848285016142d7565b91505092915050565b6000806000606084860312156144c1576144c0613ee4565b5b60006144cf86828701614191565b93505060206144e086828701614191565b92505060406144f1868287016141c7565b9150509250925092565b6000806000806080858703121561451557614514613ee4565b5b600085013567ffffffffffffffff81111561453357614532613ee9565b5b61453f87828801614006565b945050602085013567ffffffffffffffff8111156145605761455f613ee9565b5b61456c87828801614006565b935050604085013567ffffffffffffffff81111561458d5761458c613ee9565b5b61459987828801614006565b92505060606145aa87828801614191565b91505092959194509250565b600060ff82169050919050565b6145cc816145b6565b82525050565b60006020820190506145e760008301846145c3565b92915050565b6145f6816142ae565b82525050565b600060208201905061461160008301846145ed565b92915050565b600060a0820190508181036000830152614631818861411f565b90508181036020830152614645818761411f565b90508181036040830152614659818661411f565b905061466860608301856140af565b6146756080830184614228565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006146c7826140d9565b6146d181856146ab565b93506146e18185602086016140f5565b6146ea81613ef8565b840191505092915050565b6146fe8161409d565b82525050565b61470d8161421c565b82525050565b600060a083016000830151848203600086015261473082826146bc565b9150506020830151848203602086015261474a82826146bc565b9150506040830151848203604086015261476482826146bc565b915050606083015161477960608601826146f5565b50608083015161478c6080860182614704565b508091505092915050565b60006147a38383614713565b905092915050565b6000602082019050919050565b60006147c38261467f565b6147cd818561468a565b9350836020820285016147df8561469b565b8060005b8581101561481b57848403895281516147fc8582614797565b9450614807836147ab565b925060208a019950506001810190506147e3565b50829750879550505050505092915050565b6000602082019050818103600083015261484781846147b8565b905092915050565b60006020828403121561486557614864613ee4565b5b600061487384828501614191565b91505092915050565b600080600080600060a0868803121561489857614897613ee4565b5b600086013567ffffffffffffffff8111156148b6576148b5613ee9565b5b6148c288828901614006565b955050602086013567ffffffffffffffff8111156148e3576148e2613ee9565b5b6148ef88828901614006565b945050604086013567ffffffffffffffff8111156149105761490f613ee9565b5b61491c88828901614006565b935050606086013567ffffffffffffffff81111561493d5761493c613ee9565b5b61494988828901614006565b925050608061495a88828901614191565b9150509295509295909350565b6000806040838503121561497e5761497d613ee4565b5b600061498c858286016141c7565b925050602061499d858286016142d7565b9150509250929050565b600080604083850312156149be576149bd613ee4565b5b60006149cc85828601614191565b92505060206149dd85828601614191565b9150509250929050565b600081905092915050565b60006149fd826140d9565b614a0781856149e7565b9350614a178185602086016140f5565b80840191505092915050565b6000614a2f82846149f2565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680614a8157607f821691505b602082108103614a9457614a93614a3a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614ad4826141a6565b9150614adf836141a6565b9250828201905080821115614af757614af6614a9a565b5b92915050565b60008190508160005260206000209050919050565b60008154614b1f81614a69565b614b2981866149e7565b94506001821660008114614b445760018114614b5957614b8c565b60ff1983168652811515820286019350614b8c565b614b6285614afd565b60005b83811015614b8457815481890152600182019150602081019050614b65565b838801955050505b50505092915050565b6000614ba18284614b12565b915081905092915050565b60008160601b9050919050565b6000614bc482614bac565b9050919050565b6000614bd682614bb9565b9050919050565b614bee614be98261409d565b614bcb565b82525050565b6000614bff82614bb9565b9050919050565b614c17614c12826142ae565b614bf4565b82525050565b6000819050919050565b614c38614c33826141a6565b614c1d565b82525050565b6000614c4a8287614bdd565b601482019150614c5a8286614bdd565b601482019150614c6a8285614c06565b601482019150614c7a8284614c27565b60208201915081905095945050505050565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b6000614cc26011836140e4565b9150614ccd82614c8c565b602082019050919050565b60006020820190508181036000830152614cf181614cb5565b9050919050565b6000614d03826141a6565b9150614d0e836141a6565b9250828202614d1c816141a6565b91508282048414831517614d3357614d32614a9a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000614d74826141a6565b9150614d7f836141a6565b925082614d8f57614d8e614d3a565b5b828204905092915050565b6000614da5826141a6565b9150614db0836141a6565b9250828203905081811115614dc857614dc7614a9a565b5b92915050565b6000819050919050565b6000614df3614dee614de98461407d565b614dce565b61407d565b9050919050565b6000614e0582614dd8565b9050919050565b6000614e1782614dfa565b9050919050565b614e2781614e0c565b82525050565b6000606082019050614e4260008301866140af565b614e4f6020830185614e1e565b614e5c6040830184614451565b949350505050565b614e6d8161421c565b8114614e7857600080fd5b50565b600081519050614e8a81614e64565b92915050565b600060208284031215614ea657614ea5613ee4565b5b6000614eb484828501614e7b565b91505092915050565b6000614ec8826141a6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614efa57614ef9614a9a565b5b600182019050919050565b50565b6000614f156000836149e7565b9150614f2082614f05565b600082019050919050565b6000614f3682614f08565b9150819050919050565b7f416e20554349206964206173736f63696174656420776974682074686973206e60008201527f616d6520616c7265616479206578697374732e20506c656173652063686f6f7360208201527f65206120646966666572656e74206e616d652021210000000000000000000000604082015250565b6000614fc26055836140e4565b9150614fcd82614f40565b606082019050919050565b60006020820190508181036000830152614ff181614fb5565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026150457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82615008565b61504f8683615008565b95508019841693508086168417925050509392505050565b600061508261507d615078846141a6565b614dce565b6141a6565b9050919050565b6000819050919050565b61509c83615067565b6150b06150a882615089565b848454615015565b825550505050565b600090565b6150c56150b8565b6150d0818484615093565b505050565b5b818110156150f4576150e96000826150bd565b6001810190506150d6565b5050565b601f8211156151395761510a81614afd565b61511384614ff8565b81016020851015615122578190505b61513661512e85614ff8565b8301826150d5565b50505b505050565b600082821c905092915050565b600061515c6000198460080261513e565b1980831691505092915050565b6000615175838361514b565b9150826002028217905092915050565b61518e826140d9565b67ffffffffffffffff8111156151a7576151a6613f09565b5b6151b18254614a69565b6151bc8282856150f8565b600060209050601f8311600181146151ef57600084156151dd578287015190505b6151e78582615169565b86555061524f565b601f1984166151fd86614afd565b60005b8281101561522557848901518255600182019150602085019450602081019050615200565b86831015615242578489015161523e601f89168261514b565b8355505b6001600288020188555050505b505050505050565b600060408201905061526c60008301856140af565b6152796020830184614228565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190506152c46000830185614e1e565b6152d16020830184614451565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061531161530c615307846152d8565b614dce565b6152e2565b9050919050565b615321816152f6565b82525050565b600060208201905061533c6000830184615318565b92915050565b600060608201905061535760008301866140af565b6153646020830185614451565b6153716040830184614451565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000819050919050565b6153bb816153a8565b82525050565b60006020820190506153d660008301846153b2565b92915050565b60006080820190506153f160008301876153b2565b6153fe60208301866145c3565b61540b60408301856153b2565b61541860608301846153b2565b9594505050505056fea2646970667358221220bf822f1dd77786e7fadab5d67b5a48655eba16d7d09a11bbec7312494db22dc064736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5457 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5E385B92 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xB9598C5E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDB461E1A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDB461E1A EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7CA JUMPI DUP1 PUSH4 0xE13D23E5 EQ PUSH2 0x807 JUMPI DUP1 PUSH4 0xF24D3AF2 EQ PUSH2 0x844 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x885 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xB9598C5E EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xC34D9D7C EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0xD263BE48 EQ PUSH2 0x762 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0x8CAE45D2 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6B7 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x5E385B92 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0x6CDAA421 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0x6E997665 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5D0 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1888D712 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x34A7F193 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x451E9CF0 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x52D95491 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x5A12D0F8 EQ PUSH2 0x514 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1888D712 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x26232A2E EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x2A41FFD9 EQ PUSH2 0x429 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xF1D5EC7 GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xF1D5EC7 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x15CCB680 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x37A JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x4874354 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xC60B372 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x4158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x41DC JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x4252 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x438D JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x4424 JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x447B JUMP JUMPDEST PUSH2 0xF76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x44A8 JUMP JUMPDEST PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x450 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x44FB JUMP JUMPDEST PUSH2 0x109D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x45D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x492 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BD PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x45FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x4424 JUMP JUMPDEST PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x529 PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x482D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x554 PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x45FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x591 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x447B JUMP JUMPDEST PUSH2 0x1A3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x1A85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x482D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x622 PUSH2 0x1F01 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x1F15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x482D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x676 PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A1 PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0x4158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x41DC JUMP JUMPDEST PUSH2 0x236E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x487C JUMP JUMPDEST PUSH2 0x2391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x737 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x4967 JUMP JUMPDEST PUSH2 0x25B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x760 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x2676 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x777 PUSH2 0x28BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x482D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AF SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x49A7 JUMP JUMPDEST PUSH2 0x2E15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x2EAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83B SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x3141 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x905 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x916 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x942 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x964 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x972 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9A5 PUSH2 0x31EF JUMP JUMPDEST SWAP1 POP PUSH2 0x9B2 DUP2 DUP6 DUP6 PUSH2 0x31F7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C5 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA94 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xA0F SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0xA87 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xA5E SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9CF JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBD7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB89 JUMPI POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB71 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0xBCA JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA98 JUMP JUMPDEST POP POP PUSH2 0xBE1 PUSH2 0x3260 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEF PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP7 DUP7 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC08 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xC2B DUP3 PUSH2 0x3279 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC39 DUP3 DUP7 PUSH2 0x32AF JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA0 SWAP1 PUSH2 0x4CD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x1 SLOAD DUP12 PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x4CF8 JUMP JUMPDEST PUSH2 0xCC6 SWAP2 SWAP1 PUSH2 0x4D69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP12 PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x4D9A JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP10 DUP12 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD15 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E2D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x4E90 JUMP JUMPDEST POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP10 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E2D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF9 SWAP2 SWAP1 PUSH2 0x4E90 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 POP POP POP POP POP POP PUSH2 0xE0B PUSH2 0x3260 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE1C PUSH2 0x32DB JUMP JUMPDEST PUSH2 0xE24 PUSH2 0x3209 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xE33 PUSH2 0x3260 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF53 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xE77 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF38 JUMPI POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0xF46 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0xF53 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE47 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF69 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xF7E PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x1 SLOAD CALLVALUE PUSH2 0xF91 SWAP2 SWAP1 PUSH2 0x4CF8 JUMP JUMPDEST PUSH2 0xF9B SWAP2 SWAP1 PUSH2 0x4D69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 CALLVALUE PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x4D9A JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x105A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH2 0x1065 PUSH2 0x3260 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1073 PUSH2 0x31EF JUMP JUMPDEST SWAP1 POP PUSH2 0x1080 DUP6 DUP3 DUP6 PUSH2 0x3362 JUMP JUMPDEST PUSH2 0x108B DUP6 DUP6 DUP6 PUSH2 0x33F7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10A5 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x10B8 SWAP1 PUSH2 0x4EBD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x118C JUMPI DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10E0 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1107 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x117F JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1156 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x10C7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x119C SWAP1 PUSH2 0x4F2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x11C2 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1230 SWAP1 PUSH2 0x4FD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x12D8 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x13AB SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x13C1 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x13D7 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 PUSH1 0x40 MLOAD PUSH2 0x1450 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1466 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH2 0x147C SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x2E3249F822BD56E4E9AE7D39402DEF6DF4618C14F212FBE4C35E0C94EDDEF9FE DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x14B6 SWAP3 SWAP2 SWAP1 PUSH2 0x5257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x14C7 PUSH2 0x3260 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1528 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1554 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1576 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1584 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x15B6 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15E2 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x162F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1604 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x162F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1612 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1644 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1670 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1692 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x170A PUSH2 0x32DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x172E JUMPI PUSH2 0x172D PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1767 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1754 PUSH2 0x3E93 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x174C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1784 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x17B9 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17E5 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1832 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1807 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1832 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1815 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x184B SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1877 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1899 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x18DD SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1909 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1956 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x192B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1956 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1939 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP5 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x19E3 JUMPI PUSH2 0x19E2 PUSH2 0x5280 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP6 PUSH2 0x19FB SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP5 POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x176D JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1A42 PUSH2 0x32DB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B2D JUMPI DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AAD SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1AD4 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AF5 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x1B20 JUMPI PUSH1 0x1 DUP4 PUSH2 0x1B1D SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B4A JUMPI PUSH2 0x1B49 PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B83 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1B70 PUSH2 0x3E93 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1B68 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1E9D JUMPI DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BA2 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1BC9 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BEA SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x1E90 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1C14 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x1C49 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C75 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CC2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C97 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CC2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CA5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1CDB SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D07 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D54 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D29 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D54 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D37 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1D6D SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D99 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DE6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DBB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DE6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DC9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP5 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1E73 JUMPI PUSH2 0x1E72 PUSH2 0x5280 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP6 PUSH2 0x1E8B SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1B89 JUMP JUMPDEST POP DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1EB5 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F09 PUSH2 0x32DB JUMP JUMPDEST PUSH2 0x1F13 PUSH1 0x0 PUSH2 0x34EB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3B JUMPI PUSH2 0x1F3A PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F74 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1F61 PUSH2 0x3E93 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1F59 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2289 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1FAA SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x227C JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x200A SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2036 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2062 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2084 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2092 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x20C8 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20F4 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2141 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2116 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2141 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2124 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x215A SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2186 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x5280 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP5 PUSH2 0x2278 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1F7A JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22A0 PUSH2 0x35C2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x22D9 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x22EA SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2316 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2363 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2338 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2363 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2346 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2379 PUSH2 0x31EF JUMP JUMPDEST SWAP1 POP PUSH2 0x2386 DUP2 DUP6 DUP6 PUSH2 0x33F7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2399 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25A8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x23D3 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x259B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2431 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2458 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2479 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x259A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24A5 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x24CC SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24ED SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2599 JUMPI DUP7 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x251A SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2537 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP DUP6 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x254A SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2567 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP DUP5 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x257A SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2597 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x23A3 JUMP JUMPDEST POP POP PUSH2 0x25B2 PUSH2 0x3260 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25C1 PUSH2 0x32DB JUMP JUMPDEST PUSH2 0x25C9 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2626 SWAP3 SWAP2 SWAP1 PUSH2 0x52AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2645 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2669 SWAP2 SWAP1 PUSH2 0x4E90 JUMP JUMPDEST POP PUSH2 0x2672 PUSH2 0x3260 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2680 PUSH2 0x35EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x26CE JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2703 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x2711 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x2748 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2798 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x27C0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3612 JUMP JUMPDEST PUSH2 0x27C8 PUSH2 0x3628 JUMP JUMPDEST PUSH2 0x27D1 CALLER PUSH2 0x363A JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x28B6 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x28AD SWAP2 SWAP1 PUSH2 0x5327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28E4 JUMPI PUSH2 0x28E3 PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x291D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x290A PUSH2 0x3E93 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2902 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CE1 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2953 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2CD4 JUMPI PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2CD2 JUMPI PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x29BC SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29DD SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2A04 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A25 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2CC5 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2A53 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2A7F SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AAB SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AF8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2ACD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AF8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ADB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2B11 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B3D SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B8A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B5F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B8A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B6D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x2BA3 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BCF SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C1C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BF1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C1C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BFF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP5 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2CA9 JUMPI PUSH2 0x2CA8 PUSH2 0x5280 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP6 PUSH2 0x2CC1 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP5 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x29A3 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2923 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E0A JUMPI DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D10 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2D37 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D58 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ DUP1 ISZERO PUSH2 0x2DAE JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2D8B SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST ISZERO PUSH2 0x2DFD JUMPI PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x2DC4 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x2E0A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2CF7 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E20 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2EBB SWAP1 PUSH2 0x4F2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2EE1 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F02 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2F26 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2F2B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x2F69 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F95 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FB7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FC5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2FF7 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3023 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3070 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3045 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3070 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3053 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3085 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30B1 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x30D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0x3149 PUSH2 0x32DB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31BB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31B2 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31C4 DUP2 PUSH2 0x34EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3204 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x364E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3213 PUSH2 0x3834 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x3253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x326A PUSH2 0x3834 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x32BF DUP7 DUP7 PUSH2 0x385C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x32CF DUP3 DUP3 PUSH2 0x38B8 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32E3 PUSH2 0x31EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3301 PUSH2 0x2295 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3360 JUMPI PUSH2 0x3324 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3357 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336E DUP5 DUP5 PUSH2 0x2E15 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x33F1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x33E1 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x364E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3469 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3460 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34DB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34D2 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34E6 DUP4 DUP4 DUP4 PUSH2 0x3A1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34F5 PUSH2 0x35C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x361A PUSH2 0x3C5B JUMP JUMPDEST PUSH2 0x3624 DUP3 DUP3 PUSH2 0x3C9B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3630 PUSH2 0x3C5B JUMP JUMPDEST PUSH2 0x3638 PUSH2 0x3CD8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3642 PUSH2 0x3C5B JUMP JUMPDEST PUSH2 0x364B DUP2 PUSH2 0x3CF9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3658 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36CC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36C3 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x373E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3735 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x382D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3824 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x38A1 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x3893 DUP9 DUP3 DUP6 DUP6 PUSH2 0x3D7F JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x38B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x38CC JUMPI PUSH2 0x38CB PUSH2 0x5379 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x38DF JUMPI PUSH2 0x38DE PUSH2 0x5379 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x3A18 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x38F9 JUMPI PUSH2 0x38F8 PUSH2 0x5379 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x390C JUMPI PUSH2 0x390B PUSH2 0x5379 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3943 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3957 JUMPI PUSH2 0x3956 PUSH2 0x5379 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x396A JUMPI PUSH2 0x3969 PUSH2 0x5379 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x39AF JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39A6 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x39C2 JUMPI PUSH2 0x39C1 PUSH2 0x5379 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x39D5 JUMPI PUSH2 0x39D4 PUSH2 0x5379 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3A17 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A0E SWAP2 SWAP1 PUSH2 0x53C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A26 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A7C JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A70 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3B55 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x3B0B JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3BA0 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3BF0 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3C4D SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x3C63 PUSH2 0x3E73 JUMP JUMPDEST PUSH2 0x3C99 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x3CA3 PUSH2 0x3C5B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CAD PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x3CC0 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x3CD2 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3CE0 PUSH2 0x3C5B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CEA PUSH2 0x3834 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3D01 PUSH2 0x3C5B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D73 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6A SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D7C DUP2 PUSH2 0x34EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x3DBF JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3E69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3DE4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x53DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E5A JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x3E69 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7D PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3F41 DUP3 PUSH2 0x3EF8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3F60 JUMPI PUSH2 0x3F5F PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F73 PUSH2 0x3EDA JUMP JUMPDEST SWAP1 POP PUSH2 0x3F7F DUP3 DUP3 PUSH2 0x3F38 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3F9F JUMPI PUSH2 0x3F9E PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH2 0x3FA8 DUP3 PUSH2 0x3EF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD7 PUSH2 0x3FD2 DUP5 PUSH2 0x3F84 JUMP JUMPDEST PUSH2 0x3F69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3FF3 JUMPI PUSH2 0x3FF2 PUSH2 0x3EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x3FFE DUP5 DUP3 DUP6 PUSH2 0x3FB5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x401B JUMPI PUSH2 0x401A PUSH2 0x3EEE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x402B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3FC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x404A JUMPI PUSH2 0x4049 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4068 JUMPI PUSH2 0x4067 PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x4074 DUP5 DUP3 DUP6 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40A8 DUP3 PUSH2 0x407D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40B8 DUP2 PUSH2 0x409D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4113 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x40F8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412A DUP3 PUSH2 0x40D9 JUMP JUMPDEST PUSH2 0x4134 DUP2 DUP6 PUSH2 0x40E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x4144 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40F5 JUMP JUMPDEST PUSH2 0x414D DUP2 PUSH2 0x3EF8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4172 DUP2 DUP5 PUSH2 0x411F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4183 DUP2 PUSH2 0x409D JUMP JUMPDEST DUP2 EQ PUSH2 0x418E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41A0 DUP2 PUSH2 0x417A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41B9 DUP2 PUSH2 0x41A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x41C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41D6 DUP2 PUSH2 0x41B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41F3 JUMPI PUSH2 0x41F2 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4201 DUP6 DUP3 DUP7 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4212 DUP6 DUP3 DUP7 ADD PUSH2 0x41C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4231 DUP2 PUSH2 0x421C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x424C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4269 JUMPI PUSH2 0x4268 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4277 DUP6 DUP3 DUP7 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4298 JUMPI PUSH2 0x4297 PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x42A4 DUP6 DUP3 DUP7 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B9 DUP3 PUSH2 0x407D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42C9 DUP2 PUSH2 0x42AE JUMP JUMPDEST DUP2 EQ PUSH2 0x42D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42E6 DUP2 PUSH2 0x42C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4307 JUMPI PUSH2 0x4306 PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH2 0x4310 DUP3 PUSH2 0x3EF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4330 PUSH2 0x432B DUP5 PUSH2 0x42EC JUMP JUMPDEST PUSH2 0x3F69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x434C JUMPI PUSH2 0x434B PUSH2 0x3EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x4357 DUP5 DUP3 DUP6 PUSH2 0x3FB5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4374 JUMPI PUSH2 0x4373 PUSH2 0x3EEE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4384 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x431D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x43A9 JUMPI PUSH2 0x43A8 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43B7 DUP9 DUP3 DUP10 ADD PUSH2 0x41C7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43C8 DUP9 DUP3 DUP10 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x43D9 DUP9 DUP3 DUP10 ADD PUSH2 0x42D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x43EA DUP9 DUP3 DUP10 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x440B JUMPI PUSH2 0x440A PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x4417 DUP9 DUP3 DUP10 ADD PUSH2 0x435F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x443A JUMPI PUSH2 0x4439 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4448 DUP5 DUP3 DUP6 ADD PUSH2 0x41C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x445A DUP2 PUSH2 0x41A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4475 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4491 JUMPI PUSH2 0x4490 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x449F DUP5 DUP3 DUP6 ADD PUSH2 0x42D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x44C1 JUMPI PUSH2 0x44C0 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44CF DUP7 DUP3 DUP8 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x44E0 DUP7 DUP3 DUP8 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x44F1 DUP7 DUP3 DUP8 ADD PUSH2 0x41C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4515 JUMPI PUSH2 0x4514 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4533 JUMPI PUSH2 0x4532 PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x453F DUP8 DUP3 DUP9 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4560 JUMPI PUSH2 0x455F PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x456C DUP8 DUP3 DUP9 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x458D JUMPI PUSH2 0x458C PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x4599 DUP8 DUP3 DUP9 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x45AA DUP8 DUP3 DUP9 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45CC DUP2 PUSH2 0x45B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45F6 DUP2 PUSH2 0x42AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4611 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4631 DUP2 DUP9 PUSH2 0x411F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4645 DUP2 DUP8 PUSH2 0x411F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4659 DUP2 DUP7 PUSH2 0x411F JUMP JUMPDEST SWAP1 POP PUSH2 0x4668 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x4675 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4228 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C7 DUP3 PUSH2 0x40D9 JUMP JUMPDEST PUSH2 0x46D1 DUP2 DUP6 PUSH2 0x46AB JUMP JUMPDEST SWAP4 POP PUSH2 0x46E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40F5 JUMP JUMPDEST PUSH2 0x46EA DUP2 PUSH2 0x3EF8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46FE DUP2 PUSH2 0x409D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x470D DUP2 PUSH2 0x421C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x4730 DUP3 DUP3 PUSH2 0x46BC JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x474A DUP3 DUP3 PUSH2 0x46BC JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x4764 DUP3 DUP3 PUSH2 0x46BC JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4779 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x46F5 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x478C PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x4704 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A3 DUP4 DUP4 PUSH2 0x4713 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C3 DUP3 PUSH2 0x467F JUMP JUMPDEST PUSH2 0x47CD DUP2 DUP6 PUSH2 0x468A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x47DF DUP6 PUSH2 0x469B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x481B JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x47FC DUP6 DUP3 PUSH2 0x4797 JUMP JUMPDEST SWAP5 POP PUSH2 0x4807 DUP4 PUSH2 0x47AB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x47E3 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4847 DUP2 DUP5 PUSH2 0x47B8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4865 JUMPI PUSH2 0x4864 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4873 DUP5 DUP3 DUP6 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4898 JUMPI PUSH2 0x4897 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48B6 JUMPI PUSH2 0x48B5 PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x48C2 DUP9 DUP3 DUP10 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48E3 JUMPI PUSH2 0x48E2 PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x48EF DUP9 DUP3 DUP10 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4910 JUMPI PUSH2 0x490F PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x491C DUP9 DUP3 DUP10 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x493D JUMPI PUSH2 0x493C PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x4949 DUP9 DUP3 DUP10 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x495A DUP9 DUP3 DUP10 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x497E JUMPI PUSH2 0x497D PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x498C DUP6 DUP3 DUP7 ADD PUSH2 0x41C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x499D DUP6 DUP3 DUP7 ADD PUSH2 0x42D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x49BE JUMPI PUSH2 0x49BD PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49CC DUP6 DUP3 DUP7 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x49DD DUP6 DUP3 DUP7 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49FD DUP3 PUSH2 0x40D9 JUMP JUMPDEST PUSH2 0x4A07 DUP2 DUP6 PUSH2 0x49E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x4A17 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40F5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A2F DUP3 DUP5 PUSH2 0x49F2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4A81 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4A94 JUMPI PUSH2 0x4A93 PUSH2 0x4A3A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4AD4 DUP3 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ADF DUP4 PUSH2 0x41A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4AF7 JUMPI PUSH2 0x4AF6 PUSH2 0x4A9A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4B1F DUP2 PUSH2 0x4A69 JUMP JUMPDEST PUSH2 0x4B29 DUP2 DUP7 PUSH2 0x49E7 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4B44 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4B59 JUMPI PUSH2 0x4B8C JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x4B8C JUMP JUMPDEST PUSH2 0x4B62 DUP6 PUSH2 0x4AFD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B84 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4B65 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA1 DUP3 DUP5 PUSH2 0x4B12 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC4 DUP3 PUSH2 0x4BAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD6 DUP3 PUSH2 0x4BB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BEE PUSH2 0x4BE9 DUP3 PUSH2 0x409D JUMP JUMPDEST PUSH2 0x4BCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BFF DUP3 PUSH2 0x4BB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C17 PUSH2 0x4C12 DUP3 PUSH2 0x42AE JUMP JUMPDEST PUSH2 0x4BF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C38 PUSH2 0x4C33 DUP3 PUSH2 0x41A6 JUMP JUMPDEST PUSH2 0x4C1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4A DUP3 DUP8 PUSH2 0x4BDD JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4C5A DUP3 DUP7 PUSH2 0x4BDD JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4C6A DUP3 DUP6 PUSH2 0x4C06 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4C7A DUP3 DUP5 PUSH2 0x4C27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CC2 PUSH1 0x11 DUP4 PUSH2 0x40E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CCD DUP3 PUSH2 0x4C8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CF1 DUP2 PUSH2 0x4CB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D03 DUP3 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D0E DUP4 PUSH2 0x41A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4D1C DUP2 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4D33 JUMPI PUSH2 0x4D32 PUSH2 0x4A9A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D74 DUP3 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D7F DUP4 PUSH2 0x41A6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4D8F JUMPI PUSH2 0x4D8E PUSH2 0x4D3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA5 DUP3 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DB0 DUP4 PUSH2 0x41A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4DC8 JUMPI PUSH2 0x4DC7 PUSH2 0x4A9A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF3 PUSH2 0x4DEE PUSH2 0x4DE9 DUP5 PUSH2 0x407D JUMP JUMPDEST PUSH2 0x4DCE JUMP JUMPDEST PUSH2 0x407D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E05 DUP3 PUSH2 0x4DD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E17 DUP3 PUSH2 0x4DFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E27 DUP2 PUSH2 0x4E0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4E42 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x4E4F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4E1E JUMP JUMPDEST PUSH2 0x4E5C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4451 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4E6D DUP2 PUSH2 0x421C JUMP JUMPDEST DUP2 EQ PUSH2 0x4E78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E8A DUP2 PUSH2 0x4E64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EA6 JUMPI PUSH2 0x4EA5 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4EB4 DUP5 DUP3 DUP6 ADD PUSH2 0x4E7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC8 DUP3 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4EFA JUMPI PUSH2 0x4EF9 PUSH2 0x4A9A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F15 PUSH1 0x0 DUP4 PUSH2 0x49E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F20 DUP3 PUSH2 0x4F05 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F36 DUP3 PUSH2 0x4F08 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416E20554349206964206173736F63696174656420776974682074686973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616D6520616C7265616479206578697374732E20506C656173652063686F6F73 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x65206120646966666572656E74206E616D652021210000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC2 PUSH1 0x55 DUP4 PUSH2 0x40E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FCD DUP3 PUSH2 0x4F40 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FF1 DUP2 PUSH2 0x4FB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5045 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5008 JUMP JUMPDEST PUSH2 0x504F DUP7 DUP4 PUSH2 0x5008 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5082 PUSH2 0x507D PUSH2 0x5078 DUP5 PUSH2 0x41A6 JUMP JUMPDEST PUSH2 0x4DCE JUMP JUMPDEST PUSH2 0x41A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x509C DUP4 PUSH2 0x5067 JUMP JUMPDEST PUSH2 0x50B0 PUSH2 0x50A8 DUP3 PUSH2 0x5089 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5015 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x50C5 PUSH2 0x50B8 JUMP JUMPDEST PUSH2 0x50D0 DUP2 DUP5 DUP5 PUSH2 0x5093 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x50F4 JUMPI PUSH2 0x50E9 PUSH1 0x0 DUP3 PUSH2 0x50BD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x50D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5139 JUMPI PUSH2 0x510A DUP2 PUSH2 0x4AFD JUMP JUMPDEST PUSH2 0x5113 DUP5 PUSH2 0x4FF8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5122 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5136 PUSH2 0x512E DUP6 PUSH2 0x4FF8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x50D5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x513E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5175 DUP4 DUP4 PUSH2 0x514B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x518E DUP3 PUSH2 0x40D9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51A7 JUMPI PUSH2 0x51A6 PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH2 0x51B1 DUP3 SLOAD PUSH2 0x4A69 JUMP JUMPDEST PUSH2 0x51BC DUP3 DUP3 DUP6 PUSH2 0x50F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x51EF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x51DD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x51E7 DUP6 DUP3 PUSH2 0x5169 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x524F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x51FD DUP7 PUSH2 0x4AFD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5225 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5200 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5242 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x523E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x514B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x526C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x5279 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4228 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x52C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4E1E JUMP JUMPDEST PUSH2 0x52D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4451 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5311 PUSH2 0x530C PUSH2 0x5307 DUP5 PUSH2 0x52D8 JUMP JUMPDEST PUSH2 0x4DCE JUMP JUMPDEST PUSH2 0x52E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5321 DUP2 PUSH2 0x52F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x533C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5318 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5357 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x5364 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4451 JUMP JUMPDEST PUSH2 0x5371 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4451 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53BB DUP2 PUSH2 0x53A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x53D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x53B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x53F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x53B2 JUMP JUMPDEST PUSH2 0x53FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x45C3 JUMP JUMPDEST PUSH2 0x540B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x53B2 JUMP JUMPDEST PUSH2 0x5418 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x53B2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF DUP3 0x2F SAR 0xD7 PUSH24 0x86E7FADAB5D67B5A48655EBA16D7D09A11BBEC7312494DB2 0x2D 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"568:11495:15:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__ERC20_init_516":{"entryPoint":13842,"id":516,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_544":{"entryPoint":15515,"id":544,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":13882,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":15609,"id":81,"parameterSlots":1,"returnSlots":0},"@__ReentrancyGuard_init_1151":{"entryPoint":13864,"id":1151,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_1169":{"entryPoint":15576,"id":1169,"parameterSlots":0,"returnSlots":0},"@_approve_1016":{"entryPoint":13902,"id":1016,"parameterSlots":4,"returnSlots":0},"@_approve_948":{"entryPoint":12791,"id":948,"parameterSlots":3,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":15451,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":13019,"id":122,"parameterSlots":0,"returnSlots":0},"@_getERC20Storage_500":{"entryPoint":12743,"id":500,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_447":{"entryPoint":13802,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":13762,"id":25,"parameterSlots":0,"returnSlots":1},"@_getReentrancyGuardStorage_1139":{"entryPoint":14388,"id":1139,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":15987,"id":438,"parameterSlots":0,"returnSlots":1},"@_itemIds_6693":{"entryPoint":5334,"id":6693,"parameterSlots":0,"returnSlots":0},"@_msgSender_1093":{"entryPoint":12783,"id":1093,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1221":{"entryPoint":12896,"id":1221,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1205":{"entryPoint":12809,"id":1205,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_1064":{"entryPoint":13154,"id":1064,"parameterSlots":3,"returnSlots":0},"@_throwError_3080":{"entryPoint":14520,"id":3080,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":13547,"id":193,"parameterSlots":1,"returnSlots":0},"@_transfer_772":{"entryPoint":13303,"id":772,"parameterSlots":3,"returnSlots":0},"@_update_864":{"entryPoint":14876,"id":864,"parameterSlots":3,"returnSlots":0},"@allowance_669":{"entryPoint":11797,"id":669,"parameterSlots":2,"returnSlots":1},"@approve_693":{"entryPoint":2458,"id":693,"parameterSlots":2,"returnSlots":1},"@balanceOf_621":{"entryPoint":7850,"id":621,"parameterSlots":1,"returnSlots":1},"@checkUniqueUCI_7092":{"entryPoint":11946,"id":7092,"parameterSlots":1,"returnSlots":1},"@decimals_585":{"entryPoint":5325,"id":585,"parameterSlots":0,"returnSlots":1},"@editProfile_7425":{"entryPoint":9105,"id":7425,"parameterSlots":5,"returnSlots":0},"@enterDetails_7060":{"entryPoint":4253,"id":7060,"parameterSlots":4,"returnSlots":0},"@fetchAllWalletAddress_7556":{"entryPoint":6789,"id":7556,"parameterSlots":1,"returnSlots":1},"@fetchPrimaryWalletAddress_7697":{"entryPoint":11499,"id":7697,"parameterSlots":1,"returnSlots":1},"@fetchWalletAddressUCI_7710":{"entryPoint":2222,"id":7710,"parameterSlots":1,"returnSlots":1},"@getGLL_7858":{"entryPoint":9657,"id":7858,"parameterSlots":2,"returnSlots":0},"@getMarketOwner_6777":{"entryPoint":5340,"id":6777,"parameterSlots":0,"returnSlots":1},"@getPhoneToDetails_6943":{"entryPoint":5888,"id":6943,"parameterSlots":0,"returnSlots":1},"@getWalletDetails_6876":{"entryPoint":7957,"id":6876,"parameterSlots":1,"returnSlots":1},"@initialize_6768":{"entryPoint":9846,"id":6768,"parameterSlots":1,"returnSlots":0},"@makePrimary_7201":{"entryPoint":2493,"id":7201,"parameterSlots":2,"returnSlots":0},"@marketowner_6689":{"entryPoint":6678,"id":6689,"parameterSlots":0,"returnSlots":0},"@myWallets_7312":{"entryPoint":10430,"id":7312,"parameterSlots":0,"returnSlots":1},"@name_560":{"entryPoint":2297,"id":560,"parameterSlots":0,"returnSlots":1},"@owner_105":{"entryPoint":8853,"id":105,"parameterSlots":0,"returnSlots":1},"@phoneToDetailsUPI_6714":{"entryPoint":12080,"id":6714,"parameterSlots":0,"returnSlots":0},"@phoneToDetails_6709":{"entryPoint":5381,"id":6709,"parameterSlots":0,"returnSlots":0},"@platformFee_6691":{"entryPoint":4247,"id":6691,"parameterSlots":0,"returnSlots":0},"@recover_2837":{"entryPoint":12975,"id":2837,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":7937,"id":136,"parameterSlots":0,"returnSlots":0},"@sendMoney_7797":{"entryPoint":3045,"id":7797,"parameterSlots":5,"returnSlots":1},"@sendNative_7838":{"entryPoint":3958,"id":7838,"parameterSlots":1,"returnSlots":0},"@setMarketOwner_6789":{"entryPoint":6714,"id":6789,"parameterSlots":1,"returnSlots":0},"@setPlatformFee_6803":{"entryPoint":3604,"id":6803,"parameterSlots":1,"returnSlots":0},"@symbol_576":{"entryPoint":8909,"id":576,"parameterSlots":0,"returnSlots":1},"@toEthSignedMessageHash_3096":{"entryPoint":12921,"id":3096,"parameterSlots":1,"returnSlots":1},"@totalSupply_601":{"entryPoint":3934,"id":601,"parameterSlots":0,"returnSlots":1},"@transferFrom_725":{"entryPoint":4200,"id":725,"parameterSlots":3,"returnSlots":1},"@transferOwnership_164":{"entryPoint":12609,"id":164,"parameterSlots":1,"returnSlots":0},"@transfer_645":{"entryPoint":9070,"id":645,"parameterSlots":2,"returnSlots":1},"@tryRecover_2807":{"entryPoint":14428,"id":2807,"parameterSlots":2,"returnSlots":3},"@tryRecover_2995":{"entryPoint":15743,"id":2995,"parameterSlots":4,"returnSlots":3},"@uniqueEntry_7623":{"entryPoint":3638,"id":7623,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":17181,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":16324,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":16785,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":17111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":20091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":17247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":16390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":16839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":18511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":17531,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":18855,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":17576,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":16978,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":16860,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":20112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":16436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address":{"entryPoint":17659,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address":{"entryPoint":18556,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":17444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_payable":{"entryPoint":18791,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_address_payablet_addresst_bytes_memory_ptr":{"entryPoint":17293,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_struct$_Details_$6704_memory_ptr_to_t_struct$_Details_$6704_memory_ptr":{"entryPoint":18327,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_fromStack":{"entryPoint":19998,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":17901,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_payable_to_t_address_payable_nonPadded_inplace_fromStack":{"entryPoint":19462,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address":{"entryPoint":18165,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":16559,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":19421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":18360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":18180,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":16936,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":21426,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":21272,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":18108,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":16671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack":{"entryPoint":19637,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070_to_t_string_memory_ptr_fromStack":{"entryPoint":20405,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20232,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Details_$6704_memory_ptr_to_t_struct$_Details_$6704_memory_ptr":{"entryPoint":18195,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":17489,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":19495,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":17859,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_address_payable_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":19518,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18979,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19349,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20267,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":16574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":17916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":21167,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":20013,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed":{"entryPoint":21079,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":21314,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18477,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":16951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":21441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":21468,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":21287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16728,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_bool__fromStack_reversed":{"entryPoint":17943,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20440,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":17504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":17874,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":16233,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":16090,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":17132,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":16260,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr":{"entryPoint":18075,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":19197,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr":{"entryPoint":18047,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":16601,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr":{"entryPoint":18347,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":18058,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":18091,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":16612,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18919,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":19145,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":19817,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":19704,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":19866,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":20728,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":16541,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":17070,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":16924,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":21416,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":21208,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":16509,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":16806,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":21218,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":17846,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":20693,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_address_payable_to_t_address":{"entryPoint":19980,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":21238,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":19962,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":19928,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":20583,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":20869,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":16309,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":16629,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":20472,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":19049,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":20841,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":16184,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":19918,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":20157,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":19403,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address_payable":{"entryPoint":19444,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":19385,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":19485,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":20811,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":19098,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":19770,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":21369,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":19002,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":21120,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":16137,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":20617,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":16110,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":16115,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":16105,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":16100,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":16120,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":19372,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":20488,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":20798,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":20669,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7":{"entryPoint":19596,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070":{"entryPoint":20288,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":20229,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":20501,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":20627,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":16762,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":17088,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":20068,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":16816,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":20664,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:40212:16","nodeType":"YulBlock","src":"0:40212:16","statements":[{"body":{"nativeSrc":"47:35:16","nodeType":"YulBlock","src":"47:35:16","statements":[{"nativeSrc":"57:19:16","nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:16","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:16","nodeType":"YulIdentifier","src":"67:5:16"},"nativeSrc":"67:9:16","nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:16","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:16","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:16","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nativeSrc":"177:28:16","nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:16","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:16","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:16","nodeType":"YulIdentifier","src":"187:6:16"},"nativeSrc":"187:12:16","nodeType":"YulFunctionCall","src":"187:12:16"},"nativeSrc":"187:12:16","nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:16","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nativeSrc":"300:28:16","nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:16","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:16","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:16","nodeType":"YulIdentifier","src":"310:6:16"},"nativeSrc":"310:12:16","nodeType":"YulFunctionCall","src":"310:12:16"},"nativeSrc":"310:12:16","nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:16","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nativeSrc":"423:28:16","nodeType":"YulBlock","src":"423:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:16","nodeType":"YulLiteral","src":"440:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:16","nodeType":"YulLiteral","src":"443:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:16","nodeType":"YulIdentifier","src":"433:6:16"},"nativeSrc":"433:12:16","nodeType":"YulFunctionCall","src":"433:12:16"},"nativeSrc":"433:12:16","nodeType":"YulExpressionStatement","src":"433:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"334:117:16","nodeType":"YulFunctionDefinition","src":"334:117:16"},{"body":{"nativeSrc":"546:28:16","nodeType":"YulBlock","src":"546:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"563:1:16","nodeType":"YulLiteral","src":"563:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"566:1:16","nodeType":"YulLiteral","src":"566:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"556:6:16","nodeType":"YulIdentifier","src":"556:6:16"},"nativeSrc":"556:12:16","nodeType":"YulFunctionCall","src":"556:12:16"},"nativeSrc":"556:12:16","nodeType":"YulExpressionStatement","src":"556:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"457:117:16","nodeType":"YulFunctionDefinition","src":"457:117:16"},{"body":{"nativeSrc":"628:54:16","nodeType":"YulBlock","src":"628:54:16","statements":[{"nativeSrc":"638:38:16","nodeType":"YulAssignment","src":"638:38:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:16","nodeType":"YulIdentifier","src":"656:5:16"},{"kind":"number","nativeSrc":"663:2:16","nodeType":"YulLiteral","src":"663:2:16","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"652:3:16","nodeType":"YulIdentifier","src":"652:3:16"},"nativeSrc":"652:14:16","nodeType":"YulFunctionCall","src":"652:14:16"},{"arguments":[{"kind":"number","nativeSrc":"672:2:16","nodeType":"YulLiteral","src":"672:2:16","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"668:3:16","nodeType":"YulIdentifier","src":"668:3:16"},"nativeSrc":"668:7:16","nodeType":"YulFunctionCall","src":"668:7:16"}],"functionName":{"name":"and","nativeSrc":"648:3:16","nodeType":"YulIdentifier","src":"648:3:16"},"nativeSrc":"648:28:16","nodeType":"YulFunctionCall","src":"648:28:16"},"variableNames":[{"name":"result","nativeSrc":"638:6:16","nodeType":"YulIdentifier","src":"638:6:16"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"580:102:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"611:5:16","nodeType":"YulTypedName","src":"611:5:16","type":""}],"returnVariables":[{"name":"result","nativeSrc":"621:6:16","nodeType":"YulTypedName","src":"621:6:16","type":""}],"src":"580:102:16"},{"body":{"nativeSrc":"716:152:16","nodeType":"YulBlock","src":"716:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"733:1:16","nodeType":"YulLiteral","src":"733:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"736:77:16","nodeType":"YulLiteral","src":"736:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"726:6:16","nodeType":"YulIdentifier","src":"726:6:16"},"nativeSrc":"726:88:16","nodeType":"YulFunctionCall","src":"726:88:16"},"nativeSrc":"726:88:16","nodeType":"YulExpressionStatement","src":"726:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"830:1:16","nodeType":"YulLiteral","src":"830:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"833:4:16","nodeType":"YulLiteral","src":"833:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"823:6:16","nodeType":"YulIdentifier","src":"823:6:16"},"nativeSrc":"823:15:16","nodeType":"YulFunctionCall","src":"823:15:16"},"nativeSrc":"823:15:16","nodeType":"YulExpressionStatement","src":"823:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"854:1:16","nodeType":"YulLiteral","src":"854:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"857:4:16","nodeType":"YulLiteral","src":"857:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"847:6:16","nodeType":"YulIdentifier","src":"847:6:16"},"nativeSrc":"847:15:16","nodeType":"YulFunctionCall","src":"847:15:16"},"nativeSrc":"847:15:16","nodeType":"YulExpressionStatement","src":"847:15:16"}]},"name":"panic_error_0x41","nativeSrc":"688:180:16","nodeType":"YulFunctionDefinition","src":"688:180:16"},{"body":{"nativeSrc":"917:238:16","nodeType":"YulBlock","src":"917:238:16","statements":[{"nativeSrc":"927:58:16","nodeType":"YulVariableDeclaration","src":"927:58:16","value":{"arguments":[{"name":"memPtr","nativeSrc":"949:6:16","nodeType":"YulIdentifier","src":"949:6:16"},{"arguments":[{"name":"size","nativeSrc":"979:4:16","nodeType":"YulIdentifier","src":"979:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"957:21:16","nodeType":"YulIdentifier","src":"957:21:16"},"nativeSrc":"957:27:16","nodeType":"YulFunctionCall","src":"957:27:16"}],"functionName":{"name":"add","nativeSrc":"945:3:16","nodeType":"YulIdentifier","src":"945:3:16"},"nativeSrc":"945:40:16","nodeType":"YulFunctionCall","src":"945:40:16"},"variables":[{"name":"newFreePtr","nativeSrc":"931:10:16","nodeType":"YulTypedName","src":"931:10:16","type":""}]},{"body":{"nativeSrc":"1096:22:16","nodeType":"YulBlock","src":"1096:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1098:16:16","nodeType":"YulIdentifier","src":"1098:16:16"},"nativeSrc":"1098:18:16","nodeType":"YulFunctionCall","src":"1098:18:16"},"nativeSrc":"1098:18:16","nodeType":"YulExpressionStatement","src":"1098:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1039:10:16","nodeType":"YulIdentifier","src":"1039:10:16"},{"kind":"number","nativeSrc":"1051:18:16","nodeType":"YulLiteral","src":"1051:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1036:2:16","nodeType":"YulIdentifier","src":"1036:2:16"},"nativeSrc":"1036:34:16","nodeType":"YulFunctionCall","src":"1036:34:16"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1075:10:16","nodeType":"YulIdentifier","src":"1075:10:16"},{"name":"memPtr","nativeSrc":"1087:6:16","nodeType":"YulIdentifier","src":"1087:6:16"}],"functionName":{"name":"lt","nativeSrc":"1072:2:16","nodeType":"YulIdentifier","src":"1072:2:16"},"nativeSrc":"1072:22:16","nodeType":"YulFunctionCall","src":"1072:22:16"}],"functionName":{"name":"or","nativeSrc":"1033:2:16","nodeType":"YulIdentifier","src":"1033:2:16"},"nativeSrc":"1033:62:16","nodeType":"YulFunctionCall","src":"1033:62:16"},"nativeSrc":"1030:88:16","nodeType":"YulIf","src":"1030:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1134:2:16","nodeType":"YulLiteral","src":"1134:2:16","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1138:10:16","nodeType":"YulIdentifier","src":"1138:10:16"}],"functionName":{"name":"mstore","nativeSrc":"1127:6:16","nodeType":"YulIdentifier","src":"1127:6:16"},"nativeSrc":"1127:22:16","nodeType":"YulFunctionCall","src":"1127:22:16"},"nativeSrc":"1127:22:16","nodeType":"YulExpressionStatement","src":"1127:22:16"}]},"name":"finalize_allocation","nativeSrc":"874:281:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"903:6:16","nodeType":"YulTypedName","src":"903:6:16","type":""},{"name":"size","nativeSrc":"911:4:16","nodeType":"YulTypedName","src":"911:4:16","type":""}],"src":"874:281:16"},{"body":{"nativeSrc":"1202:88:16","nodeType":"YulBlock","src":"1202:88:16","statements":[{"nativeSrc":"1212:30:16","nodeType":"YulAssignment","src":"1212:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1222:18:16","nodeType":"YulIdentifier","src":"1222:18:16"},"nativeSrc":"1222:20:16","nodeType":"YulFunctionCall","src":"1222:20:16"},"variableNames":[{"name":"memPtr","nativeSrc":"1212:6:16","nodeType":"YulIdentifier","src":"1212:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1271:6:16","nodeType":"YulIdentifier","src":"1271:6:16"},{"name":"size","nativeSrc":"1279:4:16","nodeType":"YulIdentifier","src":"1279:4:16"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1251:19:16","nodeType":"YulIdentifier","src":"1251:19:16"},"nativeSrc":"1251:33:16","nodeType":"YulFunctionCall","src":"1251:33:16"},"nativeSrc":"1251:33:16","nodeType":"YulExpressionStatement","src":"1251:33:16"}]},"name":"allocate_memory","nativeSrc":"1161:129:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1186:4:16","nodeType":"YulTypedName","src":"1186:4:16","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1195:6:16","nodeType":"YulTypedName","src":"1195:6:16","type":""}],"src":"1161:129:16"},{"body":{"nativeSrc":"1363:241:16","nodeType":"YulBlock","src":"1363:241:16","statements":[{"body":{"nativeSrc":"1468:22:16","nodeType":"YulBlock","src":"1468:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1470:16:16","nodeType":"YulIdentifier","src":"1470:16:16"},"nativeSrc":"1470:18:16","nodeType":"YulFunctionCall","src":"1470:18:16"},"nativeSrc":"1470:18:16","nodeType":"YulExpressionStatement","src":"1470:18:16"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1440:6:16","nodeType":"YulIdentifier","src":"1440:6:16"},{"kind":"number","nativeSrc":"1448:18:16","nodeType":"YulLiteral","src":"1448:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1437:2:16","nodeType":"YulIdentifier","src":"1437:2:16"},"nativeSrc":"1437:30:16","nodeType":"YulFunctionCall","src":"1437:30:16"},"nativeSrc":"1434:56:16","nodeType":"YulIf","src":"1434:56:16"},{"nativeSrc":"1500:37:16","nodeType":"YulAssignment","src":"1500:37:16","value":{"arguments":[{"name":"length","nativeSrc":"1530:6:16","nodeType":"YulIdentifier","src":"1530:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1508:21:16","nodeType":"YulIdentifier","src":"1508:21:16"},"nativeSrc":"1508:29:16","nodeType":"YulFunctionCall","src":"1508:29:16"},"variableNames":[{"name":"size","nativeSrc":"1500:4:16","nodeType":"YulIdentifier","src":"1500:4:16"}]},{"nativeSrc":"1574:23:16","nodeType":"YulAssignment","src":"1574:23:16","value":{"arguments":[{"name":"size","nativeSrc":"1586:4:16","nodeType":"YulIdentifier","src":"1586:4:16"},{"kind":"number","nativeSrc":"1592:4:16","nodeType":"YulLiteral","src":"1592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1582:3:16","nodeType":"YulIdentifier","src":"1582:3:16"},"nativeSrc":"1582:15:16","nodeType":"YulFunctionCall","src":"1582:15:16"},"variableNames":[{"name":"size","nativeSrc":"1574:4:16","nodeType":"YulIdentifier","src":"1574:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1296:308:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1347:6:16","nodeType":"YulTypedName","src":"1347:6:16","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1358:4:16","nodeType":"YulTypedName","src":"1358:4:16","type":""}],"src":"1296:308:16"},{"body":{"nativeSrc":"1674:84:16","nodeType":"YulBlock","src":"1674:84:16","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"1698:3:16","nodeType":"YulIdentifier","src":"1698:3:16"},{"name":"src","nativeSrc":"1703:3:16","nodeType":"YulIdentifier","src":"1703:3:16"},{"name":"length","nativeSrc":"1708:6:16","nodeType":"YulIdentifier","src":"1708:6:16"}],"functionName":{"name":"calldatacopy","nativeSrc":"1685:12:16","nodeType":"YulIdentifier","src":"1685:12:16"},"nativeSrc":"1685:30:16","nodeType":"YulFunctionCall","src":"1685:30:16"},"nativeSrc":"1685:30:16","nodeType":"YulExpressionStatement","src":"1685:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1735:3:16","nodeType":"YulIdentifier","src":"1735:3:16"},{"name":"length","nativeSrc":"1740:6:16","nodeType":"YulIdentifier","src":"1740:6:16"}],"functionName":{"name":"add","nativeSrc":"1731:3:16","nodeType":"YulIdentifier","src":"1731:3:16"},"nativeSrc":"1731:16:16","nodeType":"YulFunctionCall","src":"1731:16:16"},{"kind":"number","nativeSrc":"1749:1:16","nodeType":"YulLiteral","src":"1749:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1724:6:16","nodeType":"YulIdentifier","src":"1724:6:16"},"nativeSrc":"1724:27:16","nodeType":"YulFunctionCall","src":"1724:27:16"},"nativeSrc":"1724:27:16","nodeType":"YulExpressionStatement","src":"1724:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"1610:148:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1656:3:16","nodeType":"YulTypedName","src":"1656:3:16","type":""},{"name":"dst","nativeSrc":"1661:3:16","nodeType":"YulTypedName","src":"1661:3:16","type":""},{"name":"length","nativeSrc":"1666:6:16","nodeType":"YulTypedName","src":"1666:6:16","type":""}],"src":"1610:148:16"},{"body":{"nativeSrc":"1848:341:16","nodeType":"YulBlock","src":"1848:341:16","statements":[{"nativeSrc":"1858:75:16","nodeType":"YulAssignment","src":"1858:75:16","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1925:6:16","nodeType":"YulIdentifier","src":"1925:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1883:41:16","nodeType":"YulIdentifier","src":"1883:41:16"},"nativeSrc":"1883:49:16","nodeType":"YulFunctionCall","src":"1883:49:16"}],"functionName":{"name":"allocate_memory","nativeSrc":"1867:15:16","nodeType":"YulIdentifier","src":"1867:15:16"},"nativeSrc":"1867:66:16","nodeType":"YulFunctionCall","src":"1867:66:16"},"variableNames":[{"name":"array","nativeSrc":"1858:5:16","nodeType":"YulIdentifier","src":"1858:5:16"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"1949:5:16","nodeType":"YulIdentifier","src":"1949:5:16"},{"name":"length","nativeSrc":"1956:6:16","nodeType":"YulIdentifier","src":"1956:6:16"}],"functionName":{"name":"mstore","nativeSrc":"1942:6:16","nodeType":"YulIdentifier","src":"1942:6:16"},"nativeSrc":"1942:21:16","nodeType":"YulFunctionCall","src":"1942:21:16"},"nativeSrc":"1942:21:16","nodeType":"YulExpressionStatement","src":"1942:21:16"},{"nativeSrc":"1972:27:16","nodeType":"YulVariableDeclaration","src":"1972:27:16","value":{"arguments":[{"name":"array","nativeSrc":"1987:5:16","nodeType":"YulIdentifier","src":"1987:5:16"},{"kind":"number","nativeSrc":"1994:4:16","nodeType":"YulLiteral","src":"1994:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1983:3:16","nodeType":"YulIdentifier","src":"1983:3:16"},"nativeSrc":"1983:16:16","nodeType":"YulFunctionCall","src":"1983:16:16"},"variables":[{"name":"dst","nativeSrc":"1976:3:16","nodeType":"YulTypedName","src":"1976:3:16","type":""}]},{"body":{"nativeSrc":"2037:83:16","nodeType":"YulBlock","src":"2037:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2039:77:16","nodeType":"YulIdentifier","src":"2039:77:16"},"nativeSrc":"2039:79:16","nodeType":"YulFunctionCall","src":"2039:79:16"},"nativeSrc":"2039:79:16","nodeType":"YulExpressionStatement","src":"2039:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2018:3:16","nodeType":"YulIdentifier","src":"2018:3:16"},{"name":"length","nativeSrc":"2023:6:16","nodeType":"YulIdentifier","src":"2023:6:16"}],"functionName":{"name":"add","nativeSrc":"2014:3:16","nodeType":"YulIdentifier","src":"2014:3:16"},"nativeSrc":"2014:16:16","nodeType":"YulFunctionCall","src":"2014:16:16"},{"name":"end","nativeSrc":"2032:3:16","nodeType":"YulIdentifier","src":"2032:3:16"}],"functionName":{"name":"gt","nativeSrc":"2011:2:16","nodeType":"YulIdentifier","src":"2011:2:16"},"nativeSrc":"2011:25:16","nodeType":"YulFunctionCall","src":"2011:25:16"},"nativeSrc":"2008:112:16","nodeType":"YulIf","src":"2008:112:16"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2166:3:16","nodeType":"YulIdentifier","src":"2166:3:16"},{"name":"dst","nativeSrc":"2171:3:16","nodeType":"YulIdentifier","src":"2171:3:16"},{"name":"length","nativeSrc":"2176:6:16","nodeType":"YulIdentifier","src":"2176:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"2129:36:16","nodeType":"YulIdentifier","src":"2129:36:16"},"nativeSrc":"2129:54:16","nodeType":"YulFunctionCall","src":"2129:54:16"},"nativeSrc":"2129:54:16","nodeType":"YulExpressionStatement","src":"2129:54:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"1764:425:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1821:3:16","nodeType":"YulTypedName","src":"1821:3:16","type":""},{"name":"length","nativeSrc":"1826:6:16","nodeType":"YulTypedName","src":"1826:6:16","type":""},{"name":"end","nativeSrc":"1834:3:16","nodeType":"YulTypedName","src":"1834:3:16","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1842:5:16","nodeType":"YulTypedName","src":"1842:5:16","type":""}],"src":"1764:425:16"},{"body":{"nativeSrc":"2271:278:16","nodeType":"YulBlock","src":"2271:278:16","statements":[{"body":{"nativeSrc":"2320:83:16","nodeType":"YulBlock","src":"2320:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2322:77:16","nodeType":"YulIdentifier","src":"2322:77:16"},"nativeSrc":"2322:79:16","nodeType":"YulFunctionCall","src":"2322:79:16"},"nativeSrc":"2322:79:16","nodeType":"YulExpressionStatement","src":"2322:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2299:6:16","nodeType":"YulIdentifier","src":"2299:6:16"},{"kind":"number","nativeSrc":"2307:4:16","nodeType":"YulLiteral","src":"2307:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2295:3:16","nodeType":"YulIdentifier","src":"2295:3:16"},"nativeSrc":"2295:17:16","nodeType":"YulFunctionCall","src":"2295:17:16"},{"name":"end","nativeSrc":"2314:3:16","nodeType":"YulIdentifier","src":"2314:3:16"}],"functionName":{"name":"slt","nativeSrc":"2291:3:16","nodeType":"YulIdentifier","src":"2291:3:16"},"nativeSrc":"2291:27:16","nodeType":"YulFunctionCall","src":"2291:27:16"}],"functionName":{"name":"iszero","nativeSrc":"2284:6:16","nodeType":"YulIdentifier","src":"2284:6:16"},"nativeSrc":"2284:35:16","nodeType":"YulFunctionCall","src":"2284:35:16"},"nativeSrc":"2281:122:16","nodeType":"YulIf","src":"2281:122:16"},{"nativeSrc":"2412:34:16","nodeType":"YulVariableDeclaration","src":"2412:34:16","value":{"arguments":[{"name":"offset","nativeSrc":"2439:6:16","nodeType":"YulIdentifier","src":"2439:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"2426:12:16","nodeType":"YulIdentifier","src":"2426:12:16"},"nativeSrc":"2426:20:16","nodeType":"YulFunctionCall","src":"2426:20:16"},"variables":[{"name":"length","nativeSrc":"2416:6:16","nodeType":"YulTypedName","src":"2416:6:16","type":""}]},{"nativeSrc":"2455:88:16","nodeType":"YulAssignment","src":"2455:88:16","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2516:6:16","nodeType":"YulIdentifier","src":"2516:6:16"},{"kind":"number","nativeSrc":"2524:4:16","nodeType":"YulLiteral","src":"2524:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2512:3:16","nodeType":"YulIdentifier","src":"2512:3:16"},"nativeSrc":"2512:17:16","nodeType":"YulFunctionCall","src":"2512:17:16"},{"name":"length","nativeSrc":"2531:6:16","nodeType":"YulIdentifier","src":"2531:6:16"},{"name":"end","nativeSrc":"2539:3:16","nodeType":"YulIdentifier","src":"2539:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"2464:47:16","nodeType":"YulIdentifier","src":"2464:47:16"},"nativeSrc":"2464:79:16","nodeType":"YulFunctionCall","src":"2464:79:16"},"variableNames":[{"name":"array","nativeSrc":"2455:5:16","nodeType":"YulIdentifier","src":"2455:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"2209:340:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2249:6:16","nodeType":"YulTypedName","src":"2249:6:16","type":""},{"name":"end","nativeSrc":"2257:3:16","nodeType":"YulTypedName","src":"2257:3:16","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2265:5:16","nodeType":"YulTypedName","src":"2265:5:16","type":""}],"src":"2209:340:16"},{"body":{"nativeSrc":"2631:433:16","nodeType":"YulBlock","src":"2631:433:16","statements":[{"body":{"nativeSrc":"2677:83:16","nodeType":"YulBlock","src":"2677:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2679:77:16","nodeType":"YulIdentifier","src":"2679:77:16"},"nativeSrc":"2679:79:16","nodeType":"YulFunctionCall","src":"2679:79:16"},"nativeSrc":"2679:79:16","nodeType":"YulExpressionStatement","src":"2679:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2652:7:16","nodeType":"YulIdentifier","src":"2652:7:16"},{"name":"headStart","nativeSrc":"2661:9:16","nodeType":"YulIdentifier","src":"2661:9:16"}],"functionName":{"name":"sub","nativeSrc":"2648:3:16","nodeType":"YulIdentifier","src":"2648:3:16"},"nativeSrc":"2648:23:16","nodeType":"YulFunctionCall","src":"2648:23:16"},{"kind":"number","nativeSrc":"2673:2:16","nodeType":"YulLiteral","src":"2673:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2644:3:16","nodeType":"YulIdentifier","src":"2644:3:16"},"nativeSrc":"2644:32:16","nodeType":"YulFunctionCall","src":"2644:32:16"},"nativeSrc":"2641:119:16","nodeType":"YulIf","src":"2641:119:16"},{"nativeSrc":"2770:287:16","nodeType":"YulBlock","src":"2770:287:16","statements":[{"nativeSrc":"2785:45:16","nodeType":"YulVariableDeclaration","src":"2785:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2816:9:16","nodeType":"YulIdentifier","src":"2816:9:16"},{"kind":"number","nativeSrc":"2827:1:16","nodeType":"YulLiteral","src":"2827:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2812:3:16","nodeType":"YulIdentifier","src":"2812:3:16"},"nativeSrc":"2812:17:16","nodeType":"YulFunctionCall","src":"2812:17:16"}],"functionName":{"name":"calldataload","nativeSrc":"2799:12:16","nodeType":"YulIdentifier","src":"2799:12:16"},"nativeSrc":"2799:31:16","nodeType":"YulFunctionCall","src":"2799:31:16"},"variables":[{"name":"offset","nativeSrc":"2789:6:16","nodeType":"YulTypedName","src":"2789:6:16","type":""}]},{"body":{"nativeSrc":"2877:83:16","nodeType":"YulBlock","src":"2877:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"2879:77:16","nodeType":"YulIdentifier","src":"2879:77:16"},"nativeSrc":"2879:79:16","nodeType":"YulFunctionCall","src":"2879:79:16"},"nativeSrc":"2879:79:16","nodeType":"YulExpressionStatement","src":"2879:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2849:6:16","nodeType":"YulIdentifier","src":"2849:6:16"},{"kind":"number","nativeSrc":"2857:18:16","nodeType":"YulLiteral","src":"2857:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2846:2:16","nodeType":"YulIdentifier","src":"2846:2:16"},"nativeSrc":"2846:30:16","nodeType":"YulFunctionCall","src":"2846:30:16"},"nativeSrc":"2843:117:16","nodeType":"YulIf","src":"2843:117:16"},{"nativeSrc":"2974:73:16","nodeType":"YulAssignment","src":"2974:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3019:9:16","nodeType":"YulIdentifier","src":"3019:9:16"},{"name":"offset","nativeSrc":"3030:6:16","nodeType":"YulIdentifier","src":"3030:6:16"}],"functionName":{"name":"add","nativeSrc":"3015:3:16","nodeType":"YulIdentifier","src":"3015:3:16"},"nativeSrc":"3015:22:16","nodeType":"YulFunctionCall","src":"3015:22:16"},{"name":"dataEnd","nativeSrc":"3039:7:16","nodeType":"YulIdentifier","src":"3039:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"2984:30:16","nodeType":"YulIdentifier","src":"2984:30:16"},"nativeSrc":"2984:63:16","nodeType":"YulFunctionCall","src":"2984:63:16"},"variableNames":[{"name":"value0","nativeSrc":"2974:6:16","nodeType":"YulIdentifier","src":"2974:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"2555:509:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2601:9:16","nodeType":"YulTypedName","src":"2601:9:16","type":""},{"name":"dataEnd","nativeSrc":"2612:7:16","nodeType":"YulTypedName","src":"2612:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2624:6:16","nodeType":"YulTypedName","src":"2624:6:16","type":""}],"src":"2555:509:16"},{"body":{"nativeSrc":"3115:81:16","nodeType":"YulBlock","src":"3115:81:16","statements":[{"nativeSrc":"3125:65:16","nodeType":"YulAssignment","src":"3125:65:16","value":{"arguments":[{"name":"value","nativeSrc":"3140:5:16","nodeType":"YulIdentifier","src":"3140:5:16"},{"kind":"number","nativeSrc":"3147:42:16","nodeType":"YulLiteral","src":"3147:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3136:3:16","nodeType":"YulIdentifier","src":"3136:3:16"},"nativeSrc":"3136:54:16","nodeType":"YulFunctionCall","src":"3136:54:16"},"variableNames":[{"name":"cleaned","nativeSrc":"3125:7:16","nodeType":"YulIdentifier","src":"3125:7:16"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3070:126:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3097:5:16","nodeType":"YulTypedName","src":"3097:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3107:7:16","nodeType":"YulTypedName","src":"3107:7:16","type":""}],"src":"3070:126:16"},{"body":{"nativeSrc":"3247:51:16","nodeType":"YulBlock","src":"3247:51:16","statements":[{"nativeSrc":"3257:35:16","nodeType":"YulAssignment","src":"3257:35:16","value":{"arguments":[{"name":"value","nativeSrc":"3286:5:16","nodeType":"YulIdentifier","src":"3286:5:16"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3268:17:16","nodeType":"YulIdentifier","src":"3268:17:16"},"nativeSrc":"3268:24:16","nodeType":"YulFunctionCall","src":"3268:24:16"},"variableNames":[{"name":"cleaned","nativeSrc":"3257:7:16","nodeType":"YulIdentifier","src":"3257:7:16"}]}]},"name":"cleanup_t_address","nativeSrc":"3202:96:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3229:5:16","nodeType":"YulTypedName","src":"3229:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3239:7:16","nodeType":"YulTypedName","src":"3239:7:16","type":""}],"src":"3202:96:16"},{"body":{"nativeSrc":"3369:53:16","nodeType":"YulBlock","src":"3369:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3386:3:16","nodeType":"YulIdentifier","src":"3386:3:16"},{"arguments":[{"name":"value","nativeSrc":"3409:5:16","nodeType":"YulIdentifier","src":"3409:5:16"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3391:17:16","nodeType":"YulIdentifier","src":"3391:17:16"},"nativeSrc":"3391:24:16","nodeType":"YulFunctionCall","src":"3391:24:16"}],"functionName":{"name":"mstore","nativeSrc":"3379:6:16","nodeType":"YulIdentifier","src":"3379:6:16"},"nativeSrc":"3379:37:16","nodeType":"YulFunctionCall","src":"3379:37:16"},"nativeSrc":"3379:37:16","nodeType":"YulExpressionStatement","src":"3379:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3304:118:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3357:5:16","nodeType":"YulTypedName","src":"3357:5:16","type":""},{"name":"pos","nativeSrc":"3364:3:16","nodeType":"YulTypedName","src":"3364:3:16","type":""}],"src":"3304:118:16"},{"body":{"nativeSrc":"3526:124:16","nodeType":"YulBlock","src":"3526:124:16","statements":[{"nativeSrc":"3536:26:16","nodeType":"YulAssignment","src":"3536:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"3548:9:16","nodeType":"YulIdentifier","src":"3548:9:16"},{"kind":"number","nativeSrc":"3559:2:16","nodeType":"YulLiteral","src":"3559:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3544:3:16","nodeType":"YulIdentifier","src":"3544:3:16"},"nativeSrc":"3544:18:16","nodeType":"YulFunctionCall","src":"3544:18:16"},"variableNames":[{"name":"tail","nativeSrc":"3536:4:16","nodeType":"YulIdentifier","src":"3536:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3616:6:16","nodeType":"YulIdentifier","src":"3616:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"3629:9:16","nodeType":"YulIdentifier","src":"3629:9:16"},{"kind":"number","nativeSrc":"3640:1:16","nodeType":"YulLiteral","src":"3640:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3625:3:16","nodeType":"YulIdentifier","src":"3625:3:16"},"nativeSrc":"3625:17:16","nodeType":"YulFunctionCall","src":"3625:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3572:43:16","nodeType":"YulIdentifier","src":"3572:43:16"},"nativeSrc":"3572:71:16","nodeType":"YulFunctionCall","src":"3572:71:16"},"nativeSrc":"3572:71:16","nodeType":"YulExpressionStatement","src":"3572:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3428:222:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3498:9:16","nodeType":"YulTypedName","src":"3498:9:16","type":""},{"name":"value0","nativeSrc":"3510:6:16","nodeType":"YulTypedName","src":"3510:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3521:4:16","nodeType":"YulTypedName","src":"3521:4:16","type":""}],"src":"3428:222:16"},{"body":{"nativeSrc":"3715:40:16","nodeType":"YulBlock","src":"3715:40:16","statements":[{"nativeSrc":"3726:22:16","nodeType":"YulAssignment","src":"3726:22:16","value":{"arguments":[{"name":"value","nativeSrc":"3742:5:16","nodeType":"YulIdentifier","src":"3742:5:16"}],"functionName":{"name":"mload","nativeSrc":"3736:5:16","nodeType":"YulIdentifier","src":"3736:5:16"},"nativeSrc":"3736:12:16","nodeType":"YulFunctionCall","src":"3736:12:16"},"variableNames":[{"name":"length","nativeSrc":"3726:6:16","nodeType":"YulIdentifier","src":"3726:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"3656:99:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3698:5:16","nodeType":"YulTypedName","src":"3698:5:16","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3708:6:16","nodeType":"YulTypedName","src":"3708:6:16","type":""}],"src":"3656:99:16"},{"body":{"nativeSrc":"3857:73:16","nodeType":"YulBlock","src":"3857:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3874:3:16","nodeType":"YulIdentifier","src":"3874:3:16"},{"name":"length","nativeSrc":"3879:6:16","nodeType":"YulIdentifier","src":"3879:6:16"}],"functionName":{"name":"mstore","nativeSrc":"3867:6:16","nodeType":"YulIdentifier","src":"3867:6:16"},"nativeSrc":"3867:19:16","nodeType":"YulFunctionCall","src":"3867:19:16"},"nativeSrc":"3867:19:16","nodeType":"YulExpressionStatement","src":"3867:19:16"},{"nativeSrc":"3895:29:16","nodeType":"YulAssignment","src":"3895:29:16","value":{"arguments":[{"name":"pos","nativeSrc":"3914:3:16","nodeType":"YulIdentifier","src":"3914:3:16"},{"kind":"number","nativeSrc":"3919:4:16","nodeType":"YulLiteral","src":"3919:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3910:3:16","nodeType":"YulIdentifier","src":"3910:3:16"},"nativeSrc":"3910:14:16","nodeType":"YulFunctionCall","src":"3910:14:16"},"variableNames":[{"name":"updated_pos","nativeSrc":"3895:11:16","nodeType":"YulIdentifier","src":"3895:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3761:169:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3829:3:16","nodeType":"YulTypedName","src":"3829:3:16","type":""},{"name":"length","nativeSrc":"3834:6:16","nodeType":"YulTypedName","src":"3834:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3845:11:16","nodeType":"YulTypedName","src":"3845:11:16","type":""}],"src":"3761:169:16"},{"body":{"nativeSrc":"3998:186:16","nodeType":"YulBlock","src":"3998:186:16","statements":[{"nativeSrc":"4009:10:16","nodeType":"YulVariableDeclaration","src":"4009:10:16","value":{"kind":"number","nativeSrc":"4018:1:16","nodeType":"YulLiteral","src":"4018:1:16","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4013:1:16","nodeType":"YulTypedName","src":"4013:1:16","type":""}]},{"body":{"nativeSrc":"4078:63:16","nodeType":"YulBlock","src":"4078:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4103:3:16","nodeType":"YulIdentifier","src":"4103:3:16"},{"name":"i","nativeSrc":"4108:1:16","nodeType":"YulIdentifier","src":"4108:1:16"}],"functionName":{"name":"add","nativeSrc":"4099:3:16","nodeType":"YulIdentifier","src":"4099:3:16"},"nativeSrc":"4099:11:16","nodeType":"YulFunctionCall","src":"4099:11:16"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4122:3:16","nodeType":"YulIdentifier","src":"4122:3:16"},{"name":"i","nativeSrc":"4127:1:16","nodeType":"YulIdentifier","src":"4127:1:16"}],"functionName":{"name":"add","nativeSrc":"4118:3:16","nodeType":"YulIdentifier","src":"4118:3:16"},"nativeSrc":"4118:11:16","nodeType":"YulFunctionCall","src":"4118:11:16"}],"functionName":{"name":"mload","nativeSrc":"4112:5:16","nodeType":"YulIdentifier","src":"4112:5:16"},"nativeSrc":"4112:18:16","nodeType":"YulFunctionCall","src":"4112:18:16"}],"functionName":{"name":"mstore","nativeSrc":"4092:6:16","nodeType":"YulIdentifier","src":"4092:6:16"},"nativeSrc":"4092:39:16","nodeType":"YulFunctionCall","src":"4092:39:16"},"nativeSrc":"4092:39:16","nodeType":"YulExpressionStatement","src":"4092:39:16"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4039:1:16","nodeType":"YulIdentifier","src":"4039:1:16"},{"name":"length","nativeSrc":"4042:6:16","nodeType":"YulIdentifier","src":"4042:6:16"}],"functionName":{"name":"lt","nativeSrc":"4036:2:16","nodeType":"YulIdentifier","src":"4036:2:16"},"nativeSrc":"4036:13:16","nodeType":"YulFunctionCall","src":"4036:13:16"},"nativeSrc":"4028:113:16","nodeType":"YulForLoop","post":{"nativeSrc":"4050:19:16","nodeType":"YulBlock","src":"4050:19:16","statements":[{"nativeSrc":"4052:15:16","nodeType":"YulAssignment","src":"4052:15:16","value":{"arguments":[{"name":"i","nativeSrc":"4061:1:16","nodeType":"YulIdentifier","src":"4061:1:16"},{"kind":"number","nativeSrc":"4064:2:16","nodeType":"YulLiteral","src":"4064:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4057:3:16","nodeType":"YulIdentifier","src":"4057:3:16"},"nativeSrc":"4057:10:16","nodeType":"YulFunctionCall","src":"4057:10:16"},"variableNames":[{"name":"i","nativeSrc":"4052:1:16","nodeType":"YulIdentifier","src":"4052:1:16"}]}]},"pre":{"nativeSrc":"4032:3:16","nodeType":"YulBlock","src":"4032:3:16","statements":[]},"src":"4028:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4161:3:16","nodeType":"YulIdentifier","src":"4161:3:16"},{"name":"length","nativeSrc":"4166:6:16","nodeType":"YulIdentifier","src":"4166:6:16"}],"functionName":{"name":"add","nativeSrc":"4157:3:16","nodeType":"YulIdentifier","src":"4157:3:16"},"nativeSrc":"4157:16:16","nodeType":"YulFunctionCall","src":"4157:16:16"},{"kind":"number","nativeSrc":"4175:1:16","nodeType":"YulLiteral","src":"4175:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4150:6:16","nodeType":"YulIdentifier","src":"4150:6:16"},"nativeSrc":"4150:27:16","nodeType":"YulFunctionCall","src":"4150:27:16"},"nativeSrc":"4150:27:16","nodeType":"YulExpressionStatement","src":"4150:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3936:248:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3980:3:16","nodeType":"YulTypedName","src":"3980:3:16","type":""},{"name":"dst","nativeSrc":"3985:3:16","nodeType":"YulTypedName","src":"3985:3:16","type":""},{"name":"length","nativeSrc":"3990:6:16","nodeType":"YulTypedName","src":"3990:6:16","type":""}],"src":"3936:248:16"},{"body":{"nativeSrc":"4282:285:16","nodeType":"YulBlock","src":"4282:285:16","statements":[{"nativeSrc":"4292:53:16","nodeType":"YulVariableDeclaration","src":"4292:53:16","value":{"arguments":[{"name":"value","nativeSrc":"4339:5:16","nodeType":"YulIdentifier","src":"4339:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"4306:32:16","nodeType":"YulIdentifier","src":"4306:32:16"},"nativeSrc":"4306:39:16","nodeType":"YulFunctionCall","src":"4306:39:16"},"variables":[{"name":"length","nativeSrc":"4296:6:16","nodeType":"YulTypedName","src":"4296:6:16","type":""}]},{"nativeSrc":"4354:78:16","nodeType":"YulAssignment","src":"4354:78:16","value":{"arguments":[{"name":"pos","nativeSrc":"4420:3:16","nodeType":"YulIdentifier","src":"4420:3:16"},{"name":"length","nativeSrc":"4425:6:16","nodeType":"YulIdentifier","src":"4425:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4361:58:16","nodeType":"YulIdentifier","src":"4361:58:16"},"nativeSrc":"4361:71:16","nodeType":"YulFunctionCall","src":"4361:71:16"},"variableNames":[{"name":"pos","nativeSrc":"4354:3:16","nodeType":"YulIdentifier","src":"4354:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4480:5:16","nodeType":"YulIdentifier","src":"4480:5:16"},{"kind":"number","nativeSrc":"4487:4:16","nodeType":"YulLiteral","src":"4487:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4476:3:16","nodeType":"YulIdentifier","src":"4476:3:16"},"nativeSrc":"4476:16:16","nodeType":"YulFunctionCall","src":"4476:16:16"},{"name":"pos","nativeSrc":"4494:3:16","nodeType":"YulIdentifier","src":"4494:3:16"},{"name":"length","nativeSrc":"4499:6:16","nodeType":"YulIdentifier","src":"4499:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4441:34:16","nodeType":"YulIdentifier","src":"4441:34:16"},"nativeSrc":"4441:65:16","nodeType":"YulFunctionCall","src":"4441:65:16"},"nativeSrc":"4441:65:16","nodeType":"YulExpressionStatement","src":"4441:65:16"},{"nativeSrc":"4515:46:16","nodeType":"YulAssignment","src":"4515:46:16","value":{"arguments":[{"name":"pos","nativeSrc":"4526:3:16","nodeType":"YulIdentifier","src":"4526:3:16"},{"arguments":[{"name":"length","nativeSrc":"4553:6:16","nodeType":"YulIdentifier","src":"4553:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4531:21:16","nodeType":"YulIdentifier","src":"4531:21:16"},"nativeSrc":"4531:29:16","nodeType":"YulFunctionCall","src":"4531:29:16"}],"functionName":{"name":"add","nativeSrc":"4522:3:16","nodeType":"YulIdentifier","src":"4522:3:16"},"nativeSrc":"4522:39:16","nodeType":"YulFunctionCall","src":"4522:39:16"},"variableNames":[{"name":"end","nativeSrc":"4515:3:16","nodeType":"YulIdentifier","src":"4515:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"4190:377:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4263:5:16","nodeType":"YulTypedName","src":"4263:5:16","type":""},{"name":"pos","nativeSrc":"4270:3:16","nodeType":"YulTypedName","src":"4270:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4278:3:16","nodeType":"YulTypedName","src":"4278:3:16","type":""}],"src":"4190:377:16"},{"body":{"nativeSrc":"4691:195:16","nodeType":"YulBlock","src":"4691:195:16","statements":[{"nativeSrc":"4701:26:16","nodeType":"YulAssignment","src":"4701:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"4713:9:16","nodeType":"YulIdentifier","src":"4713:9:16"},{"kind":"number","nativeSrc":"4724:2:16","nodeType":"YulLiteral","src":"4724:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4709:3:16","nodeType":"YulIdentifier","src":"4709:3:16"},"nativeSrc":"4709:18:16","nodeType":"YulFunctionCall","src":"4709:18:16"},"variableNames":[{"name":"tail","nativeSrc":"4701:4:16","nodeType":"YulIdentifier","src":"4701:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4748:9:16","nodeType":"YulIdentifier","src":"4748:9:16"},{"kind":"number","nativeSrc":"4759:1:16","nodeType":"YulLiteral","src":"4759:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4744:3:16","nodeType":"YulIdentifier","src":"4744:3:16"},"nativeSrc":"4744:17:16","nodeType":"YulFunctionCall","src":"4744:17:16"},{"arguments":[{"name":"tail","nativeSrc":"4767:4:16","nodeType":"YulIdentifier","src":"4767:4:16"},{"name":"headStart","nativeSrc":"4773:9:16","nodeType":"YulIdentifier","src":"4773:9:16"}],"functionName":{"name":"sub","nativeSrc":"4763:3:16","nodeType":"YulIdentifier","src":"4763:3:16"},"nativeSrc":"4763:20:16","nodeType":"YulFunctionCall","src":"4763:20:16"}],"functionName":{"name":"mstore","nativeSrc":"4737:6:16","nodeType":"YulIdentifier","src":"4737:6:16"},"nativeSrc":"4737:47:16","nodeType":"YulFunctionCall","src":"4737:47:16"},"nativeSrc":"4737:47:16","nodeType":"YulExpressionStatement","src":"4737:47:16"},{"nativeSrc":"4793:86:16","nodeType":"YulAssignment","src":"4793:86:16","value":{"arguments":[{"name":"value0","nativeSrc":"4865:6:16","nodeType":"YulIdentifier","src":"4865:6:16"},{"name":"tail","nativeSrc":"4874:4:16","nodeType":"YulIdentifier","src":"4874:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"4801:63:16","nodeType":"YulIdentifier","src":"4801:63:16"},"nativeSrc":"4801:78:16","nodeType":"YulFunctionCall","src":"4801:78:16"},"variableNames":[{"name":"tail","nativeSrc":"4793:4:16","nodeType":"YulIdentifier","src":"4793:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4573:313:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4663:9:16","nodeType":"YulTypedName","src":"4663:9:16","type":""},{"name":"value0","nativeSrc":"4675:6:16","nodeType":"YulTypedName","src":"4675:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4686:4:16","nodeType":"YulTypedName","src":"4686:4:16","type":""}],"src":"4573:313:16"},{"body":{"nativeSrc":"4935:79:16","nodeType":"YulBlock","src":"4935:79:16","statements":[{"body":{"nativeSrc":"4992:16:16","nodeType":"YulBlock","src":"4992:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5001:1:16","nodeType":"YulLiteral","src":"5001:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"5004:1:16","nodeType":"YulLiteral","src":"5004:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4994:6:16","nodeType":"YulIdentifier","src":"4994:6:16"},"nativeSrc":"4994:12:16","nodeType":"YulFunctionCall","src":"4994:12:16"},"nativeSrc":"4994:12:16","nodeType":"YulExpressionStatement","src":"4994:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4958:5:16","nodeType":"YulIdentifier","src":"4958:5:16"},{"arguments":[{"name":"value","nativeSrc":"4983:5:16","nodeType":"YulIdentifier","src":"4983:5:16"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4965:17:16","nodeType":"YulIdentifier","src":"4965:17:16"},"nativeSrc":"4965:24:16","nodeType":"YulFunctionCall","src":"4965:24:16"}],"functionName":{"name":"eq","nativeSrc":"4955:2:16","nodeType":"YulIdentifier","src":"4955:2:16"},"nativeSrc":"4955:35:16","nodeType":"YulFunctionCall","src":"4955:35:16"}],"functionName":{"name":"iszero","nativeSrc":"4948:6:16","nodeType":"YulIdentifier","src":"4948:6:16"},"nativeSrc":"4948:43:16","nodeType":"YulFunctionCall","src":"4948:43:16"},"nativeSrc":"4945:63:16","nodeType":"YulIf","src":"4945:63:16"}]},"name":"validator_revert_t_address","nativeSrc":"4892:122:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4928:5:16","nodeType":"YulTypedName","src":"4928:5:16","type":""}],"src":"4892:122:16"},{"body":{"nativeSrc":"5072:87:16","nodeType":"YulBlock","src":"5072:87:16","statements":[{"nativeSrc":"5082:29:16","nodeType":"YulAssignment","src":"5082:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"5104:6:16","nodeType":"YulIdentifier","src":"5104:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"5091:12:16","nodeType":"YulIdentifier","src":"5091:12:16"},"nativeSrc":"5091:20:16","nodeType":"YulFunctionCall","src":"5091:20:16"},"variableNames":[{"name":"value","nativeSrc":"5082:5:16","nodeType":"YulIdentifier","src":"5082:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5147:5:16","nodeType":"YulIdentifier","src":"5147:5:16"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"5120:26:16","nodeType":"YulIdentifier","src":"5120:26:16"},"nativeSrc":"5120:33:16","nodeType":"YulFunctionCall","src":"5120:33:16"},"nativeSrc":"5120:33:16","nodeType":"YulExpressionStatement","src":"5120:33:16"}]},"name":"abi_decode_t_address","nativeSrc":"5020:139:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5050:6:16","nodeType":"YulTypedName","src":"5050:6:16","type":""},{"name":"end","nativeSrc":"5058:3:16","nodeType":"YulTypedName","src":"5058:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5066:5:16","nodeType":"YulTypedName","src":"5066:5:16","type":""}],"src":"5020:139:16"},{"body":{"nativeSrc":"5210:32:16","nodeType":"YulBlock","src":"5210:32:16","statements":[{"nativeSrc":"5220:16:16","nodeType":"YulAssignment","src":"5220:16:16","value":{"name":"value","nativeSrc":"5231:5:16","nodeType":"YulIdentifier","src":"5231:5:16"},"variableNames":[{"name":"cleaned","nativeSrc":"5220:7:16","nodeType":"YulIdentifier","src":"5220:7:16"}]}]},"name":"cleanup_t_uint256","nativeSrc":"5165:77:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5192:5:16","nodeType":"YulTypedName","src":"5192:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5202:7:16","nodeType":"YulTypedName","src":"5202:7:16","type":""}],"src":"5165:77:16"},{"body":{"nativeSrc":"5291:79:16","nodeType":"YulBlock","src":"5291:79:16","statements":[{"body":{"nativeSrc":"5348:16:16","nodeType":"YulBlock","src":"5348:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5357:1:16","nodeType":"YulLiteral","src":"5357:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"5360:1:16","nodeType":"YulLiteral","src":"5360:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5350:6:16","nodeType":"YulIdentifier","src":"5350:6:16"},"nativeSrc":"5350:12:16","nodeType":"YulFunctionCall","src":"5350:12:16"},"nativeSrc":"5350:12:16","nodeType":"YulExpressionStatement","src":"5350:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5314:5:16","nodeType":"YulIdentifier","src":"5314:5:16"},{"arguments":[{"name":"value","nativeSrc":"5339:5:16","nodeType":"YulIdentifier","src":"5339:5:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5321:17:16","nodeType":"YulIdentifier","src":"5321:17:16"},"nativeSrc":"5321:24:16","nodeType":"YulFunctionCall","src":"5321:24:16"}],"functionName":{"name":"eq","nativeSrc":"5311:2:16","nodeType":"YulIdentifier","src":"5311:2:16"},"nativeSrc":"5311:35:16","nodeType":"YulFunctionCall","src":"5311:35:16"}],"functionName":{"name":"iszero","nativeSrc":"5304:6:16","nodeType":"YulIdentifier","src":"5304:6:16"},"nativeSrc":"5304:43:16","nodeType":"YulFunctionCall","src":"5304:43:16"},"nativeSrc":"5301:63:16","nodeType":"YulIf","src":"5301:63:16"}]},"name":"validator_revert_t_uint256","nativeSrc":"5248:122:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5284:5:16","nodeType":"YulTypedName","src":"5284:5:16","type":""}],"src":"5248:122:16"},{"body":{"nativeSrc":"5428:87:16","nodeType":"YulBlock","src":"5428:87:16","statements":[{"nativeSrc":"5438:29:16","nodeType":"YulAssignment","src":"5438:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"5460:6:16","nodeType":"YulIdentifier","src":"5460:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"5447:12:16","nodeType":"YulIdentifier","src":"5447:12:16"},"nativeSrc":"5447:20:16","nodeType":"YulFunctionCall","src":"5447:20:16"},"variableNames":[{"name":"value","nativeSrc":"5438:5:16","nodeType":"YulIdentifier","src":"5438:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5503:5:16","nodeType":"YulIdentifier","src":"5503:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5476:26:16","nodeType":"YulIdentifier","src":"5476:26:16"},"nativeSrc":"5476:33:16","nodeType":"YulFunctionCall","src":"5476:33:16"},"nativeSrc":"5476:33:16","nodeType":"YulExpressionStatement","src":"5476:33:16"}]},"name":"abi_decode_t_uint256","nativeSrc":"5376:139:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5406:6:16","nodeType":"YulTypedName","src":"5406:6:16","type":""},{"name":"end","nativeSrc":"5414:3:16","nodeType":"YulTypedName","src":"5414:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5422:5:16","nodeType":"YulTypedName","src":"5422:5:16","type":""}],"src":"5376:139:16"},{"body":{"nativeSrc":"5604:391:16","nodeType":"YulBlock","src":"5604:391:16","statements":[{"body":{"nativeSrc":"5650:83:16","nodeType":"YulBlock","src":"5650:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5652:77:16","nodeType":"YulIdentifier","src":"5652:77:16"},"nativeSrc":"5652:79:16","nodeType":"YulFunctionCall","src":"5652:79:16"},"nativeSrc":"5652:79:16","nodeType":"YulExpressionStatement","src":"5652:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5625:7:16","nodeType":"YulIdentifier","src":"5625:7:16"},{"name":"headStart","nativeSrc":"5634:9:16","nodeType":"YulIdentifier","src":"5634:9:16"}],"functionName":{"name":"sub","nativeSrc":"5621:3:16","nodeType":"YulIdentifier","src":"5621:3:16"},"nativeSrc":"5621:23:16","nodeType":"YulFunctionCall","src":"5621:23:16"},{"kind":"number","nativeSrc":"5646:2:16","nodeType":"YulLiteral","src":"5646:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5617:3:16","nodeType":"YulIdentifier","src":"5617:3:16"},"nativeSrc":"5617:32:16","nodeType":"YulFunctionCall","src":"5617:32:16"},"nativeSrc":"5614:119:16","nodeType":"YulIf","src":"5614:119:16"},{"nativeSrc":"5743:117:16","nodeType":"YulBlock","src":"5743:117:16","statements":[{"nativeSrc":"5758:15:16","nodeType":"YulVariableDeclaration","src":"5758:15:16","value":{"kind":"number","nativeSrc":"5772:1:16","nodeType":"YulLiteral","src":"5772:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5762:6:16","nodeType":"YulTypedName","src":"5762:6:16","type":""}]},{"nativeSrc":"5787:63:16","nodeType":"YulAssignment","src":"5787:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5822:9:16","nodeType":"YulIdentifier","src":"5822:9:16"},{"name":"offset","nativeSrc":"5833:6:16","nodeType":"YulIdentifier","src":"5833:6:16"}],"functionName":{"name":"add","nativeSrc":"5818:3:16","nodeType":"YulIdentifier","src":"5818:3:16"},"nativeSrc":"5818:22:16","nodeType":"YulFunctionCall","src":"5818:22:16"},{"name":"dataEnd","nativeSrc":"5842:7:16","nodeType":"YulIdentifier","src":"5842:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5797:20:16","nodeType":"YulIdentifier","src":"5797:20:16"},"nativeSrc":"5797:53:16","nodeType":"YulFunctionCall","src":"5797:53:16"},"variableNames":[{"name":"value0","nativeSrc":"5787:6:16","nodeType":"YulIdentifier","src":"5787:6:16"}]}]},{"nativeSrc":"5870:118:16","nodeType":"YulBlock","src":"5870:118:16","statements":[{"nativeSrc":"5885:16:16","nodeType":"YulVariableDeclaration","src":"5885:16:16","value":{"kind":"number","nativeSrc":"5899:2:16","nodeType":"YulLiteral","src":"5899:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5889:6:16","nodeType":"YulTypedName","src":"5889:6:16","type":""}]},{"nativeSrc":"5915:63:16","nodeType":"YulAssignment","src":"5915:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5950:9:16","nodeType":"YulIdentifier","src":"5950:9:16"},{"name":"offset","nativeSrc":"5961:6:16","nodeType":"YulIdentifier","src":"5961:6:16"}],"functionName":{"name":"add","nativeSrc":"5946:3:16","nodeType":"YulIdentifier","src":"5946:3:16"},"nativeSrc":"5946:22:16","nodeType":"YulFunctionCall","src":"5946:22:16"},{"name":"dataEnd","nativeSrc":"5970:7:16","nodeType":"YulIdentifier","src":"5970:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5925:20:16","nodeType":"YulIdentifier","src":"5925:20:16"},"nativeSrc":"5925:53:16","nodeType":"YulFunctionCall","src":"5925:53:16"},"variableNames":[{"name":"value1","nativeSrc":"5915:6:16","nodeType":"YulIdentifier","src":"5915:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"5521:474:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5566:9:16","nodeType":"YulTypedName","src":"5566:9:16","type":""},{"name":"dataEnd","nativeSrc":"5577:7:16","nodeType":"YulTypedName","src":"5577:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5589:6:16","nodeType":"YulTypedName","src":"5589:6:16","type":""},{"name":"value1","nativeSrc":"5597:6:16","nodeType":"YulTypedName","src":"5597:6:16","type":""}],"src":"5521:474:16"},{"body":{"nativeSrc":"6043:48:16","nodeType":"YulBlock","src":"6043:48:16","statements":[{"nativeSrc":"6053:32:16","nodeType":"YulAssignment","src":"6053:32:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6078:5:16","nodeType":"YulIdentifier","src":"6078:5:16"}],"functionName":{"name":"iszero","nativeSrc":"6071:6:16","nodeType":"YulIdentifier","src":"6071:6:16"},"nativeSrc":"6071:13:16","nodeType":"YulFunctionCall","src":"6071:13:16"}],"functionName":{"name":"iszero","nativeSrc":"6064:6:16","nodeType":"YulIdentifier","src":"6064:6:16"},"nativeSrc":"6064:21:16","nodeType":"YulFunctionCall","src":"6064:21:16"},"variableNames":[{"name":"cleaned","nativeSrc":"6053:7:16","nodeType":"YulIdentifier","src":"6053:7:16"}]}]},"name":"cleanup_t_bool","nativeSrc":"6001:90:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6025:5:16","nodeType":"YulTypedName","src":"6025:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6035:7:16","nodeType":"YulTypedName","src":"6035:7:16","type":""}],"src":"6001:90:16"},{"body":{"nativeSrc":"6156:50:16","nodeType":"YulBlock","src":"6156:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6173:3:16","nodeType":"YulIdentifier","src":"6173:3:16"},{"arguments":[{"name":"value","nativeSrc":"6193:5:16","nodeType":"YulIdentifier","src":"6193:5:16"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"6178:14:16","nodeType":"YulIdentifier","src":"6178:14:16"},"nativeSrc":"6178:21:16","nodeType":"YulFunctionCall","src":"6178:21:16"}],"functionName":{"name":"mstore","nativeSrc":"6166:6:16","nodeType":"YulIdentifier","src":"6166:6:16"},"nativeSrc":"6166:34:16","nodeType":"YulFunctionCall","src":"6166:34:16"},"nativeSrc":"6166:34:16","nodeType":"YulExpressionStatement","src":"6166:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"6097:109:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6144:5:16","nodeType":"YulTypedName","src":"6144:5:16","type":""},{"name":"pos","nativeSrc":"6151:3:16","nodeType":"YulTypedName","src":"6151:3:16","type":""}],"src":"6097:109:16"},{"body":{"nativeSrc":"6304:118:16","nodeType":"YulBlock","src":"6304:118:16","statements":[{"nativeSrc":"6314:26:16","nodeType":"YulAssignment","src":"6314:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"6326:9:16","nodeType":"YulIdentifier","src":"6326:9:16"},{"kind":"number","nativeSrc":"6337:2:16","nodeType":"YulLiteral","src":"6337:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6322:3:16","nodeType":"YulIdentifier","src":"6322:3:16"},"nativeSrc":"6322:18:16","nodeType":"YulFunctionCall","src":"6322:18:16"},"variableNames":[{"name":"tail","nativeSrc":"6314:4:16","nodeType":"YulIdentifier","src":"6314:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6388:6:16","nodeType":"YulIdentifier","src":"6388:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"6401:9:16","nodeType":"YulIdentifier","src":"6401:9:16"},{"kind":"number","nativeSrc":"6412:1:16","nodeType":"YulLiteral","src":"6412:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6397:3:16","nodeType":"YulIdentifier","src":"6397:3:16"},"nativeSrc":"6397:17:16","nodeType":"YulFunctionCall","src":"6397:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"6350:37:16","nodeType":"YulIdentifier","src":"6350:37:16"},"nativeSrc":"6350:65:16","nodeType":"YulFunctionCall","src":"6350:65:16"},"nativeSrc":"6350:65:16","nodeType":"YulExpressionStatement","src":"6350:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"6212:210:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6276:9:16","nodeType":"YulTypedName","src":"6276:9:16","type":""},{"name":"value0","nativeSrc":"6288:6:16","nodeType":"YulTypedName","src":"6288:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6299:4:16","nodeType":"YulTypedName","src":"6299:4:16","type":""}],"src":"6212:210:16"},{"body":{"nativeSrc":"6521:561:16","nodeType":"YulBlock","src":"6521:561:16","statements":[{"body":{"nativeSrc":"6567:83:16","nodeType":"YulBlock","src":"6567:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6569:77:16","nodeType":"YulIdentifier","src":"6569:77:16"},"nativeSrc":"6569:79:16","nodeType":"YulFunctionCall","src":"6569:79:16"},"nativeSrc":"6569:79:16","nodeType":"YulExpressionStatement","src":"6569:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6542:7:16","nodeType":"YulIdentifier","src":"6542:7:16"},{"name":"headStart","nativeSrc":"6551:9:16","nodeType":"YulIdentifier","src":"6551:9:16"}],"functionName":{"name":"sub","nativeSrc":"6538:3:16","nodeType":"YulIdentifier","src":"6538:3:16"},"nativeSrc":"6538:23:16","nodeType":"YulFunctionCall","src":"6538:23:16"},{"kind":"number","nativeSrc":"6563:2:16","nodeType":"YulLiteral","src":"6563:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6534:3:16","nodeType":"YulIdentifier","src":"6534:3:16"},"nativeSrc":"6534:32:16","nodeType":"YulFunctionCall","src":"6534:32:16"},"nativeSrc":"6531:119:16","nodeType":"YulIf","src":"6531:119:16"},{"nativeSrc":"6660:117:16","nodeType":"YulBlock","src":"6660:117:16","statements":[{"nativeSrc":"6675:15:16","nodeType":"YulVariableDeclaration","src":"6675:15:16","value":{"kind":"number","nativeSrc":"6689:1:16","nodeType":"YulLiteral","src":"6689:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6679:6:16","nodeType":"YulTypedName","src":"6679:6:16","type":""}]},{"nativeSrc":"6704:63:16","nodeType":"YulAssignment","src":"6704:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6739:9:16","nodeType":"YulIdentifier","src":"6739:9:16"},{"name":"offset","nativeSrc":"6750:6:16","nodeType":"YulIdentifier","src":"6750:6:16"}],"functionName":{"name":"add","nativeSrc":"6735:3:16","nodeType":"YulIdentifier","src":"6735:3:16"},"nativeSrc":"6735:22:16","nodeType":"YulFunctionCall","src":"6735:22:16"},{"name":"dataEnd","nativeSrc":"6759:7:16","nodeType":"YulIdentifier","src":"6759:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6714:20:16","nodeType":"YulIdentifier","src":"6714:20:16"},"nativeSrc":"6714:53:16","nodeType":"YulFunctionCall","src":"6714:53:16"},"variableNames":[{"name":"value0","nativeSrc":"6704:6:16","nodeType":"YulIdentifier","src":"6704:6:16"}]}]},{"nativeSrc":"6787:288:16","nodeType":"YulBlock","src":"6787:288:16","statements":[{"nativeSrc":"6802:46:16","nodeType":"YulVariableDeclaration","src":"6802:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6833:9:16","nodeType":"YulIdentifier","src":"6833:9:16"},{"kind":"number","nativeSrc":"6844:2:16","nodeType":"YulLiteral","src":"6844:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6829:3:16","nodeType":"YulIdentifier","src":"6829:3:16"},"nativeSrc":"6829:18:16","nodeType":"YulFunctionCall","src":"6829:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"6816:12:16","nodeType":"YulIdentifier","src":"6816:12:16"},"nativeSrc":"6816:32:16","nodeType":"YulFunctionCall","src":"6816:32:16"},"variables":[{"name":"offset","nativeSrc":"6806:6:16","nodeType":"YulTypedName","src":"6806:6:16","type":""}]},{"body":{"nativeSrc":"6895:83:16","nodeType":"YulBlock","src":"6895:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"6897:77:16","nodeType":"YulIdentifier","src":"6897:77:16"},"nativeSrc":"6897:79:16","nodeType":"YulFunctionCall","src":"6897:79:16"},"nativeSrc":"6897:79:16","nodeType":"YulExpressionStatement","src":"6897:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6867:6:16","nodeType":"YulIdentifier","src":"6867:6:16"},{"kind":"number","nativeSrc":"6875:18:16","nodeType":"YulLiteral","src":"6875:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6864:2:16","nodeType":"YulIdentifier","src":"6864:2:16"},"nativeSrc":"6864:30:16","nodeType":"YulFunctionCall","src":"6864:30:16"},"nativeSrc":"6861:117:16","nodeType":"YulIf","src":"6861:117:16"},{"nativeSrc":"6992:73:16","nodeType":"YulAssignment","src":"6992:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7037:9:16","nodeType":"YulIdentifier","src":"7037:9:16"},{"name":"offset","nativeSrc":"7048:6:16","nodeType":"YulIdentifier","src":"7048:6:16"}],"functionName":{"name":"add","nativeSrc":"7033:3:16","nodeType":"YulIdentifier","src":"7033:3:16"},"nativeSrc":"7033:22:16","nodeType":"YulFunctionCall","src":"7033:22:16"},{"name":"dataEnd","nativeSrc":"7057:7:16","nodeType":"YulIdentifier","src":"7057:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"7002:30:16","nodeType":"YulIdentifier","src":"7002:30:16"},"nativeSrc":"7002:63:16","nodeType":"YulFunctionCall","src":"7002:63:16"},"variableNames":[{"name":"value1","nativeSrc":"6992:6:16","nodeType":"YulIdentifier","src":"6992:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nativeSrc":"6428:654:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6483:9:16","nodeType":"YulTypedName","src":"6483:9:16","type":""},{"name":"dataEnd","nativeSrc":"6494:7:16","nodeType":"YulTypedName","src":"6494:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6506:6:16","nodeType":"YulTypedName","src":"6506:6:16","type":""},{"name":"value1","nativeSrc":"6514:6:16","nodeType":"YulTypedName","src":"6514:6:16","type":""}],"src":"6428:654:16"},{"body":{"nativeSrc":"7141:51:16","nodeType":"YulBlock","src":"7141:51:16","statements":[{"nativeSrc":"7151:35:16","nodeType":"YulAssignment","src":"7151:35:16","value":{"arguments":[{"name":"value","nativeSrc":"7180:5:16","nodeType":"YulIdentifier","src":"7180:5:16"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"7162:17:16","nodeType":"YulIdentifier","src":"7162:17:16"},"nativeSrc":"7162:24:16","nodeType":"YulFunctionCall","src":"7162:24:16"},"variableNames":[{"name":"cleaned","nativeSrc":"7151:7:16","nodeType":"YulIdentifier","src":"7151:7:16"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"7088:104:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7123:5:16","nodeType":"YulTypedName","src":"7123:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7133:7:16","nodeType":"YulTypedName","src":"7133:7:16","type":""}],"src":"7088:104:16"},{"body":{"nativeSrc":"7249:87:16","nodeType":"YulBlock","src":"7249:87:16","statements":[{"body":{"nativeSrc":"7314:16:16","nodeType":"YulBlock","src":"7314:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7323:1:16","nodeType":"YulLiteral","src":"7323:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"7326:1:16","nodeType":"YulLiteral","src":"7326:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7316:6:16","nodeType":"YulIdentifier","src":"7316:6:16"},"nativeSrc":"7316:12:16","nodeType":"YulFunctionCall","src":"7316:12:16"},"nativeSrc":"7316:12:16","nodeType":"YulExpressionStatement","src":"7316:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7272:5:16","nodeType":"YulIdentifier","src":"7272:5:16"},{"arguments":[{"name":"value","nativeSrc":"7305:5:16","nodeType":"YulIdentifier","src":"7305:5:16"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"7279:25:16","nodeType":"YulIdentifier","src":"7279:25:16"},"nativeSrc":"7279:32:16","nodeType":"YulFunctionCall","src":"7279:32:16"}],"functionName":{"name":"eq","nativeSrc":"7269:2:16","nodeType":"YulIdentifier","src":"7269:2:16"},"nativeSrc":"7269:43:16","nodeType":"YulFunctionCall","src":"7269:43:16"}],"functionName":{"name":"iszero","nativeSrc":"7262:6:16","nodeType":"YulIdentifier","src":"7262:6:16"},"nativeSrc":"7262:51:16","nodeType":"YulFunctionCall","src":"7262:51:16"},"nativeSrc":"7259:71:16","nodeType":"YulIf","src":"7259:71:16"}]},"name":"validator_revert_t_address_payable","nativeSrc":"7198:138:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7242:5:16","nodeType":"YulTypedName","src":"7242:5:16","type":""}],"src":"7198:138:16"},{"body":{"nativeSrc":"7402:95:16","nodeType":"YulBlock","src":"7402:95:16","statements":[{"nativeSrc":"7412:29:16","nodeType":"YulAssignment","src":"7412:29:16","value":{"arguments":[{"name":"offset","nativeSrc":"7434:6:16","nodeType":"YulIdentifier","src":"7434:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"7421:12:16","nodeType":"YulIdentifier","src":"7421:12:16"},"nativeSrc":"7421:20:16","nodeType":"YulFunctionCall","src":"7421:20:16"},"variableNames":[{"name":"value","nativeSrc":"7412:5:16","nodeType":"YulIdentifier","src":"7412:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7485:5:16","nodeType":"YulIdentifier","src":"7485:5:16"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"7450:34:16","nodeType":"YulIdentifier","src":"7450:34:16"},"nativeSrc":"7450:41:16","nodeType":"YulFunctionCall","src":"7450:41:16"},"nativeSrc":"7450:41:16","nodeType":"YulExpressionStatement","src":"7450:41:16"}]},"name":"abi_decode_t_address_payable","nativeSrc":"7342:155:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7380:6:16","nodeType":"YulTypedName","src":"7380:6:16","type":""},{"name":"end","nativeSrc":"7388:3:16","nodeType":"YulTypedName","src":"7388:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7396:5:16","nodeType":"YulTypedName","src":"7396:5:16","type":""}],"src":"7342:155:16"},{"body":{"nativeSrc":"7569:241:16","nodeType":"YulBlock","src":"7569:241:16","statements":[{"body":{"nativeSrc":"7674:22:16","nodeType":"YulBlock","src":"7674:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7676:16:16","nodeType":"YulIdentifier","src":"7676:16:16"},"nativeSrc":"7676:18:16","nodeType":"YulFunctionCall","src":"7676:18:16"},"nativeSrc":"7676:18:16","nodeType":"YulExpressionStatement","src":"7676:18:16"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7646:6:16","nodeType":"YulIdentifier","src":"7646:6:16"},{"kind":"number","nativeSrc":"7654:18:16","nodeType":"YulLiteral","src":"7654:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7643:2:16","nodeType":"YulIdentifier","src":"7643:2:16"},"nativeSrc":"7643:30:16","nodeType":"YulFunctionCall","src":"7643:30:16"},"nativeSrc":"7640:56:16","nodeType":"YulIf","src":"7640:56:16"},{"nativeSrc":"7706:37:16","nodeType":"YulAssignment","src":"7706:37:16","value":{"arguments":[{"name":"length","nativeSrc":"7736:6:16","nodeType":"YulIdentifier","src":"7736:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7714:21:16","nodeType":"YulIdentifier","src":"7714:21:16"},"nativeSrc":"7714:29:16","nodeType":"YulFunctionCall","src":"7714:29:16"},"variableNames":[{"name":"size","nativeSrc":"7706:4:16","nodeType":"YulIdentifier","src":"7706:4:16"}]},{"nativeSrc":"7780:23:16","nodeType":"YulAssignment","src":"7780:23:16","value":{"arguments":[{"name":"size","nativeSrc":"7792:4:16","nodeType":"YulIdentifier","src":"7792:4:16"},{"kind":"number","nativeSrc":"7798:4:16","nodeType":"YulLiteral","src":"7798:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7788:3:16","nodeType":"YulIdentifier","src":"7788:3:16"},"nativeSrc":"7788:15:16","nodeType":"YulFunctionCall","src":"7788:15:16"},"variableNames":[{"name":"size","nativeSrc":"7780:4:16","nodeType":"YulIdentifier","src":"7780:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7503:307:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7553:6:16","nodeType":"YulTypedName","src":"7553:6:16","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7564:4:16","nodeType":"YulTypedName","src":"7564:4:16","type":""}],"src":"7503:307:16"},{"body":{"nativeSrc":"7899:340:16","nodeType":"YulBlock","src":"7899:340:16","statements":[{"nativeSrc":"7909:74:16","nodeType":"YulAssignment","src":"7909:74:16","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"7975:6:16","nodeType":"YulIdentifier","src":"7975:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7934:40:16","nodeType":"YulIdentifier","src":"7934:40:16"},"nativeSrc":"7934:48:16","nodeType":"YulFunctionCall","src":"7934:48:16"}],"functionName":{"name":"allocate_memory","nativeSrc":"7918:15:16","nodeType":"YulIdentifier","src":"7918:15:16"},"nativeSrc":"7918:65:16","nodeType":"YulFunctionCall","src":"7918:65:16"},"variableNames":[{"name":"array","nativeSrc":"7909:5:16","nodeType":"YulIdentifier","src":"7909:5:16"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"7999:5:16","nodeType":"YulIdentifier","src":"7999:5:16"},{"name":"length","nativeSrc":"8006:6:16","nodeType":"YulIdentifier","src":"8006:6:16"}],"functionName":{"name":"mstore","nativeSrc":"7992:6:16","nodeType":"YulIdentifier","src":"7992:6:16"},"nativeSrc":"7992:21:16","nodeType":"YulFunctionCall","src":"7992:21:16"},"nativeSrc":"7992:21:16","nodeType":"YulExpressionStatement","src":"7992:21:16"},{"nativeSrc":"8022:27:16","nodeType":"YulVariableDeclaration","src":"8022:27:16","value":{"arguments":[{"name":"array","nativeSrc":"8037:5:16","nodeType":"YulIdentifier","src":"8037:5:16"},{"kind":"number","nativeSrc":"8044:4:16","nodeType":"YulLiteral","src":"8044:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8033:3:16","nodeType":"YulIdentifier","src":"8033:3:16"},"nativeSrc":"8033:16:16","nodeType":"YulFunctionCall","src":"8033:16:16"},"variables":[{"name":"dst","nativeSrc":"8026:3:16","nodeType":"YulTypedName","src":"8026:3:16","type":""}]},{"body":{"nativeSrc":"8087:83:16","nodeType":"YulBlock","src":"8087:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8089:77:16","nodeType":"YulIdentifier","src":"8089:77:16"},"nativeSrc":"8089:79:16","nodeType":"YulFunctionCall","src":"8089:79:16"},"nativeSrc":"8089:79:16","nodeType":"YulExpressionStatement","src":"8089:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8068:3:16","nodeType":"YulIdentifier","src":"8068:3:16"},{"name":"length","nativeSrc":"8073:6:16","nodeType":"YulIdentifier","src":"8073:6:16"}],"functionName":{"name":"add","nativeSrc":"8064:3:16","nodeType":"YulIdentifier","src":"8064:3:16"},"nativeSrc":"8064:16:16","nodeType":"YulFunctionCall","src":"8064:16:16"},{"name":"end","nativeSrc":"8082:3:16","nodeType":"YulIdentifier","src":"8082:3:16"}],"functionName":{"name":"gt","nativeSrc":"8061:2:16","nodeType":"YulIdentifier","src":"8061:2:16"},"nativeSrc":"8061:25:16","nodeType":"YulFunctionCall","src":"8061:25:16"},"nativeSrc":"8058:112:16","nodeType":"YulIf","src":"8058:112:16"},{"expression":{"arguments":[{"name":"src","nativeSrc":"8216:3:16","nodeType":"YulIdentifier","src":"8216:3:16"},{"name":"dst","nativeSrc":"8221:3:16","nodeType":"YulIdentifier","src":"8221:3:16"},{"name":"length","nativeSrc":"8226:6:16","nodeType":"YulIdentifier","src":"8226:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8179:36:16","nodeType":"YulIdentifier","src":"8179:36:16"},"nativeSrc":"8179:54:16","nodeType":"YulFunctionCall","src":"8179:54:16"},"nativeSrc":"8179:54:16","nodeType":"YulExpressionStatement","src":"8179:54:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"7816:423:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7872:3:16","nodeType":"YulTypedName","src":"7872:3:16","type":""},{"name":"length","nativeSrc":"7877:6:16","nodeType":"YulTypedName","src":"7877:6:16","type":""},{"name":"end","nativeSrc":"7885:3:16","nodeType":"YulTypedName","src":"7885:3:16","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7893:5:16","nodeType":"YulTypedName","src":"7893:5:16","type":""}],"src":"7816:423:16"},{"body":{"nativeSrc":"8319:277:16","nodeType":"YulBlock","src":"8319:277:16","statements":[{"body":{"nativeSrc":"8368:83:16","nodeType":"YulBlock","src":"8368:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8370:77:16","nodeType":"YulIdentifier","src":"8370:77:16"},"nativeSrc":"8370:79:16","nodeType":"YulFunctionCall","src":"8370:79:16"},"nativeSrc":"8370:79:16","nodeType":"YulExpressionStatement","src":"8370:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8347:6:16","nodeType":"YulIdentifier","src":"8347:6:16"},{"kind":"number","nativeSrc":"8355:4:16","nodeType":"YulLiteral","src":"8355:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8343:3:16","nodeType":"YulIdentifier","src":"8343:3:16"},"nativeSrc":"8343:17:16","nodeType":"YulFunctionCall","src":"8343:17:16"},{"name":"end","nativeSrc":"8362:3:16","nodeType":"YulIdentifier","src":"8362:3:16"}],"functionName":{"name":"slt","nativeSrc":"8339:3:16","nodeType":"YulIdentifier","src":"8339:3:16"},"nativeSrc":"8339:27:16","nodeType":"YulFunctionCall","src":"8339:27:16"}],"functionName":{"name":"iszero","nativeSrc":"8332:6:16","nodeType":"YulIdentifier","src":"8332:6:16"},"nativeSrc":"8332:35:16","nodeType":"YulFunctionCall","src":"8332:35:16"},"nativeSrc":"8329:122:16","nodeType":"YulIf","src":"8329:122:16"},{"nativeSrc":"8460:34:16","nodeType":"YulVariableDeclaration","src":"8460:34:16","value":{"arguments":[{"name":"offset","nativeSrc":"8487:6:16","nodeType":"YulIdentifier","src":"8487:6:16"}],"functionName":{"name":"calldataload","nativeSrc":"8474:12:16","nodeType":"YulIdentifier","src":"8474:12:16"},"nativeSrc":"8474:20:16","nodeType":"YulFunctionCall","src":"8474:20:16"},"variables":[{"name":"length","nativeSrc":"8464:6:16","nodeType":"YulTypedName","src":"8464:6:16","type":""}]},{"nativeSrc":"8503:87:16","nodeType":"YulAssignment","src":"8503:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8563:6:16","nodeType":"YulIdentifier","src":"8563:6:16"},{"kind":"number","nativeSrc":"8571:4:16","nodeType":"YulLiteral","src":"8571:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8559:3:16","nodeType":"YulIdentifier","src":"8559:3:16"},"nativeSrc":"8559:17:16","nodeType":"YulFunctionCall","src":"8559:17:16"},{"name":"length","nativeSrc":"8578:6:16","nodeType":"YulIdentifier","src":"8578:6:16"},{"name":"end","nativeSrc":"8586:3:16","nodeType":"YulIdentifier","src":"8586:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8512:46:16","nodeType":"YulIdentifier","src":"8512:46:16"},"nativeSrc":"8512:78:16","nodeType":"YulFunctionCall","src":"8512:78:16"},"variableNames":[{"name":"array","nativeSrc":"8503:5:16","nodeType":"YulIdentifier","src":"8503:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8258:338:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8297:6:16","nodeType":"YulTypedName","src":"8297:6:16","type":""},{"name":"end","nativeSrc":"8305:3:16","nodeType":"YulTypedName","src":"8305:3:16","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8313:5:16","nodeType":"YulTypedName","src":"8313:5:16","type":""}],"src":"8258:338:16"},{"body":{"nativeSrc":"8753:954:16","nodeType":"YulBlock","src":"8753:954:16","statements":[{"body":{"nativeSrc":"8800:83:16","nodeType":"YulBlock","src":"8800:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8802:77:16","nodeType":"YulIdentifier","src":"8802:77:16"},"nativeSrc":"8802:79:16","nodeType":"YulFunctionCall","src":"8802:79:16"},"nativeSrc":"8802:79:16","nodeType":"YulExpressionStatement","src":"8802:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8774:7:16","nodeType":"YulIdentifier","src":"8774:7:16"},{"name":"headStart","nativeSrc":"8783:9:16","nodeType":"YulIdentifier","src":"8783:9:16"}],"functionName":{"name":"sub","nativeSrc":"8770:3:16","nodeType":"YulIdentifier","src":"8770:3:16"},"nativeSrc":"8770:23:16","nodeType":"YulFunctionCall","src":"8770:23:16"},{"kind":"number","nativeSrc":"8795:3:16","nodeType":"YulLiteral","src":"8795:3:16","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"8766:3:16","nodeType":"YulIdentifier","src":"8766:3:16"},"nativeSrc":"8766:33:16","nodeType":"YulFunctionCall","src":"8766:33:16"},"nativeSrc":"8763:120:16","nodeType":"YulIf","src":"8763:120:16"},{"nativeSrc":"8893:117:16","nodeType":"YulBlock","src":"8893:117:16","statements":[{"nativeSrc":"8908:15:16","nodeType":"YulVariableDeclaration","src":"8908:15:16","value":{"kind":"number","nativeSrc":"8922:1:16","nodeType":"YulLiteral","src":"8922:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8912:6:16","nodeType":"YulTypedName","src":"8912:6:16","type":""}]},{"nativeSrc":"8937:63:16","nodeType":"YulAssignment","src":"8937:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8972:9:16","nodeType":"YulIdentifier","src":"8972:9:16"},{"name":"offset","nativeSrc":"8983:6:16","nodeType":"YulIdentifier","src":"8983:6:16"}],"functionName":{"name":"add","nativeSrc":"8968:3:16","nodeType":"YulIdentifier","src":"8968:3:16"},"nativeSrc":"8968:22:16","nodeType":"YulFunctionCall","src":"8968:22:16"},{"name":"dataEnd","nativeSrc":"8992:7:16","nodeType":"YulIdentifier","src":"8992:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8947:20:16","nodeType":"YulIdentifier","src":"8947:20:16"},"nativeSrc":"8947:53:16","nodeType":"YulFunctionCall","src":"8947:53:16"},"variableNames":[{"name":"value0","nativeSrc":"8937:6:16","nodeType":"YulIdentifier","src":"8937:6:16"}]}]},{"nativeSrc":"9020:118:16","nodeType":"YulBlock","src":"9020:118:16","statements":[{"nativeSrc":"9035:16:16","nodeType":"YulVariableDeclaration","src":"9035:16:16","value":{"kind":"number","nativeSrc":"9049:2:16","nodeType":"YulLiteral","src":"9049:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9039:6:16","nodeType":"YulTypedName","src":"9039:6:16","type":""}]},{"nativeSrc":"9065:63:16","nodeType":"YulAssignment","src":"9065:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9100:9:16","nodeType":"YulIdentifier","src":"9100:9:16"},{"name":"offset","nativeSrc":"9111:6:16","nodeType":"YulIdentifier","src":"9111:6:16"}],"functionName":{"name":"add","nativeSrc":"9096:3:16","nodeType":"YulIdentifier","src":"9096:3:16"},"nativeSrc":"9096:22:16","nodeType":"YulFunctionCall","src":"9096:22:16"},{"name":"dataEnd","nativeSrc":"9120:7:16","nodeType":"YulIdentifier","src":"9120:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9075:20:16","nodeType":"YulIdentifier","src":"9075:20:16"},"nativeSrc":"9075:53:16","nodeType":"YulFunctionCall","src":"9075:53:16"},"variableNames":[{"name":"value1","nativeSrc":"9065:6:16","nodeType":"YulIdentifier","src":"9065:6:16"}]}]},{"nativeSrc":"9148:126:16","nodeType":"YulBlock","src":"9148:126:16","statements":[{"nativeSrc":"9163:16:16","nodeType":"YulVariableDeclaration","src":"9163:16:16","value":{"kind":"number","nativeSrc":"9177:2:16","nodeType":"YulLiteral","src":"9177:2:16","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9167:6:16","nodeType":"YulTypedName","src":"9167:6:16","type":""}]},{"nativeSrc":"9193:71:16","nodeType":"YulAssignment","src":"9193:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9236:9:16","nodeType":"YulIdentifier","src":"9236:9:16"},{"name":"offset","nativeSrc":"9247:6:16","nodeType":"YulIdentifier","src":"9247:6:16"}],"functionName":{"name":"add","nativeSrc":"9232:3:16","nodeType":"YulIdentifier","src":"9232:3:16"},"nativeSrc":"9232:22:16","nodeType":"YulFunctionCall","src":"9232:22:16"},{"name":"dataEnd","nativeSrc":"9256:7:16","nodeType":"YulIdentifier","src":"9256:7:16"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"9203:28:16","nodeType":"YulIdentifier","src":"9203:28:16"},"nativeSrc":"9203:61:16","nodeType":"YulFunctionCall","src":"9203:61:16"},"variableNames":[{"name":"value2","nativeSrc":"9193:6:16","nodeType":"YulIdentifier","src":"9193:6:16"}]}]},{"nativeSrc":"9284:118:16","nodeType":"YulBlock","src":"9284:118:16","statements":[{"nativeSrc":"9299:16:16","nodeType":"YulVariableDeclaration","src":"9299:16:16","value":{"kind":"number","nativeSrc":"9313:2:16","nodeType":"YulLiteral","src":"9313:2:16","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"9303:6:16","nodeType":"YulTypedName","src":"9303:6:16","type":""}]},{"nativeSrc":"9329:63:16","nodeType":"YulAssignment","src":"9329:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9364:9:16","nodeType":"YulIdentifier","src":"9364:9:16"},{"name":"offset","nativeSrc":"9375:6:16","nodeType":"YulIdentifier","src":"9375:6:16"}],"functionName":{"name":"add","nativeSrc":"9360:3:16","nodeType":"YulIdentifier","src":"9360:3:16"},"nativeSrc":"9360:22:16","nodeType":"YulFunctionCall","src":"9360:22:16"},{"name":"dataEnd","nativeSrc":"9384:7:16","nodeType":"YulIdentifier","src":"9384:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9339:20:16","nodeType":"YulIdentifier","src":"9339:20:16"},"nativeSrc":"9339:53:16","nodeType":"YulFunctionCall","src":"9339:53:16"},"variableNames":[{"name":"value3","nativeSrc":"9329:6:16","nodeType":"YulIdentifier","src":"9329:6:16"}]}]},{"nativeSrc":"9412:288:16","nodeType":"YulBlock","src":"9412:288:16","statements":[{"nativeSrc":"9427:47:16","nodeType":"YulVariableDeclaration","src":"9427:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9458:9:16","nodeType":"YulIdentifier","src":"9458:9:16"},{"kind":"number","nativeSrc":"9469:3:16","nodeType":"YulLiteral","src":"9469:3:16","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9454:3:16","nodeType":"YulIdentifier","src":"9454:3:16"},"nativeSrc":"9454:19:16","nodeType":"YulFunctionCall","src":"9454:19:16"}],"functionName":{"name":"calldataload","nativeSrc":"9441:12:16","nodeType":"YulIdentifier","src":"9441:12:16"},"nativeSrc":"9441:33:16","nodeType":"YulFunctionCall","src":"9441:33:16"},"variables":[{"name":"offset","nativeSrc":"9431:6:16","nodeType":"YulTypedName","src":"9431:6:16","type":""}]},{"body":{"nativeSrc":"9521:83:16","nodeType":"YulBlock","src":"9521:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9523:77:16","nodeType":"YulIdentifier","src":"9523:77:16"},"nativeSrc":"9523:79:16","nodeType":"YulFunctionCall","src":"9523:79:16"},"nativeSrc":"9523:79:16","nodeType":"YulExpressionStatement","src":"9523:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9493:6:16","nodeType":"YulIdentifier","src":"9493:6:16"},{"kind":"number","nativeSrc":"9501:18:16","nodeType":"YulLiteral","src":"9501:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9490:2:16","nodeType":"YulIdentifier","src":"9490:2:16"},"nativeSrc":"9490:30:16","nodeType":"YulFunctionCall","src":"9490:30:16"},"nativeSrc":"9487:117:16","nodeType":"YulIf","src":"9487:117:16"},{"nativeSrc":"9618:72:16","nodeType":"YulAssignment","src":"9618:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9662:9:16","nodeType":"YulIdentifier","src":"9662:9:16"},{"name":"offset","nativeSrc":"9673:6:16","nodeType":"YulIdentifier","src":"9673:6:16"}],"functionName":{"name":"add","nativeSrc":"9658:3:16","nodeType":"YulIdentifier","src":"9658:3:16"},"nativeSrc":"9658:22:16","nodeType":"YulFunctionCall","src":"9658:22:16"},{"name":"dataEnd","nativeSrc":"9682:7:16","nodeType":"YulIdentifier","src":"9682:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"9628:29:16","nodeType":"YulIdentifier","src":"9628:29:16"},"nativeSrc":"9628:62:16","nodeType":"YulFunctionCall","src":"9628:62:16"},"variableNames":[{"name":"value4","nativeSrc":"9618:6:16","nodeType":"YulIdentifier","src":"9618:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_address_payablet_addresst_bytes_memory_ptr","nativeSrc":"8602:1105:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8691:9:16","nodeType":"YulTypedName","src":"8691:9:16","type":""},{"name":"dataEnd","nativeSrc":"8702:7:16","nodeType":"YulTypedName","src":"8702:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8714:6:16","nodeType":"YulTypedName","src":"8714:6:16","type":""},{"name":"value1","nativeSrc":"8722:6:16","nodeType":"YulTypedName","src":"8722:6:16","type":""},{"name":"value2","nativeSrc":"8730:6:16","nodeType":"YulTypedName","src":"8730:6:16","type":""},{"name":"value3","nativeSrc":"8738:6:16","nodeType":"YulTypedName","src":"8738:6:16","type":""},{"name":"value4","nativeSrc":"8746:6:16","nodeType":"YulTypedName","src":"8746:6:16","type":""}],"src":"8602:1105:16"},{"body":{"nativeSrc":"9779:263:16","nodeType":"YulBlock","src":"9779:263:16","statements":[{"body":{"nativeSrc":"9825:83:16","nodeType":"YulBlock","src":"9825:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9827:77:16","nodeType":"YulIdentifier","src":"9827:77:16"},"nativeSrc":"9827:79:16","nodeType":"YulFunctionCall","src":"9827:79:16"},"nativeSrc":"9827:79:16","nodeType":"YulExpressionStatement","src":"9827:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9800:7:16","nodeType":"YulIdentifier","src":"9800:7:16"},{"name":"headStart","nativeSrc":"9809:9:16","nodeType":"YulIdentifier","src":"9809:9:16"}],"functionName":{"name":"sub","nativeSrc":"9796:3:16","nodeType":"YulIdentifier","src":"9796:3:16"},"nativeSrc":"9796:23:16","nodeType":"YulFunctionCall","src":"9796:23:16"},{"kind":"number","nativeSrc":"9821:2:16","nodeType":"YulLiteral","src":"9821:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9792:3:16","nodeType":"YulIdentifier","src":"9792:3:16"},"nativeSrc":"9792:32:16","nodeType":"YulFunctionCall","src":"9792:32:16"},"nativeSrc":"9789:119:16","nodeType":"YulIf","src":"9789:119:16"},{"nativeSrc":"9918:117:16","nodeType":"YulBlock","src":"9918:117:16","statements":[{"nativeSrc":"9933:15:16","nodeType":"YulVariableDeclaration","src":"9933:15:16","value":{"kind":"number","nativeSrc":"9947:1:16","nodeType":"YulLiteral","src":"9947:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9937:6:16","nodeType":"YulTypedName","src":"9937:6:16","type":""}]},{"nativeSrc":"9962:63:16","nodeType":"YulAssignment","src":"9962:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9997:9:16","nodeType":"YulIdentifier","src":"9997:9:16"},{"name":"offset","nativeSrc":"10008:6:16","nodeType":"YulIdentifier","src":"10008:6:16"}],"functionName":{"name":"add","nativeSrc":"9993:3:16","nodeType":"YulIdentifier","src":"9993:3:16"},"nativeSrc":"9993:22:16","nodeType":"YulFunctionCall","src":"9993:22:16"},{"name":"dataEnd","nativeSrc":"10017:7:16","nodeType":"YulIdentifier","src":"10017:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9972:20:16","nodeType":"YulIdentifier","src":"9972:20:16"},"nativeSrc":"9972:53:16","nodeType":"YulFunctionCall","src":"9972:53:16"},"variableNames":[{"name":"value0","nativeSrc":"9962:6:16","nodeType":"YulIdentifier","src":"9962:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"9713:329:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9749:9:16","nodeType":"YulTypedName","src":"9749:9:16","type":""},{"name":"dataEnd","nativeSrc":"9760:7:16","nodeType":"YulTypedName","src":"9760:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9772:6:16","nodeType":"YulTypedName","src":"9772:6:16","type":""}],"src":"9713:329:16"},{"body":{"nativeSrc":"10113:53:16","nodeType":"YulBlock","src":"10113:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10130:3:16","nodeType":"YulIdentifier","src":"10130:3:16"},{"arguments":[{"name":"value","nativeSrc":"10153:5:16","nodeType":"YulIdentifier","src":"10153:5:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10135:17:16","nodeType":"YulIdentifier","src":"10135:17:16"},"nativeSrc":"10135:24:16","nodeType":"YulFunctionCall","src":"10135:24:16"}],"functionName":{"name":"mstore","nativeSrc":"10123:6:16","nodeType":"YulIdentifier","src":"10123:6:16"},"nativeSrc":"10123:37:16","nodeType":"YulFunctionCall","src":"10123:37:16"},"nativeSrc":"10123:37:16","nodeType":"YulExpressionStatement","src":"10123:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10048:118:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10101:5:16","nodeType":"YulTypedName","src":"10101:5:16","type":""},{"name":"pos","nativeSrc":"10108:3:16","nodeType":"YulTypedName","src":"10108:3:16","type":""}],"src":"10048:118:16"},{"body":{"nativeSrc":"10270:124:16","nodeType":"YulBlock","src":"10270:124:16","statements":[{"nativeSrc":"10280:26:16","nodeType":"YulAssignment","src":"10280:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"10292:9:16","nodeType":"YulIdentifier","src":"10292:9:16"},{"kind":"number","nativeSrc":"10303:2:16","nodeType":"YulLiteral","src":"10303:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10288:3:16","nodeType":"YulIdentifier","src":"10288:3:16"},"nativeSrc":"10288:18:16","nodeType":"YulFunctionCall","src":"10288:18:16"},"variableNames":[{"name":"tail","nativeSrc":"10280:4:16","nodeType":"YulIdentifier","src":"10280:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10360:6:16","nodeType":"YulIdentifier","src":"10360:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"10373:9:16","nodeType":"YulIdentifier","src":"10373:9:16"},{"kind":"number","nativeSrc":"10384:1:16","nodeType":"YulLiteral","src":"10384:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10369:3:16","nodeType":"YulIdentifier","src":"10369:3:16"},"nativeSrc":"10369:17:16","nodeType":"YulFunctionCall","src":"10369:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10316:43:16","nodeType":"YulIdentifier","src":"10316:43:16"},"nativeSrc":"10316:71:16","nodeType":"YulFunctionCall","src":"10316:71:16"},"nativeSrc":"10316:71:16","nodeType":"YulExpressionStatement","src":"10316:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"10172:222:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10242:9:16","nodeType":"YulTypedName","src":"10242:9:16","type":""},{"name":"value0","nativeSrc":"10254:6:16","nodeType":"YulTypedName","src":"10254:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10265:4:16","nodeType":"YulTypedName","src":"10265:4:16","type":""}],"src":"10172:222:16"},{"body":{"nativeSrc":"10474:271:16","nodeType":"YulBlock","src":"10474:271:16","statements":[{"body":{"nativeSrc":"10520:83:16","nodeType":"YulBlock","src":"10520:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10522:77:16","nodeType":"YulIdentifier","src":"10522:77:16"},"nativeSrc":"10522:79:16","nodeType":"YulFunctionCall","src":"10522:79:16"},"nativeSrc":"10522:79:16","nodeType":"YulExpressionStatement","src":"10522:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10495:7:16","nodeType":"YulIdentifier","src":"10495:7:16"},{"name":"headStart","nativeSrc":"10504:9:16","nodeType":"YulIdentifier","src":"10504:9:16"}],"functionName":{"name":"sub","nativeSrc":"10491:3:16","nodeType":"YulIdentifier","src":"10491:3:16"},"nativeSrc":"10491:23:16","nodeType":"YulFunctionCall","src":"10491:23:16"},{"kind":"number","nativeSrc":"10516:2:16","nodeType":"YulLiteral","src":"10516:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10487:3:16","nodeType":"YulIdentifier","src":"10487:3:16"},"nativeSrc":"10487:32:16","nodeType":"YulFunctionCall","src":"10487:32:16"},"nativeSrc":"10484:119:16","nodeType":"YulIf","src":"10484:119:16"},{"nativeSrc":"10613:125:16","nodeType":"YulBlock","src":"10613:125:16","statements":[{"nativeSrc":"10628:15:16","nodeType":"YulVariableDeclaration","src":"10628:15:16","value":{"kind":"number","nativeSrc":"10642:1:16","nodeType":"YulLiteral","src":"10642:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10632:6:16","nodeType":"YulTypedName","src":"10632:6:16","type":""}]},{"nativeSrc":"10657:71:16","nodeType":"YulAssignment","src":"10657:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10700:9:16","nodeType":"YulIdentifier","src":"10700:9:16"},{"name":"offset","nativeSrc":"10711:6:16","nodeType":"YulIdentifier","src":"10711:6:16"}],"functionName":{"name":"add","nativeSrc":"10696:3:16","nodeType":"YulIdentifier","src":"10696:3:16"},"nativeSrc":"10696:22:16","nodeType":"YulFunctionCall","src":"10696:22:16"},{"name":"dataEnd","nativeSrc":"10720:7:16","nodeType":"YulIdentifier","src":"10720:7:16"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"10667:28:16","nodeType":"YulIdentifier","src":"10667:28:16"},"nativeSrc":"10667:61:16","nodeType":"YulFunctionCall","src":"10667:61:16"},"variableNames":[{"name":"value0","nativeSrc":"10657:6:16","nodeType":"YulIdentifier","src":"10657:6:16"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nativeSrc":"10400:345:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10444:9:16","nodeType":"YulTypedName","src":"10444:9:16","type":""},{"name":"dataEnd","nativeSrc":"10455:7:16","nodeType":"YulTypedName","src":"10455:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10467:6:16","nodeType":"YulTypedName","src":"10467:6:16","type":""}],"src":"10400:345:16"},{"body":{"nativeSrc":"10851:519:16","nodeType":"YulBlock","src":"10851:519:16","statements":[{"body":{"nativeSrc":"10897:83:16","nodeType":"YulBlock","src":"10897:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10899:77:16","nodeType":"YulIdentifier","src":"10899:77:16"},"nativeSrc":"10899:79:16","nodeType":"YulFunctionCall","src":"10899:79:16"},"nativeSrc":"10899:79:16","nodeType":"YulExpressionStatement","src":"10899:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10872:7:16","nodeType":"YulIdentifier","src":"10872:7:16"},{"name":"headStart","nativeSrc":"10881:9:16","nodeType":"YulIdentifier","src":"10881:9:16"}],"functionName":{"name":"sub","nativeSrc":"10868:3:16","nodeType":"YulIdentifier","src":"10868:3:16"},"nativeSrc":"10868:23:16","nodeType":"YulFunctionCall","src":"10868:23:16"},{"kind":"number","nativeSrc":"10893:2:16","nodeType":"YulLiteral","src":"10893:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"10864:3:16","nodeType":"YulIdentifier","src":"10864:3:16"},"nativeSrc":"10864:32:16","nodeType":"YulFunctionCall","src":"10864:32:16"},"nativeSrc":"10861:119:16","nodeType":"YulIf","src":"10861:119:16"},{"nativeSrc":"10990:117:16","nodeType":"YulBlock","src":"10990:117:16","statements":[{"nativeSrc":"11005:15:16","nodeType":"YulVariableDeclaration","src":"11005:15:16","value":{"kind":"number","nativeSrc":"11019:1:16","nodeType":"YulLiteral","src":"11019:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11009:6:16","nodeType":"YulTypedName","src":"11009:6:16","type":""}]},{"nativeSrc":"11034:63:16","nodeType":"YulAssignment","src":"11034:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11069:9:16","nodeType":"YulIdentifier","src":"11069:9:16"},{"name":"offset","nativeSrc":"11080:6:16","nodeType":"YulIdentifier","src":"11080:6:16"}],"functionName":{"name":"add","nativeSrc":"11065:3:16","nodeType":"YulIdentifier","src":"11065:3:16"},"nativeSrc":"11065:22:16","nodeType":"YulFunctionCall","src":"11065:22:16"},{"name":"dataEnd","nativeSrc":"11089:7:16","nodeType":"YulIdentifier","src":"11089:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11044:20:16","nodeType":"YulIdentifier","src":"11044:20:16"},"nativeSrc":"11044:53:16","nodeType":"YulFunctionCall","src":"11044:53:16"},"variableNames":[{"name":"value0","nativeSrc":"11034:6:16","nodeType":"YulIdentifier","src":"11034:6:16"}]}]},{"nativeSrc":"11117:118:16","nodeType":"YulBlock","src":"11117:118:16","statements":[{"nativeSrc":"11132:16:16","nodeType":"YulVariableDeclaration","src":"11132:16:16","value":{"kind":"number","nativeSrc":"11146:2:16","nodeType":"YulLiteral","src":"11146:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11136:6:16","nodeType":"YulTypedName","src":"11136:6:16","type":""}]},{"nativeSrc":"11162:63:16","nodeType":"YulAssignment","src":"11162:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11197:9:16","nodeType":"YulIdentifier","src":"11197:9:16"},{"name":"offset","nativeSrc":"11208:6:16","nodeType":"YulIdentifier","src":"11208:6:16"}],"functionName":{"name":"add","nativeSrc":"11193:3:16","nodeType":"YulIdentifier","src":"11193:3:16"},"nativeSrc":"11193:22:16","nodeType":"YulFunctionCall","src":"11193:22:16"},{"name":"dataEnd","nativeSrc":"11217:7:16","nodeType":"YulIdentifier","src":"11217:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11172:20:16","nodeType":"YulIdentifier","src":"11172:20:16"},"nativeSrc":"11172:53:16","nodeType":"YulFunctionCall","src":"11172:53:16"},"variableNames":[{"name":"value1","nativeSrc":"11162:6:16","nodeType":"YulIdentifier","src":"11162:6:16"}]}]},{"nativeSrc":"11245:118:16","nodeType":"YulBlock","src":"11245:118:16","statements":[{"nativeSrc":"11260:16:16","nodeType":"YulVariableDeclaration","src":"11260:16:16","value":{"kind":"number","nativeSrc":"11274:2:16","nodeType":"YulLiteral","src":"11274:2:16","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"11264:6:16","nodeType":"YulTypedName","src":"11264:6:16","type":""}]},{"nativeSrc":"11290:63:16","nodeType":"YulAssignment","src":"11290:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11325:9:16","nodeType":"YulIdentifier","src":"11325:9:16"},{"name":"offset","nativeSrc":"11336:6:16","nodeType":"YulIdentifier","src":"11336:6:16"}],"functionName":{"name":"add","nativeSrc":"11321:3:16","nodeType":"YulIdentifier","src":"11321:3:16"},"nativeSrc":"11321:22:16","nodeType":"YulFunctionCall","src":"11321:22:16"},{"name":"dataEnd","nativeSrc":"11345:7:16","nodeType":"YulIdentifier","src":"11345:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11300:20:16","nodeType":"YulIdentifier","src":"11300:20:16"},"nativeSrc":"11300:53:16","nodeType":"YulFunctionCall","src":"11300:53:16"},"variableNames":[{"name":"value2","nativeSrc":"11290:6:16","nodeType":"YulIdentifier","src":"11290:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"10751:619:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10805:9:16","nodeType":"YulTypedName","src":"10805:9:16","type":""},{"name":"dataEnd","nativeSrc":"10816:7:16","nodeType":"YulTypedName","src":"10816:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10828:6:16","nodeType":"YulTypedName","src":"10828:6:16","type":""},{"name":"value1","nativeSrc":"10836:6:16","nodeType":"YulTypedName","src":"10836:6:16","type":""},{"name":"value2","nativeSrc":"10844:6:16","nodeType":"YulTypedName","src":"10844:6:16","type":""}],"src":"10751:619:16"},{"body":{"nativeSrc":"11523:1158:16","nodeType":"YulBlock","src":"11523:1158:16","statements":[{"body":{"nativeSrc":"11570:83:16","nodeType":"YulBlock","src":"11570:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11572:77:16","nodeType":"YulIdentifier","src":"11572:77:16"},"nativeSrc":"11572:79:16","nodeType":"YulFunctionCall","src":"11572:79:16"},"nativeSrc":"11572:79:16","nodeType":"YulExpressionStatement","src":"11572:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11544:7:16","nodeType":"YulIdentifier","src":"11544:7:16"},{"name":"headStart","nativeSrc":"11553:9:16","nodeType":"YulIdentifier","src":"11553:9:16"}],"functionName":{"name":"sub","nativeSrc":"11540:3:16","nodeType":"YulIdentifier","src":"11540:3:16"},"nativeSrc":"11540:23:16","nodeType":"YulFunctionCall","src":"11540:23:16"},{"kind":"number","nativeSrc":"11565:3:16","nodeType":"YulLiteral","src":"11565:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"11536:3:16","nodeType":"YulIdentifier","src":"11536:3:16"},"nativeSrc":"11536:33:16","nodeType":"YulFunctionCall","src":"11536:33:16"},"nativeSrc":"11533:120:16","nodeType":"YulIf","src":"11533:120:16"},{"nativeSrc":"11663:287:16","nodeType":"YulBlock","src":"11663:287:16","statements":[{"nativeSrc":"11678:45:16","nodeType":"YulVariableDeclaration","src":"11678:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11709:9:16","nodeType":"YulIdentifier","src":"11709:9:16"},{"kind":"number","nativeSrc":"11720:1:16","nodeType":"YulLiteral","src":"11720:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11705:3:16","nodeType":"YulIdentifier","src":"11705:3:16"},"nativeSrc":"11705:17:16","nodeType":"YulFunctionCall","src":"11705:17:16"}],"functionName":{"name":"calldataload","nativeSrc":"11692:12:16","nodeType":"YulIdentifier","src":"11692:12:16"},"nativeSrc":"11692:31:16","nodeType":"YulFunctionCall","src":"11692:31:16"},"variables":[{"name":"offset","nativeSrc":"11682:6:16","nodeType":"YulTypedName","src":"11682:6:16","type":""}]},{"body":{"nativeSrc":"11770:83:16","nodeType":"YulBlock","src":"11770:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11772:77:16","nodeType":"YulIdentifier","src":"11772:77:16"},"nativeSrc":"11772:79:16","nodeType":"YulFunctionCall","src":"11772:79:16"},"nativeSrc":"11772:79:16","nodeType":"YulExpressionStatement","src":"11772:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11742:6:16","nodeType":"YulIdentifier","src":"11742:6:16"},{"kind":"number","nativeSrc":"11750:18:16","nodeType":"YulLiteral","src":"11750:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11739:2:16","nodeType":"YulIdentifier","src":"11739:2:16"},"nativeSrc":"11739:30:16","nodeType":"YulFunctionCall","src":"11739:30:16"},"nativeSrc":"11736:117:16","nodeType":"YulIf","src":"11736:117:16"},{"nativeSrc":"11867:73:16","nodeType":"YulAssignment","src":"11867:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11912:9:16","nodeType":"YulIdentifier","src":"11912:9:16"},{"name":"offset","nativeSrc":"11923:6:16","nodeType":"YulIdentifier","src":"11923:6:16"}],"functionName":{"name":"add","nativeSrc":"11908:3:16","nodeType":"YulIdentifier","src":"11908:3:16"},"nativeSrc":"11908:22:16","nodeType":"YulFunctionCall","src":"11908:22:16"},{"name":"dataEnd","nativeSrc":"11932:7:16","nodeType":"YulIdentifier","src":"11932:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"11877:30:16","nodeType":"YulIdentifier","src":"11877:30:16"},"nativeSrc":"11877:63:16","nodeType":"YulFunctionCall","src":"11877:63:16"},"variableNames":[{"name":"value0","nativeSrc":"11867:6:16","nodeType":"YulIdentifier","src":"11867:6:16"}]}]},{"nativeSrc":"11960:288:16","nodeType":"YulBlock","src":"11960:288:16","statements":[{"nativeSrc":"11975:46:16","nodeType":"YulVariableDeclaration","src":"11975:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12006:9:16","nodeType":"YulIdentifier","src":"12006:9:16"},{"kind":"number","nativeSrc":"12017:2:16","nodeType":"YulLiteral","src":"12017:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12002:3:16","nodeType":"YulIdentifier","src":"12002:3:16"},"nativeSrc":"12002:18:16","nodeType":"YulFunctionCall","src":"12002:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"11989:12:16","nodeType":"YulIdentifier","src":"11989:12:16"},"nativeSrc":"11989:32:16","nodeType":"YulFunctionCall","src":"11989:32:16"},"variables":[{"name":"offset","nativeSrc":"11979:6:16","nodeType":"YulTypedName","src":"11979:6:16","type":""}]},{"body":{"nativeSrc":"12068:83:16","nodeType":"YulBlock","src":"12068:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12070:77:16","nodeType":"YulIdentifier","src":"12070:77:16"},"nativeSrc":"12070:79:16","nodeType":"YulFunctionCall","src":"12070:79:16"},"nativeSrc":"12070:79:16","nodeType":"YulExpressionStatement","src":"12070:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12040:6:16","nodeType":"YulIdentifier","src":"12040:6:16"},{"kind":"number","nativeSrc":"12048:18:16","nodeType":"YulLiteral","src":"12048:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12037:2:16","nodeType":"YulIdentifier","src":"12037:2:16"},"nativeSrc":"12037:30:16","nodeType":"YulFunctionCall","src":"12037:30:16"},"nativeSrc":"12034:117:16","nodeType":"YulIf","src":"12034:117:16"},{"nativeSrc":"12165:73:16","nodeType":"YulAssignment","src":"12165:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12210:9:16","nodeType":"YulIdentifier","src":"12210:9:16"},{"name":"offset","nativeSrc":"12221:6:16","nodeType":"YulIdentifier","src":"12221:6:16"}],"functionName":{"name":"add","nativeSrc":"12206:3:16","nodeType":"YulIdentifier","src":"12206:3:16"},"nativeSrc":"12206:22:16","nodeType":"YulFunctionCall","src":"12206:22:16"},{"name":"dataEnd","nativeSrc":"12230:7:16","nodeType":"YulIdentifier","src":"12230:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"12175:30:16","nodeType":"YulIdentifier","src":"12175:30:16"},"nativeSrc":"12175:63:16","nodeType":"YulFunctionCall","src":"12175:63:16"},"variableNames":[{"name":"value1","nativeSrc":"12165:6:16","nodeType":"YulIdentifier","src":"12165:6:16"}]}]},{"nativeSrc":"12258:288:16","nodeType":"YulBlock","src":"12258:288:16","statements":[{"nativeSrc":"12273:46:16","nodeType":"YulVariableDeclaration","src":"12273:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12304:9:16","nodeType":"YulIdentifier","src":"12304:9:16"},{"kind":"number","nativeSrc":"12315:2:16","nodeType":"YulLiteral","src":"12315:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12300:3:16","nodeType":"YulIdentifier","src":"12300:3:16"},"nativeSrc":"12300:18:16","nodeType":"YulFunctionCall","src":"12300:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"12287:12:16","nodeType":"YulIdentifier","src":"12287:12:16"},"nativeSrc":"12287:32:16","nodeType":"YulFunctionCall","src":"12287:32:16"},"variables":[{"name":"offset","nativeSrc":"12277:6:16","nodeType":"YulTypedName","src":"12277:6:16","type":""}]},{"body":{"nativeSrc":"12366:83:16","nodeType":"YulBlock","src":"12366:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12368:77:16","nodeType":"YulIdentifier","src":"12368:77:16"},"nativeSrc":"12368:79:16","nodeType":"YulFunctionCall","src":"12368:79:16"},"nativeSrc":"12368:79:16","nodeType":"YulExpressionStatement","src":"12368:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12338:6:16","nodeType":"YulIdentifier","src":"12338:6:16"},{"kind":"number","nativeSrc":"12346:18:16","nodeType":"YulLiteral","src":"12346:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12335:2:16","nodeType":"YulIdentifier","src":"12335:2:16"},"nativeSrc":"12335:30:16","nodeType":"YulFunctionCall","src":"12335:30:16"},"nativeSrc":"12332:117:16","nodeType":"YulIf","src":"12332:117:16"},{"nativeSrc":"12463:73:16","nodeType":"YulAssignment","src":"12463:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12508:9:16","nodeType":"YulIdentifier","src":"12508:9:16"},{"name":"offset","nativeSrc":"12519:6:16","nodeType":"YulIdentifier","src":"12519:6:16"}],"functionName":{"name":"add","nativeSrc":"12504:3:16","nodeType":"YulIdentifier","src":"12504:3:16"},"nativeSrc":"12504:22:16","nodeType":"YulFunctionCall","src":"12504:22:16"},{"name":"dataEnd","nativeSrc":"12528:7:16","nodeType":"YulIdentifier","src":"12528:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"12473:30:16","nodeType":"YulIdentifier","src":"12473:30:16"},"nativeSrc":"12473:63:16","nodeType":"YulFunctionCall","src":"12473:63:16"},"variableNames":[{"name":"value2","nativeSrc":"12463:6:16","nodeType":"YulIdentifier","src":"12463:6:16"}]}]},{"nativeSrc":"12556:118:16","nodeType":"YulBlock","src":"12556:118:16","statements":[{"nativeSrc":"12571:16:16","nodeType":"YulVariableDeclaration","src":"12571:16:16","value":{"kind":"number","nativeSrc":"12585:2:16","nodeType":"YulLiteral","src":"12585:2:16","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"12575:6:16","nodeType":"YulTypedName","src":"12575:6:16","type":""}]},{"nativeSrc":"12601:63:16","nodeType":"YulAssignment","src":"12601:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12636:9:16","nodeType":"YulIdentifier","src":"12636:9:16"},{"name":"offset","nativeSrc":"12647:6:16","nodeType":"YulIdentifier","src":"12647:6:16"}],"functionName":{"name":"add","nativeSrc":"12632:3:16","nodeType":"YulIdentifier","src":"12632:3:16"},"nativeSrc":"12632:22:16","nodeType":"YulFunctionCall","src":"12632:22:16"},{"name":"dataEnd","nativeSrc":"12656:7:16","nodeType":"YulIdentifier","src":"12656:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12611:20:16","nodeType":"YulIdentifier","src":"12611:20:16"},"nativeSrc":"12611:53:16","nodeType":"YulFunctionCall","src":"12611:53:16"},"variableNames":[{"name":"value3","nativeSrc":"12601:6:16","nodeType":"YulIdentifier","src":"12601:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address","nativeSrc":"11376:1305:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11469:9:16","nodeType":"YulTypedName","src":"11469:9:16","type":""},{"name":"dataEnd","nativeSrc":"11480:7:16","nodeType":"YulTypedName","src":"11480:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11492:6:16","nodeType":"YulTypedName","src":"11492:6:16","type":""},{"name":"value1","nativeSrc":"11500:6:16","nodeType":"YulTypedName","src":"11500:6:16","type":""},{"name":"value2","nativeSrc":"11508:6:16","nodeType":"YulTypedName","src":"11508:6:16","type":""},{"name":"value3","nativeSrc":"11516:6:16","nodeType":"YulTypedName","src":"11516:6:16","type":""}],"src":"11376:1305:16"},{"body":{"nativeSrc":"12730:43:16","nodeType":"YulBlock","src":"12730:43:16","statements":[{"nativeSrc":"12740:27:16","nodeType":"YulAssignment","src":"12740:27:16","value":{"arguments":[{"name":"value","nativeSrc":"12755:5:16","nodeType":"YulIdentifier","src":"12755:5:16"},{"kind":"number","nativeSrc":"12762:4:16","nodeType":"YulLiteral","src":"12762:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"12751:3:16","nodeType":"YulIdentifier","src":"12751:3:16"},"nativeSrc":"12751:16:16","nodeType":"YulFunctionCall","src":"12751:16:16"},"variableNames":[{"name":"cleaned","nativeSrc":"12740:7:16","nodeType":"YulIdentifier","src":"12740:7:16"}]}]},"name":"cleanup_t_uint8","nativeSrc":"12687:86:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12712:5:16","nodeType":"YulTypedName","src":"12712:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"12722:7:16","nodeType":"YulTypedName","src":"12722:7:16","type":""}],"src":"12687:86:16"},{"body":{"nativeSrc":"12840:51:16","nodeType":"YulBlock","src":"12840:51:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12857:3:16","nodeType":"YulIdentifier","src":"12857:3:16"},{"arguments":[{"name":"value","nativeSrc":"12878:5:16","nodeType":"YulIdentifier","src":"12878:5:16"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"12862:15:16","nodeType":"YulIdentifier","src":"12862:15:16"},"nativeSrc":"12862:22:16","nodeType":"YulFunctionCall","src":"12862:22:16"}],"functionName":{"name":"mstore","nativeSrc":"12850:6:16","nodeType":"YulIdentifier","src":"12850:6:16"},"nativeSrc":"12850:35:16","nodeType":"YulFunctionCall","src":"12850:35:16"},"nativeSrc":"12850:35:16","nodeType":"YulExpressionStatement","src":"12850:35:16"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"12779:112:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12828:5:16","nodeType":"YulTypedName","src":"12828:5:16","type":""},{"name":"pos","nativeSrc":"12835:3:16","nodeType":"YulTypedName","src":"12835:3:16","type":""}],"src":"12779:112:16"},{"body":{"nativeSrc":"12991:120:16","nodeType":"YulBlock","src":"12991:120:16","statements":[{"nativeSrc":"13001:26:16","nodeType":"YulAssignment","src":"13001:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"13013:9:16","nodeType":"YulIdentifier","src":"13013:9:16"},{"kind":"number","nativeSrc":"13024:2:16","nodeType":"YulLiteral","src":"13024:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13009:3:16","nodeType":"YulIdentifier","src":"13009:3:16"},"nativeSrc":"13009:18:16","nodeType":"YulFunctionCall","src":"13009:18:16"},"variableNames":[{"name":"tail","nativeSrc":"13001:4:16","nodeType":"YulIdentifier","src":"13001:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13077:6:16","nodeType":"YulIdentifier","src":"13077:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"13090:9:16","nodeType":"YulIdentifier","src":"13090:9:16"},{"kind":"number","nativeSrc":"13101:1:16","nodeType":"YulLiteral","src":"13101:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13086:3:16","nodeType":"YulIdentifier","src":"13086:3:16"},"nativeSrc":"13086:17:16","nodeType":"YulFunctionCall","src":"13086:17:16"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"13037:39:16","nodeType":"YulIdentifier","src":"13037:39:16"},"nativeSrc":"13037:67:16","nodeType":"YulFunctionCall","src":"13037:67:16"},"nativeSrc":"13037:67:16","nodeType":"YulExpressionStatement","src":"13037:67:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"12897:214:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12963:9:16","nodeType":"YulTypedName","src":"12963:9:16","type":""},{"name":"value0","nativeSrc":"12975:6:16","nodeType":"YulTypedName","src":"12975:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12986:4:16","nodeType":"YulTypedName","src":"12986:4:16","type":""}],"src":"12897:214:16"},{"body":{"nativeSrc":"13198:61:16","nodeType":"YulBlock","src":"13198:61:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13215:3:16","nodeType":"YulIdentifier","src":"13215:3:16"},{"arguments":[{"name":"value","nativeSrc":"13246:5:16","nodeType":"YulIdentifier","src":"13246:5:16"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"13220:25:16","nodeType":"YulIdentifier","src":"13220:25:16"},"nativeSrc":"13220:32:16","nodeType":"YulFunctionCall","src":"13220:32:16"}],"functionName":{"name":"mstore","nativeSrc":"13208:6:16","nodeType":"YulIdentifier","src":"13208:6:16"},"nativeSrc":"13208:45:16","nodeType":"YulFunctionCall","src":"13208:45:16"},"nativeSrc":"13208:45:16","nodeType":"YulExpressionStatement","src":"13208:45:16"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nativeSrc":"13117:142:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13186:5:16","nodeType":"YulTypedName","src":"13186:5:16","type":""},{"name":"pos","nativeSrc":"13193:3:16","nodeType":"YulTypedName","src":"13193:3:16","type":""}],"src":"13117:142:16"},{"body":{"nativeSrc":"13379:140:16","nodeType":"YulBlock","src":"13379:140:16","statements":[{"nativeSrc":"13389:26:16","nodeType":"YulAssignment","src":"13389:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"13401:9:16","nodeType":"YulIdentifier","src":"13401:9:16"},{"kind":"number","nativeSrc":"13412:2:16","nodeType":"YulLiteral","src":"13412:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13397:3:16","nodeType":"YulIdentifier","src":"13397:3:16"},"nativeSrc":"13397:18:16","nodeType":"YulFunctionCall","src":"13397:18:16"},"variableNames":[{"name":"tail","nativeSrc":"13389:4:16","nodeType":"YulIdentifier","src":"13389:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13485:6:16","nodeType":"YulIdentifier","src":"13485:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"13498:9:16","nodeType":"YulIdentifier","src":"13498:9:16"},{"kind":"number","nativeSrc":"13509:1:16","nodeType":"YulLiteral","src":"13509:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13494:3:16","nodeType":"YulIdentifier","src":"13494:3:16"},"nativeSrc":"13494:17:16","nodeType":"YulFunctionCall","src":"13494:17:16"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nativeSrc":"13425:59:16","nodeType":"YulIdentifier","src":"13425:59:16"},"nativeSrc":"13425:87:16","nodeType":"YulFunctionCall","src":"13425:87:16"},"nativeSrc":"13425:87:16","nodeType":"YulExpressionStatement","src":"13425:87:16"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nativeSrc":"13265:254:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13351:9:16","nodeType":"YulTypedName","src":"13351:9:16","type":""},{"name":"value0","nativeSrc":"13363:6:16","nodeType":"YulTypedName","src":"13363:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13374:4:16","nodeType":"YulTypedName","src":"13374:4:16","type":""}],"src":"13265:254:16"},{"body":{"nativeSrc":"13789:661:16","nodeType":"YulBlock","src":"13789:661:16","statements":[{"nativeSrc":"13799:27:16","nodeType":"YulAssignment","src":"13799:27:16","value":{"arguments":[{"name":"headStart","nativeSrc":"13811:9:16","nodeType":"YulIdentifier","src":"13811:9:16"},{"kind":"number","nativeSrc":"13822:3:16","nodeType":"YulLiteral","src":"13822:3:16","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"13807:3:16","nodeType":"YulIdentifier","src":"13807:3:16"},"nativeSrc":"13807:19:16","nodeType":"YulFunctionCall","src":"13807:19:16"},"variableNames":[{"name":"tail","nativeSrc":"13799:4:16","nodeType":"YulIdentifier","src":"13799:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13847:9:16","nodeType":"YulIdentifier","src":"13847:9:16"},{"kind":"number","nativeSrc":"13858:1:16","nodeType":"YulLiteral","src":"13858:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13843:3:16","nodeType":"YulIdentifier","src":"13843:3:16"},"nativeSrc":"13843:17:16","nodeType":"YulFunctionCall","src":"13843:17:16"},{"arguments":[{"name":"tail","nativeSrc":"13866:4:16","nodeType":"YulIdentifier","src":"13866:4:16"},{"name":"headStart","nativeSrc":"13872:9:16","nodeType":"YulIdentifier","src":"13872:9:16"}],"functionName":{"name":"sub","nativeSrc":"13862:3:16","nodeType":"YulIdentifier","src":"13862:3:16"},"nativeSrc":"13862:20:16","nodeType":"YulFunctionCall","src":"13862:20:16"}],"functionName":{"name":"mstore","nativeSrc":"13836:6:16","nodeType":"YulIdentifier","src":"13836:6:16"},"nativeSrc":"13836:47:16","nodeType":"YulFunctionCall","src":"13836:47:16"},"nativeSrc":"13836:47:16","nodeType":"YulExpressionStatement","src":"13836:47:16"},{"nativeSrc":"13892:86:16","nodeType":"YulAssignment","src":"13892:86:16","value":{"arguments":[{"name":"value0","nativeSrc":"13964:6:16","nodeType":"YulIdentifier","src":"13964:6:16"},{"name":"tail","nativeSrc":"13973:4:16","nodeType":"YulIdentifier","src":"13973:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"13900:63:16","nodeType":"YulIdentifier","src":"13900:63:16"},"nativeSrc":"13900:78:16","nodeType":"YulFunctionCall","src":"13900:78:16"},"variableNames":[{"name":"tail","nativeSrc":"13892:4:16","nodeType":"YulIdentifier","src":"13892:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13999:9:16","nodeType":"YulIdentifier","src":"13999:9:16"},{"kind":"number","nativeSrc":"14010:2:16","nodeType":"YulLiteral","src":"14010:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13995:3:16","nodeType":"YulIdentifier","src":"13995:3:16"},"nativeSrc":"13995:18:16","nodeType":"YulFunctionCall","src":"13995:18:16"},{"arguments":[{"name":"tail","nativeSrc":"14019:4:16","nodeType":"YulIdentifier","src":"14019:4:16"},{"name":"headStart","nativeSrc":"14025:9:16","nodeType":"YulIdentifier","src":"14025:9:16"}],"functionName":{"name":"sub","nativeSrc":"14015:3:16","nodeType":"YulIdentifier","src":"14015:3:16"},"nativeSrc":"14015:20:16","nodeType":"YulFunctionCall","src":"14015:20:16"}],"functionName":{"name":"mstore","nativeSrc":"13988:6:16","nodeType":"YulIdentifier","src":"13988:6:16"},"nativeSrc":"13988:48:16","nodeType":"YulFunctionCall","src":"13988:48:16"},"nativeSrc":"13988:48:16","nodeType":"YulExpressionStatement","src":"13988:48:16"},{"nativeSrc":"14045:86:16","nodeType":"YulAssignment","src":"14045:86:16","value":{"arguments":[{"name":"value1","nativeSrc":"14117:6:16","nodeType":"YulIdentifier","src":"14117:6:16"},{"name":"tail","nativeSrc":"14126:4:16","nodeType":"YulIdentifier","src":"14126:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"14053:63:16","nodeType":"YulIdentifier","src":"14053:63:16"},"nativeSrc":"14053:78:16","nodeType":"YulFunctionCall","src":"14053:78:16"},"variableNames":[{"name":"tail","nativeSrc":"14045:4:16","nodeType":"YulIdentifier","src":"14045:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14152:9:16","nodeType":"YulIdentifier","src":"14152:9:16"},{"kind":"number","nativeSrc":"14163:2:16","nodeType":"YulLiteral","src":"14163:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14148:3:16","nodeType":"YulIdentifier","src":"14148:3:16"},"nativeSrc":"14148:18:16","nodeType":"YulFunctionCall","src":"14148:18:16"},{"arguments":[{"name":"tail","nativeSrc":"14172:4:16","nodeType":"YulIdentifier","src":"14172:4:16"},{"name":"headStart","nativeSrc":"14178:9:16","nodeType":"YulIdentifier","src":"14178:9:16"}],"functionName":{"name":"sub","nativeSrc":"14168:3:16","nodeType":"YulIdentifier","src":"14168:3:16"},"nativeSrc":"14168:20:16","nodeType":"YulFunctionCall","src":"14168:20:16"}],"functionName":{"name":"mstore","nativeSrc":"14141:6:16","nodeType":"YulIdentifier","src":"14141:6:16"},"nativeSrc":"14141:48:16","nodeType":"YulFunctionCall","src":"14141:48:16"},"nativeSrc":"14141:48:16","nodeType":"YulExpressionStatement","src":"14141:48:16"},{"nativeSrc":"14198:86:16","nodeType":"YulAssignment","src":"14198:86:16","value":{"arguments":[{"name":"value2","nativeSrc":"14270:6:16","nodeType":"YulIdentifier","src":"14270:6:16"},{"name":"tail","nativeSrc":"14279:4:16","nodeType":"YulIdentifier","src":"14279:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"14206:63:16","nodeType":"YulIdentifier","src":"14206:63:16"},"nativeSrc":"14206:78:16","nodeType":"YulFunctionCall","src":"14206:78:16"},"variableNames":[{"name":"tail","nativeSrc":"14198:4:16","nodeType":"YulIdentifier","src":"14198:4:16"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"14338:6:16","nodeType":"YulIdentifier","src":"14338:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"14351:9:16","nodeType":"YulIdentifier","src":"14351:9:16"},{"kind":"number","nativeSrc":"14362:2:16","nodeType":"YulLiteral","src":"14362:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14347:3:16","nodeType":"YulIdentifier","src":"14347:3:16"},"nativeSrc":"14347:18:16","nodeType":"YulFunctionCall","src":"14347:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14294:43:16","nodeType":"YulIdentifier","src":"14294:43:16"},"nativeSrc":"14294:72:16","nodeType":"YulFunctionCall","src":"14294:72:16"},"nativeSrc":"14294:72:16","nodeType":"YulExpressionStatement","src":"14294:72:16"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"14414:6:16","nodeType":"YulIdentifier","src":"14414:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"14427:9:16","nodeType":"YulIdentifier","src":"14427:9:16"},{"kind":"number","nativeSrc":"14438:3:16","nodeType":"YulLiteral","src":"14438:3:16","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14423:3:16","nodeType":"YulIdentifier","src":"14423:3:16"},"nativeSrc":"14423:19:16","nodeType":"YulFunctionCall","src":"14423:19:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"14376:37:16","nodeType":"YulIdentifier","src":"14376:37:16"},"nativeSrc":"14376:67:16","nodeType":"YulFunctionCall","src":"14376:67:16"},"nativeSrc":"14376:67:16","nodeType":"YulExpressionStatement","src":"14376:67:16"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_bool__fromStack_reversed","nativeSrc":"13525:925:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13729:9:16","nodeType":"YulTypedName","src":"13729:9:16","type":""},{"name":"value4","nativeSrc":"13741:6:16","nodeType":"YulTypedName","src":"13741:6:16","type":""},{"name":"value3","nativeSrc":"13749:6:16","nodeType":"YulTypedName","src":"13749:6:16","type":""},{"name":"value2","nativeSrc":"13757:6:16","nodeType":"YulTypedName","src":"13757:6:16","type":""},{"name":"value1","nativeSrc":"13765:6:16","nodeType":"YulTypedName","src":"13765:6:16","type":""},{"name":"value0","nativeSrc":"13773:6:16","nodeType":"YulTypedName","src":"13773:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13784:4:16","nodeType":"YulTypedName","src":"13784:4:16","type":""}],"src":"13525:925:16"},{"body":{"nativeSrc":"14555:40:16","nodeType":"YulBlock","src":"14555:40:16","statements":[{"nativeSrc":"14566:22:16","nodeType":"YulAssignment","src":"14566:22:16","value":{"arguments":[{"name":"value","nativeSrc":"14582:5:16","nodeType":"YulIdentifier","src":"14582:5:16"}],"functionName":{"name":"mload","nativeSrc":"14576:5:16","nodeType":"YulIdentifier","src":"14576:5:16"},"nativeSrc":"14576:12:16","nodeType":"YulFunctionCall","src":"14576:12:16"},"variableNames":[{"name":"length","nativeSrc":"14566:6:16","nodeType":"YulIdentifier","src":"14566:6:16"}]}]},"name":"array_length_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","nativeSrc":"14456:139:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14538:5:16","nodeType":"YulTypedName","src":"14538:5:16","type":""}],"returnVariables":[{"name":"length","nativeSrc":"14548:6:16","nodeType":"YulTypedName","src":"14548:6:16","type":""}],"src":"14456:139:16"},{"body":{"nativeSrc":"14737:73:16","nodeType":"YulBlock","src":"14737:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14754:3:16","nodeType":"YulIdentifier","src":"14754:3:16"},{"name":"length","nativeSrc":"14759:6:16","nodeType":"YulIdentifier","src":"14759:6:16"}],"functionName":{"name":"mstore","nativeSrc":"14747:6:16","nodeType":"YulIdentifier","src":"14747:6:16"},"nativeSrc":"14747:19:16","nodeType":"YulFunctionCall","src":"14747:19:16"},"nativeSrc":"14747:19:16","nodeType":"YulExpressionStatement","src":"14747:19:16"},{"nativeSrc":"14775:29:16","nodeType":"YulAssignment","src":"14775:29:16","value":{"arguments":[{"name":"pos","nativeSrc":"14794:3:16","nodeType":"YulIdentifier","src":"14794:3:16"},{"kind":"number","nativeSrc":"14799:4:16","nodeType":"YulLiteral","src":"14799:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14790:3:16","nodeType":"YulIdentifier","src":"14790:3:16"},"nativeSrc":"14790:14:16","nodeType":"YulFunctionCall","src":"14790:14:16"},"variableNames":[{"name":"updated_pos","nativeSrc":"14775:11:16","nodeType":"YulIdentifier","src":"14775:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"14601:209:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14709:3:16","nodeType":"YulTypedName","src":"14709:3:16","type":""},{"name":"length","nativeSrc":"14714:6:16","nodeType":"YulTypedName","src":"14714:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14725:11:16","nodeType":"YulTypedName","src":"14725:11:16","type":""}],"src":"14601:209:16"},{"body":{"nativeSrc":"14913:60:16","nodeType":"YulBlock","src":"14913:60:16","statements":[{"nativeSrc":"14923:11:16","nodeType":"YulAssignment","src":"14923:11:16","value":{"name":"ptr","nativeSrc":"14931:3:16","nodeType":"YulIdentifier","src":"14931:3:16"},"variableNames":[{"name":"data","nativeSrc":"14923:4:16","nodeType":"YulIdentifier","src":"14923:4:16"}]},{"nativeSrc":"14944:22:16","nodeType":"YulAssignment","src":"14944:22:16","value":{"arguments":[{"name":"ptr","nativeSrc":"14956:3:16","nodeType":"YulIdentifier","src":"14956:3:16"},{"kind":"number","nativeSrc":"14961:4:16","nodeType":"YulLiteral","src":"14961:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14952:3:16","nodeType":"YulIdentifier","src":"14952:3:16"},"nativeSrc":"14952:14:16","nodeType":"YulFunctionCall","src":"14952:14:16"},"variableNames":[{"name":"data","nativeSrc":"14944:4:16","nodeType":"YulIdentifier","src":"14944:4:16"}]}]},"name":"array_dataslot_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","nativeSrc":"14816:157:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14900:3:16","nodeType":"YulTypedName","src":"14900:3:16","type":""}],"returnVariables":[{"name":"data","nativeSrc":"14908:4:16","nodeType":"YulTypedName","src":"14908:4:16","type":""}],"src":"14816:157:16"},{"body":{"nativeSrc":"15065:73:16","nodeType":"YulBlock","src":"15065:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15082:3:16","nodeType":"YulIdentifier","src":"15082:3:16"},{"name":"length","nativeSrc":"15087:6:16","nodeType":"YulIdentifier","src":"15087:6:16"}],"functionName":{"name":"mstore","nativeSrc":"15075:6:16","nodeType":"YulIdentifier","src":"15075:6:16"},"nativeSrc":"15075:19:16","nodeType":"YulFunctionCall","src":"15075:19:16"},"nativeSrc":"15075:19:16","nodeType":"YulExpressionStatement","src":"15075:19:16"},{"nativeSrc":"15103:29:16","nodeType":"YulAssignment","src":"15103:29:16","value":{"arguments":[{"name":"pos","nativeSrc":"15122:3:16","nodeType":"YulIdentifier","src":"15122:3:16"},{"kind":"number","nativeSrc":"15127:4:16","nodeType":"YulLiteral","src":"15127:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15118:3:16","nodeType":"YulIdentifier","src":"15118:3:16"},"nativeSrc":"15118:14:16","nodeType":"YulFunctionCall","src":"15118:14:16"},"variableNames":[{"name":"updated_pos","nativeSrc":"15103:11:16","nodeType":"YulIdentifier","src":"15103:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nativeSrc":"14979:159:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15037:3:16","nodeType":"YulTypedName","src":"15037:3:16","type":""},{"name":"length","nativeSrc":"15042:6:16","nodeType":"YulTypedName","src":"15042:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"15053:11:16","nodeType":"YulTypedName","src":"15053:11:16","type":""}],"src":"14979:159:16"},{"body":{"nativeSrc":"15226:275:16","nodeType":"YulBlock","src":"15226:275:16","statements":[{"nativeSrc":"15236:53:16","nodeType":"YulVariableDeclaration","src":"15236:53:16","value":{"arguments":[{"name":"value","nativeSrc":"15283:5:16","nodeType":"YulIdentifier","src":"15283:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"15250:32:16","nodeType":"YulIdentifier","src":"15250:32:16"},"nativeSrc":"15250:39:16","nodeType":"YulFunctionCall","src":"15250:39:16"},"variables":[{"name":"length","nativeSrc":"15240:6:16","nodeType":"YulTypedName","src":"15240:6:16","type":""}]},{"nativeSrc":"15298:68:16","nodeType":"YulAssignment","src":"15298:68:16","value":{"arguments":[{"name":"pos","nativeSrc":"15354:3:16","nodeType":"YulIdentifier","src":"15354:3:16"},{"name":"length","nativeSrc":"15359:6:16","nodeType":"YulIdentifier","src":"15359:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nativeSrc":"15305:48:16","nodeType":"YulIdentifier","src":"15305:48:16"},"nativeSrc":"15305:61:16","nodeType":"YulFunctionCall","src":"15305:61:16"},"variableNames":[{"name":"pos","nativeSrc":"15298:3:16","nodeType":"YulIdentifier","src":"15298:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15414:5:16","nodeType":"YulIdentifier","src":"15414:5:16"},{"kind":"number","nativeSrc":"15421:4:16","nodeType":"YulLiteral","src":"15421:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15410:3:16","nodeType":"YulIdentifier","src":"15410:3:16"},"nativeSrc":"15410:16:16","nodeType":"YulFunctionCall","src":"15410:16:16"},{"name":"pos","nativeSrc":"15428:3:16","nodeType":"YulIdentifier","src":"15428:3:16"},{"name":"length","nativeSrc":"15433:6:16","nodeType":"YulIdentifier","src":"15433:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"15375:34:16","nodeType":"YulIdentifier","src":"15375:34:16"},"nativeSrc":"15375:65:16","nodeType":"YulFunctionCall","src":"15375:65:16"},"nativeSrc":"15375:65:16","nodeType":"YulExpressionStatement","src":"15375:65:16"},{"nativeSrc":"15449:46:16","nodeType":"YulAssignment","src":"15449:46:16","value":{"arguments":[{"name":"pos","nativeSrc":"15460:3:16","nodeType":"YulIdentifier","src":"15460:3:16"},{"arguments":[{"name":"length","nativeSrc":"15487:6:16","nodeType":"YulIdentifier","src":"15487:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"15465:21:16","nodeType":"YulIdentifier","src":"15465:21:16"},"nativeSrc":"15465:29:16","nodeType":"YulFunctionCall","src":"15465:29:16"}],"functionName":{"name":"add","nativeSrc":"15456:3:16","nodeType":"YulIdentifier","src":"15456:3:16"},"nativeSrc":"15456:39:16","nodeType":"YulFunctionCall","src":"15456:39:16"},"variableNames":[{"name":"end","nativeSrc":"15449:3:16","nodeType":"YulIdentifier","src":"15449:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"15144:357:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15207:5:16","nodeType":"YulTypedName","src":"15207:5:16","type":""},{"name":"pos","nativeSrc":"15214:3:16","nodeType":"YulTypedName","src":"15214:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15222:3:16","nodeType":"YulTypedName","src":"15222:3:16","type":""}],"src":"15144:357:16"},{"body":{"nativeSrc":"15562:53:16","nodeType":"YulBlock","src":"15562:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15579:3:16","nodeType":"YulIdentifier","src":"15579:3:16"},{"arguments":[{"name":"value","nativeSrc":"15602:5:16","nodeType":"YulIdentifier","src":"15602:5:16"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"15584:17:16","nodeType":"YulIdentifier","src":"15584:17:16"},"nativeSrc":"15584:24:16","nodeType":"YulFunctionCall","src":"15584:24:16"}],"functionName":{"name":"mstore","nativeSrc":"15572:6:16","nodeType":"YulIdentifier","src":"15572:6:16"},"nativeSrc":"15572:37:16","nodeType":"YulFunctionCall","src":"15572:37:16"},"nativeSrc":"15572:37:16","nodeType":"YulExpressionStatement","src":"15572:37:16"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"15507:108:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15550:5:16","nodeType":"YulTypedName","src":"15550:5:16","type":""},{"name":"pos","nativeSrc":"15557:3:16","nodeType":"YulTypedName","src":"15557:3:16","type":""}],"src":"15507:108:16"},{"body":{"nativeSrc":"15670:50:16","nodeType":"YulBlock","src":"15670:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15687:3:16","nodeType":"YulIdentifier","src":"15687:3:16"},{"arguments":[{"name":"value","nativeSrc":"15707:5:16","nodeType":"YulIdentifier","src":"15707:5:16"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"15692:14:16","nodeType":"YulIdentifier","src":"15692:14:16"},"nativeSrc":"15692:21:16","nodeType":"YulFunctionCall","src":"15692:21:16"}],"functionName":{"name":"mstore","nativeSrc":"15680:6:16","nodeType":"YulIdentifier","src":"15680:6:16"},"nativeSrc":"15680:34:16","nodeType":"YulFunctionCall","src":"15680:34:16"},"nativeSrc":"15680:34:16","nodeType":"YulExpressionStatement","src":"15680:34:16"}]},"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"15621:99:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15658:5:16","nodeType":"YulTypedName","src":"15658:5:16","type":""},{"name":"pos","nativeSrc":"15665:3:16","nodeType":"YulTypedName","src":"15665:3:16","type":""}],"src":"15621:99:16"},{"body":{"nativeSrc":"15900:1187:16","nodeType":"YulBlock","src":"15900:1187:16","statements":[{"nativeSrc":"15910:26:16","nodeType":"YulVariableDeclaration","src":"15910:26:16","value":{"arguments":[{"name":"pos","nativeSrc":"15926:3:16","nodeType":"YulIdentifier","src":"15926:3:16"},{"kind":"number","nativeSrc":"15931:4:16","nodeType":"YulLiteral","src":"15931:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15922:3:16","nodeType":"YulIdentifier","src":"15922:3:16"},"nativeSrc":"15922:14:16","nodeType":"YulFunctionCall","src":"15922:14:16"},"variables":[{"name":"tail","nativeSrc":"15914:4:16","nodeType":"YulTypedName","src":"15914:4:16","type":""}]},{"nativeSrc":"15946:235:16","nodeType":"YulBlock","src":"15946:235:16","statements":[{"nativeSrc":"15981:43:16","nodeType":"YulVariableDeclaration","src":"15981:43:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16011:5:16","nodeType":"YulIdentifier","src":"16011:5:16"},{"kind":"number","nativeSrc":"16018:4:16","nodeType":"YulLiteral","src":"16018:4:16","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"16007:3:16","nodeType":"YulIdentifier","src":"16007:3:16"},"nativeSrc":"16007:16:16","nodeType":"YulFunctionCall","src":"16007:16:16"}],"functionName":{"name":"mload","nativeSrc":"16001:5:16","nodeType":"YulIdentifier","src":"16001:5:16"},"nativeSrc":"16001:23:16","nodeType":"YulFunctionCall","src":"16001:23:16"},"variables":[{"name":"memberValue0","nativeSrc":"15985:12:16","nodeType":"YulTypedName","src":"15985:12:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"16049:3:16","nodeType":"YulIdentifier","src":"16049:3:16"},{"kind":"number","nativeSrc":"16054:4:16","nodeType":"YulLiteral","src":"16054:4:16","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"16045:3:16","nodeType":"YulIdentifier","src":"16045:3:16"},"nativeSrc":"16045:14:16","nodeType":"YulFunctionCall","src":"16045:14:16"},{"arguments":[{"name":"tail","nativeSrc":"16065:4:16","nodeType":"YulIdentifier","src":"16065:4:16"},{"name":"pos","nativeSrc":"16071:3:16","nodeType":"YulIdentifier","src":"16071:3:16"}],"functionName":{"name":"sub","nativeSrc":"16061:3:16","nodeType":"YulIdentifier","src":"16061:3:16"},"nativeSrc":"16061:14:16","nodeType":"YulFunctionCall","src":"16061:14:16"}],"functionName":{"name":"mstore","nativeSrc":"16038:6:16","nodeType":"YulIdentifier","src":"16038:6:16"},"nativeSrc":"16038:38:16","nodeType":"YulFunctionCall","src":"16038:38:16"},"nativeSrc":"16038:38:16","nodeType":"YulExpressionStatement","src":"16038:38:16"},{"nativeSrc":"16089:81:16","nodeType":"YulAssignment","src":"16089:81:16","value":{"arguments":[{"name":"memberValue0","nativeSrc":"16151:12:16","nodeType":"YulIdentifier","src":"16151:12:16"},{"name":"tail","nativeSrc":"16165:4:16","nodeType":"YulIdentifier","src":"16165:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"16097:53:16","nodeType":"YulIdentifier","src":"16097:53:16"},"nativeSrc":"16097:73:16","nodeType":"YulFunctionCall","src":"16097:73:16"},"variableNames":[{"name":"tail","nativeSrc":"16089:4:16","nodeType":"YulIdentifier","src":"16089:4:16"}]}]},{"nativeSrc":"16191:241:16","nodeType":"YulBlock","src":"16191:241:16","statements":[{"nativeSrc":"16232:43:16","nodeType":"YulVariableDeclaration","src":"16232:43:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16262:5:16","nodeType":"YulIdentifier","src":"16262:5:16"},{"kind":"number","nativeSrc":"16269:4:16","nodeType":"YulLiteral","src":"16269:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16258:3:16","nodeType":"YulIdentifier","src":"16258:3:16"},"nativeSrc":"16258:16:16","nodeType":"YulFunctionCall","src":"16258:16:16"}],"functionName":{"name":"mload","nativeSrc":"16252:5:16","nodeType":"YulIdentifier","src":"16252:5:16"},"nativeSrc":"16252:23:16","nodeType":"YulFunctionCall","src":"16252:23:16"},"variables":[{"name":"memberValue0","nativeSrc":"16236:12:16","nodeType":"YulTypedName","src":"16236:12:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"16300:3:16","nodeType":"YulIdentifier","src":"16300:3:16"},{"kind":"number","nativeSrc":"16305:4:16","nodeType":"YulLiteral","src":"16305:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16296:3:16","nodeType":"YulIdentifier","src":"16296:3:16"},"nativeSrc":"16296:14:16","nodeType":"YulFunctionCall","src":"16296:14:16"},{"arguments":[{"name":"tail","nativeSrc":"16316:4:16","nodeType":"YulIdentifier","src":"16316:4:16"},{"name":"pos","nativeSrc":"16322:3:16","nodeType":"YulIdentifier","src":"16322:3:16"}],"functionName":{"name":"sub","nativeSrc":"16312:3:16","nodeType":"YulIdentifier","src":"16312:3:16"},"nativeSrc":"16312:14:16","nodeType":"YulFunctionCall","src":"16312:14:16"}],"functionName":{"name":"mstore","nativeSrc":"16289:6:16","nodeType":"YulIdentifier","src":"16289:6:16"},"nativeSrc":"16289:38:16","nodeType":"YulFunctionCall","src":"16289:38:16"},"nativeSrc":"16289:38:16","nodeType":"YulExpressionStatement","src":"16289:38:16"},{"nativeSrc":"16340:81:16","nodeType":"YulAssignment","src":"16340:81:16","value":{"arguments":[{"name":"memberValue0","nativeSrc":"16402:12:16","nodeType":"YulIdentifier","src":"16402:12:16"},{"name":"tail","nativeSrc":"16416:4:16","nodeType":"YulIdentifier","src":"16416:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"16348:53:16","nodeType":"YulIdentifier","src":"16348:53:16"},"nativeSrc":"16348:73:16","nodeType":"YulFunctionCall","src":"16348:73:16"},"variableNames":[{"name":"tail","nativeSrc":"16340:4:16","nodeType":"YulIdentifier","src":"16340:4:16"}]}]},{"nativeSrc":"16442:247:16","nodeType":"YulBlock","src":"16442:247:16","statements":[{"nativeSrc":"16489:43:16","nodeType":"YulVariableDeclaration","src":"16489:43:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16519:5:16","nodeType":"YulIdentifier","src":"16519:5:16"},{"kind":"number","nativeSrc":"16526:4:16","nodeType":"YulLiteral","src":"16526:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"16515:3:16","nodeType":"YulIdentifier","src":"16515:3:16"},"nativeSrc":"16515:16:16","nodeType":"YulFunctionCall","src":"16515:16:16"}],"functionName":{"name":"mload","nativeSrc":"16509:5:16","nodeType":"YulIdentifier","src":"16509:5:16"},"nativeSrc":"16509:23:16","nodeType":"YulFunctionCall","src":"16509:23:16"},"variables":[{"name":"memberValue0","nativeSrc":"16493:12:16","nodeType":"YulTypedName","src":"16493:12:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"16557:3:16","nodeType":"YulIdentifier","src":"16557:3:16"},{"kind":"number","nativeSrc":"16562:4:16","nodeType":"YulLiteral","src":"16562:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"16553:3:16","nodeType":"YulIdentifier","src":"16553:3:16"},"nativeSrc":"16553:14:16","nodeType":"YulFunctionCall","src":"16553:14:16"},{"arguments":[{"name":"tail","nativeSrc":"16573:4:16","nodeType":"YulIdentifier","src":"16573:4:16"},{"name":"pos","nativeSrc":"16579:3:16","nodeType":"YulIdentifier","src":"16579:3:16"}],"functionName":{"name":"sub","nativeSrc":"16569:3:16","nodeType":"YulIdentifier","src":"16569:3:16"},"nativeSrc":"16569:14:16","nodeType":"YulFunctionCall","src":"16569:14:16"}],"functionName":{"name":"mstore","nativeSrc":"16546:6:16","nodeType":"YulIdentifier","src":"16546:6:16"},"nativeSrc":"16546:38:16","nodeType":"YulFunctionCall","src":"16546:38:16"},"nativeSrc":"16546:38:16","nodeType":"YulExpressionStatement","src":"16546:38:16"},{"nativeSrc":"16597:81:16","nodeType":"YulAssignment","src":"16597:81:16","value":{"arguments":[{"name":"memberValue0","nativeSrc":"16659:12:16","nodeType":"YulIdentifier","src":"16659:12:16"},{"name":"tail","nativeSrc":"16673:4:16","nodeType":"YulIdentifier","src":"16673:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"16605:53:16","nodeType":"YulIdentifier","src":"16605:53:16"},"nativeSrc":"16605:73:16","nodeType":"YulFunctionCall","src":"16605:73:16"},"variableNames":[{"name":"tail","nativeSrc":"16597:4:16","nodeType":"YulIdentifier","src":"16597:4:16"}]}]},{"nativeSrc":"16699:182:16","nodeType":"YulBlock","src":"16699:182:16","statements":[{"nativeSrc":"16752:43:16","nodeType":"YulVariableDeclaration","src":"16752:43:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16782:5:16","nodeType":"YulIdentifier","src":"16782:5:16"},{"kind":"number","nativeSrc":"16789:4:16","nodeType":"YulLiteral","src":"16789:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"16778:3:16","nodeType":"YulIdentifier","src":"16778:3:16"},"nativeSrc":"16778:16:16","nodeType":"YulFunctionCall","src":"16778:16:16"}],"functionName":{"name":"mload","nativeSrc":"16772:5:16","nodeType":"YulIdentifier","src":"16772:5:16"},"nativeSrc":"16772:23:16","nodeType":"YulFunctionCall","src":"16772:23:16"},"variables":[{"name":"memberValue0","nativeSrc":"16756:12:16","nodeType":"YulTypedName","src":"16756:12:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"16842:12:16","nodeType":"YulIdentifier","src":"16842:12:16"},{"arguments":[{"name":"pos","nativeSrc":"16860:3:16","nodeType":"YulIdentifier","src":"16860:3:16"},{"kind":"number","nativeSrc":"16865:4:16","nodeType":"YulLiteral","src":"16865:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"16856:3:16","nodeType":"YulIdentifier","src":"16856:3:16"},"nativeSrc":"16856:14:16","nodeType":"YulFunctionCall","src":"16856:14:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"16808:33:16","nodeType":"YulIdentifier","src":"16808:33:16"},"nativeSrc":"16808:63:16","nodeType":"YulFunctionCall","src":"16808:63:16"},"nativeSrc":"16808:63:16","nodeType":"YulExpressionStatement","src":"16808:63:16"}]},{"nativeSrc":"16891:169:16","nodeType":"YulBlock","src":"16891:169:16","statements":[{"nativeSrc":"16937:43:16","nodeType":"YulVariableDeclaration","src":"16937:43:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16967:5:16","nodeType":"YulIdentifier","src":"16967:5:16"},{"kind":"number","nativeSrc":"16974:4:16","nodeType":"YulLiteral","src":"16974:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"16963:3:16","nodeType":"YulIdentifier","src":"16963:3:16"},"nativeSrc":"16963:16:16","nodeType":"YulFunctionCall","src":"16963:16:16"}],"functionName":{"name":"mload","nativeSrc":"16957:5:16","nodeType":"YulIdentifier","src":"16957:5:16"},"nativeSrc":"16957:23:16","nodeType":"YulFunctionCall","src":"16957:23:16"},"variables":[{"name":"memberValue0","nativeSrc":"16941:12:16","nodeType":"YulTypedName","src":"16941:12:16","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"17021:12:16","nodeType":"YulIdentifier","src":"17021:12:16"},{"arguments":[{"name":"pos","nativeSrc":"17039:3:16","nodeType":"YulIdentifier","src":"17039:3:16"},{"kind":"number","nativeSrc":"17044:4:16","nodeType":"YulLiteral","src":"17044:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"17035:3:16","nodeType":"YulIdentifier","src":"17035:3:16"},"nativeSrc":"17035:14:16","nodeType":"YulFunctionCall","src":"17035:14:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"16993:27:16","nodeType":"YulIdentifier","src":"16993:27:16"},"nativeSrc":"16993:57:16","nodeType":"YulFunctionCall","src":"16993:57:16"},"nativeSrc":"16993:57:16","nodeType":"YulExpressionStatement","src":"16993:57:16"}]},{"nativeSrc":"17070:11:16","nodeType":"YulAssignment","src":"17070:11:16","value":{"name":"tail","nativeSrc":"17077:4:16","nodeType":"YulIdentifier","src":"17077:4:16"},"variableNames":[{"name":"end","nativeSrc":"17070:3:16","nodeType":"YulIdentifier","src":"17070:3:16"}]}]},"name":"abi_encode_t_struct$_Details_$6704_memory_ptr_to_t_struct$_Details_$6704_memory_ptr","nativeSrc":"15786:1301:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15879:5:16","nodeType":"YulTypedName","src":"15879:5:16","type":""},{"name":"pos","nativeSrc":"15886:3:16","nodeType":"YulTypedName","src":"15886:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15895:3:16","nodeType":"YulTypedName","src":"15895:3:16","type":""}],"src":"15786:1301:16"},{"body":{"nativeSrc":"17223:126:16","nodeType":"YulBlock","src":"17223:126:16","statements":[{"nativeSrc":"17233:110:16","nodeType":"YulAssignment","src":"17233:110:16","value":{"arguments":[{"name":"value0","nativeSrc":"17331:6:16","nodeType":"YulIdentifier","src":"17331:6:16"},{"name":"pos","nativeSrc":"17339:3:16","nodeType":"YulIdentifier","src":"17339:3:16"}],"functionName":{"name":"abi_encode_t_struct$_Details_$6704_memory_ptr_to_t_struct$_Details_$6704_memory_ptr","nativeSrc":"17247:83:16","nodeType":"YulIdentifier","src":"17247:83:16"},"nativeSrc":"17247:96:16","nodeType":"YulFunctionCall","src":"17247:96:16"},"variableNames":[{"name":"updatedPos","nativeSrc":"17233:10:16","nodeType":"YulIdentifier","src":"17233:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Details_$6704_memory_ptr_to_t_struct$_Details_$6704_memory_ptr","nativeSrc":"17093:256:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"17196:6:16","nodeType":"YulTypedName","src":"17196:6:16","type":""},{"name":"pos","nativeSrc":"17204:3:16","nodeType":"YulTypedName","src":"17204:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"17212:10:16","nodeType":"YulTypedName","src":"17212:10:16","type":""}],"src":"17093:256:16"},{"body":{"nativeSrc":"17455:38:16","nodeType":"YulBlock","src":"17455:38:16","statements":[{"nativeSrc":"17465:22:16","nodeType":"YulAssignment","src":"17465:22:16","value":{"arguments":[{"name":"ptr","nativeSrc":"17477:3:16","nodeType":"YulIdentifier","src":"17477:3:16"},{"kind":"number","nativeSrc":"17482:4:16","nodeType":"YulLiteral","src":"17482:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17473:3:16","nodeType":"YulIdentifier","src":"17473:3:16"},"nativeSrc":"17473:14:16","nodeType":"YulFunctionCall","src":"17473:14:16"},"variableNames":[{"name":"next","nativeSrc":"17465:4:16","nodeType":"YulIdentifier","src":"17465:4:16"}]}]},"name":"array_nextElement_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","nativeSrc":"17355:138:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"17442:3:16","nodeType":"YulTypedName","src":"17442:3:16","type":""}],"returnVariables":[{"name":"next","nativeSrc":"17450:4:16","nodeType":"YulTypedName","src":"17450:4:16","type":""}],"src":"17355:138:16"},{"body":{"nativeSrc":"17737:937:16","nodeType":"YulBlock","src":"17737:937:16","statements":[{"nativeSrc":"17747:93:16","nodeType":"YulVariableDeclaration","src":"17747:93:16","value":{"arguments":[{"name":"value","nativeSrc":"17834:5:16","nodeType":"YulIdentifier","src":"17834:5:16"}],"functionName":{"name":"array_length_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","nativeSrc":"17761:72:16","nodeType":"YulIdentifier","src":"17761:72:16"},"nativeSrc":"17761:79:16","nodeType":"YulFunctionCall","src":"17761:79:16"},"variables":[{"name":"length","nativeSrc":"17751:6:16","nodeType":"YulTypedName","src":"17751:6:16","type":""}]},{"nativeSrc":"17849:118:16","nodeType":"YulAssignment","src":"17849:118:16","value":{"arguments":[{"name":"pos","nativeSrc":"17955:3:16","nodeType":"YulIdentifier","src":"17955:3:16"},{"name":"length","nativeSrc":"17960:6:16","nodeType":"YulIdentifier","src":"17960:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"17856:98:16","nodeType":"YulIdentifier","src":"17856:98:16"},"nativeSrc":"17856:111:16","nodeType":"YulFunctionCall","src":"17856:111:16"},"variableNames":[{"name":"pos","nativeSrc":"17849:3:16","nodeType":"YulIdentifier","src":"17849:3:16"}]},{"nativeSrc":"17976:20:16","nodeType":"YulVariableDeclaration","src":"17976:20:16","value":{"name":"pos","nativeSrc":"17993:3:16","nodeType":"YulIdentifier","src":"17993:3:16"},"variables":[{"name":"headStart","nativeSrc":"17980:9:16","nodeType":"YulTypedName","src":"17980:9:16","type":""}]},{"nativeSrc":"18005:39:16","nodeType":"YulVariableDeclaration","src":"18005:39:16","value":{"arguments":[{"name":"pos","nativeSrc":"18021:3:16","nodeType":"YulIdentifier","src":"18021:3:16"},{"arguments":[{"name":"length","nativeSrc":"18030:6:16","nodeType":"YulIdentifier","src":"18030:6:16"},{"kind":"number","nativeSrc":"18038:4:16","nodeType":"YulLiteral","src":"18038:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18026:3:16","nodeType":"YulIdentifier","src":"18026:3:16"},"nativeSrc":"18026:17:16","nodeType":"YulFunctionCall","src":"18026:17:16"}],"functionName":{"name":"add","nativeSrc":"18017:3:16","nodeType":"YulIdentifier","src":"18017:3:16"},"nativeSrc":"18017:27:16","nodeType":"YulFunctionCall","src":"18017:27:16"},"variables":[{"name":"tail","nativeSrc":"18009:4:16","nodeType":"YulTypedName","src":"18009:4:16","type":""}]},{"nativeSrc":"18053:96:16","nodeType":"YulVariableDeclaration","src":"18053:96:16","value":{"arguments":[{"name":"value","nativeSrc":"18143:5:16","nodeType":"YulIdentifier","src":"18143:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","nativeSrc":"18068:74:16","nodeType":"YulIdentifier","src":"18068:74:16"},"nativeSrc":"18068:81:16","nodeType":"YulFunctionCall","src":"18068:81:16"},"variables":[{"name":"baseRef","nativeSrc":"18057:7:16","nodeType":"YulTypedName","src":"18057:7:16","type":""}]},{"nativeSrc":"18158:21:16","nodeType":"YulVariableDeclaration","src":"18158:21:16","value":{"name":"baseRef","nativeSrc":"18172:7:16","nodeType":"YulIdentifier","src":"18172:7:16"},"variables":[{"name":"srcPtr","nativeSrc":"18162:6:16","nodeType":"YulTypedName","src":"18162:6:16","type":""}]},{"body":{"nativeSrc":"18248:381:16","nodeType":"YulBlock","src":"18248:381:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"18269:3:16","nodeType":"YulIdentifier","src":"18269:3:16"},{"arguments":[{"name":"tail","nativeSrc":"18278:4:16","nodeType":"YulIdentifier","src":"18278:4:16"},{"name":"headStart","nativeSrc":"18284:9:16","nodeType":"YulIdentifier","src":"18284:9:16"}],"functionName":{"name":"sub","nativeSrc":"18274:3:16","nodeType":"YulIdentifier","src":"18274:3:16"},"nativeSrc":"18274:20:16","nodeType":"YulFunctionCall","src":"18274:20:16"}],"functionName":{"name":"mstore","nativeSrc":"18262:6:16","nodeType":"YulIdentifier","src":"18262:6:16"},"nativeSrc":"18262:33:16","nodeType":"YulFunctionCall","src":"18262:33:16"},"nativeSrc":"18262:33:16","nodeType":"YulExpressionStatement","src":"18262:33:16"},{"nativeSrc":"18308:34:16","nodeType":"YulVariableDeclaration","src":"18308:34:16","value":{"arguments":[{"name":"srcPtr","nativeSrc":"18335:6:16","nodeType":"YulIdentifier","src":"18335:6:16"}],"functionName":{"name":"mload","nativeSrc":"18329:5:16","nodeType":"YulIdentifier","src":"18329:5:16"},"nativeSrc":"18329:13:16","nodeType":"YulFunctionCall","src":"18329:13:16"},"variables":[{"name":"elementValue0","nativeSrc":"18312:13:16","nodeType":"YulTypedName","src":"18312:13:16","type":""}]},{"nativeSrc":"18355:122:16","nodeType":"YulAssignment","src":"18355:122:16","value":{"arguments":[{"name":"elementValue0","nativeSrc":"18457:13:16","nodeType":"YulIdentifier","src":"18457:13:16"},{"name":"tail","nativeSrc":"18472:4:16","nodeType":"YulIdentifier","src":"18472:4:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Details_$6704_memory_ptr_to_t_struct$_Details_$6704_memory_ptr","nativeSrc":"18363:93:16","nodeType":"YulIdentifier","src":"18363:93:16"},"nativeSrc":"18363:114:16","nodeType":"YulFunctionCall","src":"18363:114:16"},"variableNames":[{"name":"tail","nativeSrc":"18355:4:16","nodeType":"YulIdentifier","src":"18355:4:16"}]},{"nativeSrc":"18490:95:16","nodeType":"YulAssignment","src":"18490:95:16","value":{"arguments":[{"name":"srcPtr","nativeSrc":"18578:6:16","nodeType":"YulIdentifier","src":"18578:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr","nativeSrc":"18500:77:16","nodeType":"YulIdentifier","src":"18500:77:16"},"nativeSrc":"18500:85:16","nodeType":"YulFunctionCall","src":"18500:85:16"},"variableNames":[{"name":"srcPtr","nativeSrc":"18490:6:16","nodeType":"YulIdentifier","src":"18490:6:16"}]},{"nativeSrc":"18598:21:16","nodeType":"YulAssignment","src":"18598:21:16","value":{"arguments":[{"name":"pos","nativeSrc":"18609:3:16","nodeType":"YulIdentifier","src":"18609:3:16"},{"kind":"number","nativeSrc":"18614:4:16","nodeType":"YulLiteral","src":"18614:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18605:3:16","nodeType":"YulIdentifier","src":"18605:3:16"},"nativeSrc":"18605:14:16","nodeType":"YulFunctionCall","src":"18605:14:16"},"variableNames":[{"name":"pos","nativeSrc":"18598:3:16","nodeType":"YulIdentifier","src":"18598:3:16"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"18210:1:16","nodeType":"YulIdentifier","src":"18210:1:16"},{"name":"length","nativeSrc":"18213:6:16","nodeType":"YulIdentifier","src":"18213:6:16"}],"functionName":{"name":"lt","nativeSrc":"18207:2:16","nodeType":"YulIdentifier","src":"18207:2:16"},"nativeSrc":"18207:13:16","nodeType":"YulFunctionCall","src":"18207:13:16"},"nativeSrc":"18188:441:16","nodeType":"YulForLoop","post":{"nativeSrc":"18221:18:16","nodeType":"YulBlock","src":"18221:18:16","statements":[{"nativeSrc":"18223:14:16","nodeType":"YulAssignment","src":"18223:14:16","value":{"arguments":[{"name":"i","nativeSrc":"18232:1:16","nodeType":"YulIdentifier","src":"18232:1:16"},{"kind":"number","nativeSrc":"18235:1:16","nodeType":"YulLiteral","src":"18235:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"18228:3:16","nodeType":"YulIdentifier","src":"18228:3:16"},"nativeSrc":"18228:9:16","nodeType":"YulFunctionCall","src":"18228:9:16"},"variableNames":[{"name":"i","nativeSrc":"18223:1:16","nodeType":"YulIdentifier","src":"18223:1:16"}]}]},"pre":{"nativeSrc":"18192:14:16","nodeType":"YulBlock","src":"18192:14:16","statements":[{"nativeSrc":"18194:10:16","nodeType":"YulVariableDeclaration","src":"18194:10:16","value":{"kind":"number","nativeSrc":"18203:1:16","nodeType":"YulLiteral","src":"18203:1:16","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"18198:1:16","nodeType":"YulTypedName","src":"18198:1:16","type":""}]}]},"src":"18188:441:16"},{"nativeSrc":"18638:11:16","nodeType":"YulAssignment","src":"18638:11:16","value":{"name":"tail","nativeSrc":"18645:4:16","nodeType":"YulIdentifier","src":"18645:4:16"},"variableNames":[{"name":"pos","nativeSrc":"18638:3:16","nodeType":"YulIdentifier","src":"18638:3:16"}]},{"nativeSrc":"18658:10:16","nodeType":"YulAssignment","src":"18658:10:16","value":{"name":"pos","nativeSrc":"18665:3:16","nodeType":"YulIdentifier","src":"18665:3:16"},"variableNames":[{"name":"end","nativeSrc":"18658:3:16","nodeType":"YulIdentifier","src":"18658:3:16"}]}]},"name":"abi_encode_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"17563:1111:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17716:5:16","nodeType":"YulTypedName","src":"17716:5:16","type":""},{"name":"pos","nativeSrc":"17723:3:16","nodeType":"YulTypedName","src":"17723:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17732:3:16","nodeType":"YulTypedName","src":"17732:3:16","type":""}],"src":"17563:1111:16"},{"body":{"nativeSrc":"18878:275:16","nodeType":"YulBlock","src":"18878:275:16","statements":[{"nativeSrc":"18888:26:16","nodeType":"YulAssignment","src":"18888:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"18900:9:16","nodeType":"YulIdentifier","src":"18900:9:16"},{"kind":"number","nativeSrc":"18911:2:16","nodeType":"YulLiteral","src":"18911:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18896:3:16","nodeType":"YulIdentifier","src":"18896:3:16"},"nativeSrc":"18896:18:16","nodeType":"YulFunctionCall","src":"18896:18:16"},"variableNames":[{"name":"tail","nativeSrc":"18888:4:16","nodeType":"YulIdentifier","src":"18888:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18935:9:16","nodeType":"YulIdentifier","src":"18935:9:16"},{"kind":"number","nativeSrc":"18946:1:16","nodeType":"YulLiteral","src":"18946:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18931:3:16","nodeType":"YulIdentifier","src":"18931:3:16"},"nativeSrc":"18931:17:16","nodeType":"YulFunctionCall","src":"18931:17:16"},{"arguments":[{"name":"tail","nativeSrc":"18954:4:16","nodeType":"YulIdentifier","src":"18954:4:16"},{"name":"headStart","nativeSrc":"18960:9:16","nodeType":"YulIdentifier","src":"18960:9:16"}],"functionName":{"name":"sub","nativeSrc":"18950:3:16","nodeType":"YulIdentifier","src":"18950:3:16"},"nativeSrc":"18950:20:16","nodeType":"YulFunctionCall","src":"18950:20:16"}],"functionName":{"name":"mstore","nativeSrc":"18924:6:16","nodeType":"YulIdentifier","src":"18924:6:16"},"nativeSrc":"18924:47:16","nodeType":"YulFunctionCall","src":"18924:47:16"},"nativeSrc":"18924:47:16","nodeType":"YulExpressionStatement","src":"18924:47:16"},{"nativeSrc":"18980:166:16","nodeType":"YulAssignment","src":"18980:166:16","value":{"arguments":[{"name":"value0","nativeSrc":"19132:6:16","nodeType":"YulIdentifier","src":"19132:6:16"},{"name":"tail","nativeSrc":"19141:4:16","nodeType":"YulIdentifier","src":"19141:4:16"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"18988:143:16","nodeType":"YulIdentifier","src":"18988:143:16"},"nativeSrc":"18988:158:16","nodeType":"YulFunctionCall","src":"18988:158:16"},"variableNames":[{"name":"tail","nativeSrc":"18980:4:16","nodeType":"YulIdentifier","src":"18980:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"18680:473:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18850:9:16","nodeType":"YulTypedName","src":"18850:9:16","type":""},{"name":"value0","nativeSrc":"18862:6:16","nodeType":"YulTypedName","src":"18862:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18873:4:16","nodeType":"YulTypedName","src":"18873:4:16","type":""}],"src":"18680:473:16"},{"body":{"nativeSrc":"19225:263:16","nodeType":"YulBlock","src":"19225:263:16","statements":[{"body":{"nativeSrc":"19271:83:16","nodeType":"YulBlock","src":"19271:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19273:77:16","nodeType":"YulIdentifier","src":"19273:77:16"},"nativeSrc":"19273:79:16","nodeType":"YulFunctionCall","src":"19273:79:16"},"nativeSrc":"19273:79:16","nodeType":"YulExpressionStatement","src":"19273:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19246:7:16","nodeType":"YulIdentifier","src":"19246:7:16"},{"name":"headStart","nativeSrc":"19255:9:16","nodeType":"YulIdentifier","src":"19255:9:16"}],"functionName":{"name":"sub","nativeSrc":"19242:3:16","nodeType":"YulIdentifier","src":"19242:3:16"},"nativeSrc":"19242:23:16","nodeType":"YulFunctionCall","src":"19242:23:16"},{"kind":"number","nativeSrc":"19267:2:16","nodeType":"YulLiteral","src":"19267:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"19238:3:16","nodeType":"YulIdentifier","src":"19238:3:16"},"nativeSrc":"19238:32:16","nodeType":"YulFunctionCall","src":"19238:32:16"},"nativeSrc":"19235:119:16","nodeType":"YulIf","src":"19235:119:16"},{"nativeSrc":"19364:117:16","nodeType":"YulBlock","src":"19364:117:16","statements":[{"nativeSrc":"19379:15:16","nodeType":"YulVariableDeclaration","src":"19379:15:16","value":{"kind":"number","nativeSrc":"19393:1:16","nodeType":"YulLiteral","src":"19393:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19383:6:16","nodeType":"YulTypedName","src":"19383:6:16","type":""}]},{"nativeSrc":"19408:63:16","nodeType":"YulAssignment","src":"19408:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19443:9:16","nodeType":"YulIdentifier","src":"19443:9:16"},{"name":"offset","nativeSrc":"19454:6:16","nodeType":"YulIdentifier","src":"19454:6:16"}],"functionName":{"name":"add","nativeSrc":"19439:3:16","nodeType":"YulIdentifier","src":"19439:3:16"},"nativeSrc":"19439:22:16","nodeType":"YulFunctionCall","src":"19439:22:16"},{"name":"dataEnd","nativeSrc":"19463:7:16","nodeType":"YulIdentifier","src":"19463:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"19418:20:16","nodeType":"YulIdentifier","src":"19418:20:16"},"nativeSrc":"19418:53:16","nodeType":"YulFunctionCall","src":"19418:53:16"},"variableNames":[{"name":"value0","nativeSrc":"19408:6:16","nodeType":"YulIdentifier","src":"19408:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"19159:329:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19195:9:16","nodeType":"YulTypedName","src":"19195:9:16","type":""},{"name":"dataEnd","nativeSrc":"19206:7:16","nodeType":"YulTypedName","src":"19206:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19218:6:16","nodeType":"YulTypedName","src":"19218:6:16","type":""}],"src":"19159:329:16"},{"body":{"nativeSrc":"19668:1457:16","nodeType":"YulBlock","src":"19668:1457:16","statements":[{"body":{"nativeSrc":"19715:83:16","nodeType":"YulBlock","src":"19715:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19717:77:16","nodeType":"YulIdentifier","src":"19717:77:16"},"nativeSrc":"19717:79:16","nodeType":"YulFunctionCall","src":"19717:79:16"},"nativeSrc":"19717:79:16","nodeType":"YulExpressionStatement","src":"19717:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19689:7:16","nodeType":"YulIdentifier","src":"19689:7:16"},{"name":"headStart","nativeSrc":"19698:9:16","nodeType":"YulIdentifier","src":"19698:9:16"}],"functionName":{"name":"sub","nativeSrc":"19685:3:16","nodeType":"YulIdentifier","src":"19685:3:16"},"nativeSrc":"19685:23:16","nodeType":"YulFunctionCall","src":"19685:23:16"},{"kind":"number","nativeSrc":"19710:3:16","nodeType":"YulLiteral","src":"19710:3:16","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"19681:3:16","nodeType":"YulIdentifier","src":"19681:3:16"},"nativeSrc":"19681:33:16","nodeType":"YulFunctionCall","src":"19681:33:16"},"nativeSrc":"19678:120:16","nodeType":"YulIf","src":"19678:120:16"},{"nativeSrc":"19808:287:16","nodeType":"YulBlock","src":"19808:287:16","statements":[{"nativeSrc":"19823:45:16","nodeType":"YulVariableDeclaration","src":"19823:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19854:9:16","nodeType":"YulIdentifier","src":"19854:9:16"},{"kind":"number","nativeSrc":"19865:1:16","nodeType":"YulLiteral","src":"19865:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19850:3:16","nodeType":"YulIdentifier","src":"19850:3:16"},"nativeSrc":"19850:17:16","nodeType":"YulFunctionCall","src":"19850:17:16"}],"functionName":{"name":"calldataload","nativeSrc":"19837:12:16","nodeType":"YulIdentifier","src":"19837:12:16"},"nativeSrc":"19837:31:16","nodeType":"YulFunctionCall","src":"19837:31:16"},"variables":[{"name":"offset","nativeSrc":"19827:6:16","nodeType":"YulTypedName","src":"19827:6:16","type":""}]},{"body":{"nativeSrc":"19915:83:16","nodeType":"YulBlock","src":"19915:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"19917:77:16","nodeType":"YulIdentifier","src":"19917:77:16"},"nativeSrc":"19917:79:16","nodeType":"YulFunctionCall","src":"19917:79:16"},"nativeSrc":"19917:79:16","nodeType":"YulExpressionStatement","src":"19917:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"19887:6:16","nodeType":"YulIdentifier","src":"19887:6:16"},{"kind":"number","nativeSrc":"19895:18:16","nodeType":"YulLiteral","src":"19895:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"19884:2:16","nodeType":"YulIdentifier","src":"19884:2:16"},"nativeSrc":"19884:30:16","nodeType":"YulFunctionCall","src":"19884:30:16"},"nativeSrc":"19881:117:16","nodeType":"YulIf","src":"19881:117:16"},{"nativeSrc":"20012:73:16","nodeType":"YulAssignment","src":"20012:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20057:9:16","nodeType":"YulIdentifier","src":"20057:9:16"},{"name":"offset","nativeSrc":"20068:6:16","nodeType":"YulIdentifier","src":"20068:6:16"}],"functionName":{"name":"add","nativeSrc":"20053:3:16","nodeType":"YulIdentifier","src":"20053:3:16"},"nativeSrc":"20053:22:16","nodeType":"YulFunctionCall","src":"20053:22:16"},{"name":"dataEnd","nativeSrc":"20077:7:16","nodeType":"YulIdentifier","src":"20077:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"20022:30:16","nodeType":"YulIdentifier","src":"20022:30:16"},"nativeSrc":"20022:63:16","nodeType":"YulFunctionCall","src":"20022:63:16"},"variableNames":[{"name":"value0","nativeSrc":"20012:6:16","nodeType":"YulIdentifier","src":"20012:6:16"}]}]},{"nativeSrc":"20105:288:16","nodeType":"YulBlock","src":"20105:288:16","statements":[{"nativeSrc":"20120:46:16","nodeType":"YulVariableDeclaration","src":"20120:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20151:9:16","nodeType":"YulIdentifier","src":"20151:9:16"},{"kind":"number","nativeSrc":"20162:2:16","nodeType":"YulLiteral","src":"20162:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20147:3:16","nodeType":"YulIdentifier","src":"20147:3:16"},"nativeSrc":"20147:18:16","nodeType":"YulFunctionCall","src":"20147:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"20134:12:16","nodeType":"YulIdentifier","src":"20134:12:16"},"nativeSrc":"20134:32:16","nodeType":"YulFunctionCall","src":"20134:32:16"},"variables":[{"name":"offset","nativeSrc":"20124:6:16","nodeType":"YulTypedName","src":"20124:6:16","type":""}]},{"body":{"nativeSrc":"20213:83:16","nodeType":"YulBlock","src":"20213:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20215:77:16","nodeType":"YulIdentifier","src":"20215:77:16"},"nativeSrc":"20215:79:16","nodeType":"YulFunctionCall","src":"20215:79:16"},"nativeSrc":"20215:79:16","nodeType":"YulExpressionStatement","src":"20215:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20185:6:16","nodeType":"YulIdentifier","src":"20185:6:16"},{"kind":"number","nativeSrc":"20193:18:16","nodeType":"YulLiteral","src":"20193:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20182:2:16","nodeType":"YulIdentifier","src":"20182:2:16"},"nativeSrc":"20182:30:16","nodeType":"YulFunctionCall","src":"20182:30:16"},"nativeSrc":"20179:117:16","nodeType":"YulIf","src":"20179:117:16"},{"nativeSrc":"20310:73:16","nodeType":"YulAssignment","src":"20310:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20355:9:16","nodeType":"YulIdentifier","src":"20355:9:16"},{"name":"offset","nativeSrc":"20366:6:16","nodeType":"YulIdentifier","src":"20366:6:16"}],"functionName":{"name":"add","nativeSrc":"20351:3:16","nodeType":"YulIdentifier","src":"20351:3:16"},"nativeSrc":"20351:22:16","nodeType":"YulFunctionCall","src":"20351:22:16"},{"name":"dataEnd","nativeSrc":"20375:7:16","nodeType":"YulIdentifier","src":"20375:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"20320:30:16","nodeType":"YulIdentifier","src":"20320:30:16"},"nativeSrc":"20320:63:16","nodeType":"YulFunctionCall","src":"20320:63:16"},"variableNames":[{"name":"value1","nativeSrc":"20310:6:16","nodeType":"YulIdentifier","src":"20310:6:16"}]}]},{"nativeSrc":"20403:288:16","nodeType":"YulBlock","src":"20403:288:16","statements":[{"nativeSrc":"20418:46:16","nodeType":"YulVariableDeclaration","src":"20418:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20449:9:16","nodeType":"YulIdentifier","src":"20449:9:16"},{"kind":"number","nativeSrc":"20460:2:16","nodeType":"YulLiteral","src":"20460:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20445:3:16","nodeType":"YulIdentifier","src":"20445:3:16"},"nativeSrc":"20445:18:16","nodeType":"YulFunctionCall","src":"20445:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"20432:12:16","nodeType":"YulIdentifier","src":"20432:12:16"},"nativeSrc":"20432:32:16","nodeType":"YulFunctionCall","src":"20432:32:16"},"variables":[{"name":"offset","nativeSrc":"20422:6:16","nodeType":"YulTypedName","src":"20422:6:16","type":""}]},{"body":{"nativeSrc":"20511:83:16","nodeType":"YulBlock","src":"20511:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20513:77:16","nodeType":"YulIdentifier","src":"20513:77:16"},"nativeSrc":"20513:79:16","nodeType":"YulFunctionCall","src":"20513:79:16"},"nativeSrc":"20513:79:16","nodeType":"YulExpressionStatement","src":"20513:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20483:6:16","nodeType":"YulIdentifier","src":"20483:6:16"},{"kind":"number","nativeSrc":"20491:18:16","nodeType":"YulLiteral","src":"20491:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20480:2:16","nodeType":"YulIdentifier","src":"20480:2:16"},"nativeSrc":"20480:30:16","nodeType":"YulFunctionCall","src":"20480:30:16"},"nativeSrc":"20477:117:16","nodeType":"YulIf","src":"20477:117:16"},{"nativeSrc":"20608:73:16","nodeType":"YulAssignment","src":"20608:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20653:9:16","nodeType":"YulIdentifier","src":"20653:9:16"},{"name":"offset","nativeSrc":"20664:6:16","nodeType":"YulIdentifier","src":"20664:6:16"}],"functionName":{"name":"add","nativeSrc":"20649:3:16","nodeType":"YulIdentifier","src":"20649:3:16"},"nativeSrc":"20649:22:16","nodeType":"YulFunctionCall","src":"20649:22:16"},{"name":"dataEnd","nativeSrc":"20673:7:16","nodeType":"YulIdentifier","src":"20673:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"20618:30:16","nodeType":"YulIdentifier","src":"20618:30:16"},"nativeSrc":"20618:63:16","nodeType":"YulFunctionCall","src":"20618:63:16"},"variableNames":[{"name":"value2","nativeSrc":"20608:6:16","nodeType":"YulIdentifier","src":"20608:6:16"}]}]},{"nativeSrc":"20701:288:16","nodeType":"YulBlock","src":"20701:288:16","statements":[{"nativeSrc":"20716:46:16","nodeType":"YulVariableDeclaration","src":"20716:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20747:9:16","nodeType":"YulIdentifier","src":"20747:9:16"},{"kind":"number","nativeSrc":"20758:2:16","nodeType":"YulLiteral","src":"20758:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20743:3:16","nodeType":"YulIdentifier","src":"20743:3:16"},"nativeSrc":"20743:18:16","nodeType":"YulFunctionCall","src":"20743:18:16"}],"functionName":{"name":"calldataload","nativeSrc":"20730:12:16","nodeType":"YulIdentifier","src":"20730:12:16"},"nativeSrc":"20730:32:16","nodeType":"YulFunctionCall","src":"20730:32:16"},"variables":[{"name":"offset","nativeSrc":"20720:6:16","nodeType":"YulTypedName","src":"20720:6:16","type":""}]},{"body":{"nativeSrc":"20809:83:16","nodeType":"YulBlock","src":"20809:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"20811:77:16","nodeType":"YulIdentifier","src":"20811:77:16"},"nativeSrc":"20811:79:16","nodeType":"YulFunctionCall","src":"20811:79:16"},"nativeSrc":"20811:79:16","nodeType":"YulExpressionStatement","src":"20811:79:16"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"20781:6:16","nodeType":"YulIdentifier","src":"20781:6:16"},{"kind":"number","nativeSrc":"20789:18:16","nodeType":"YulLiteral","src":"20789:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20778:2:16","nodeType":"YulIdentifier","src":"20778:2:16"},"nativeSrc":"20778:30:16","nodeType":"YulFunctionCall","src":"20778:30:16"},"nativeSrc":"20775:117:16","nodeType":"YulIf","src":"20775:117:16"},{"nativeSrc":"20906:73:16","nodeType":"YulAssignment","src":"20906:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20951:9:16","nodeType":"YulIdentifier","src":"20951:9:16"},{"name":"offset","nativeSrc":"20962:6:16","nodeType":"YulIdentifier","src":"20962:6:16"}],"functionName":{"name":"add","nativeSrc":"20947:3:16","nodeType":"YulIdentifier","src":"20947:3:16"},"nativeSrc":"20947:22:16","nodeType":"YulFunctionCall","src":"20947:22:16"},{"name":"dataEnd","nativeSrc":"20971:7:16","nodeType":"YulIdentifier","src":"20971:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"20916:30:16","nodeType":"YulIdentifier","src":"20916:30:16"},"nativeSrc":"20916:63:16","nodeType":"YulFunctionCall","src":"20916:63:16"},"variableNames":[{"name":"value3","nativeSrc":"20906:6:16","nodeType":"YulIdentifier","src":"20906:6:16"}]}]},{"nativeSrc":"20999:119:16","nodeType":"YulBlock","src":"20999:119:16","statements":[{"nativeSrc":"21014:17:16","nodeType":"YulVariableDeclaration","src":"21014:17:16","value":{"kind":"number","nativeSrc":"21028:3:16","nodeType":"YulLiteral","src":"21028:3:16","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"21018:6:16","nodeType":"YulTypedName","src":"21018:6:16","type":""}]},{"nativeSrc":"21045:63:16","nodeType":"YulAssignment","src":"21045:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21080:9:16","nodeType":"YulIdentifier","src":"21080:9:16"},{"name":"offset","nativeSrc":"21091:6:16","nodeType":"YulIdentifier","src":"21091:6:16"}],"functionName":{"name":"add","nativeSrc":"21076:3:16","nodeType":"YulIdentifier","src":"21076:3:16"},"nativeSrc":"21076:22:16","nodeType":"YulFunctionCall","src":"21076:22:16"},{"name":"dataEnd","nativeSrc":"21100:7:16","nodeType":"YulIdentifier","src":"21100:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"21055:20:16","nodeType":"YulIdentifier","src":"21055:20:16"},"nativeSrc":"21055:53:16","nodeType":"YulFunctionCall","src":"21055:53:16"},"variableNames":[{"name":"value4","nativeSrc":"21045:6:16","nodeType":"YulIdentifier","src":"21045:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address","nativeSrc":"19494:1631:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19606:9:16","nodeType":"YulTypedName","src":"19606:9:16","type":""},{"name":"dataEnd","nativeSrc":"19617:7:16","nodeType":"YulTypedName","src":"19617:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19629:6:16","nodeType":"YulTypedName","src":"19629:6:16","type":""},{"name":"value1","nativeSrc":"19637:6:16","nodeType":"YulTypedName","src":"19637:6:16","type":""},{"name":"value2","nativeSrc":"19645:6:16","nodeType":"YulTypedName","src":"19645:6:16","type":""},{"name":"value3","nativeSrc":"19653:6:16","nodeType":"YulTypedName","src":"19653:6:16","type":""},{"name":"value4","nativeSrc":"19661:6:16","nodeType":"YulTypedName","src":"19661:6:16","type":""}],"src":"19494:1631:16"},{"body":{"nativeSrc":"21222:399:16","nodeType":"YulBlock","src":"21222:399:16","statements":[{"body":{"nativeSrc":"21268:83:16","nodeType":"YulBlock","src":"21268:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"21270:77:16","nodeType":"YulIdentifier","src":"21270:77:16"},"nativeSrc":"21270:79:16","nodeType":"YulFunctionCall","src":"21270:79:16"},"nativeSrc":"21270:79:16","nodeType":"YulExpressionStatement","src":"21270:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"21243:7:16","nodeType":"YulIdentifier","src":"21243:7:16"},{"name":"headStart","nativeSrc":"21252:9:16","nodeType":"YulIdentifier","src":"21252:9:16"}],"functionName":{"name":"sub","nativeSrc":"21239:3:16","nodeType":"YulIdentifier","src":"21239:3:16"},"nativeSrc":"21239:23:16","nodeType":"YulFunctionCall","src":"21239:23:16"},{"kind":"number","nativeSrc":"21264:2:16","nodeType":"YulLiteral","src":"21264:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"21235:3:16","nodeType":"YulIdentifier","src":"21235:3:16"},"nativeSrc":"21235:32:16","nodeType":"YulFunctionCall","src":"21235:32:16"},"nativeSrc":"21232:119:16","nodeType":"YulIf","src":"21232:119:16"},{"nativeSrc":"21361:117:16","nodeType":"YulBlock","src":"21361:117:16","statements":[{"nativeSrc":"21376:15:16","nodeType":"YulVariableDeclaration","src":"21376:15:16","value":{"kind":"number","nativeSrc":"21390:1:16","nodeType":"YulLiteral","src":"21390:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21380:6:16","nodeType":"YulTypedName","src":"21380:6:16","type":""}]},{"nativeSrc":"21405:63:16","nodeType":"YulAssignment","src":"21405:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21440:9:16","nodeType":"YulIdentifier","src":"21440:9:16"},{"name":"offset","nativeSrc":"21451:6:16","nodeType":"YulIdentifier","src":"21451:6:16"}],"functionName":{"name":"add","nativeSrc":"21436:3:16","nodeType":"YulIdentifier","src":"21436:3:16"},"nativeSrc":"21436:22:16","nodeType":"YulFunctionCall","src":"21436:22:16"},{"name":"dataEnd","nativeSrc":"21460:7:16","nodeType":"YulIdentifier","src":"21460:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"21415:20:16","nodeType":"YulIdentifier","src":"21415:20:16"},"nativeSrc":"21415:53:16","nodeType":"YulFunctionCall","src":"21415:53:16"},"variableNames":[{"name":"value0","nativeSrc":"21405:6:16","nodeType":"YulIdentifier","src":"21405:6:16"}]}]},{"nativeSrc":"21488:126:16","nodeType":"YulBlock","src":"21488:126:16","statements":[{"nativeSrc":"21503:16:16","nodeType":"YulVariableDeclaration","src":"21503:16:16","value":{"kind":"number","nativeSrc":"21517:2:16","nodeType":"YulLiteral","src":"21517:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"21507:6:16","nodeType":"YulTypedName","src":"21507:6:16","type":""}]},{"nativeSrc":"21533:71:16","nodeType":"YulAssignment","src":"21533:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21576:9:16","nodeType":"YulIdentifier","src":"21576:9:16"},{"name":"offset","nativeSrc":"21587:6:16","nodeType":"YulIdentifier","src":"21587:6:16"}],"functionName":{"name":"add","nativeSrc":"21572:3:16","nodeType":"YulIdentifier","src":"21572:3:16"},"nativeSrc":"21572:22:16","nodeType":"YulFunctionCall","src":"21572:22:16"},{"name":"dataEnd","nativeSrc":"21596:7:16","nodeType":"YulIdentifier","src":"21596:7:16"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"21543:28:16","nodeType":"YulIdentifier","src":"21543:28:16"},"nativeSrc":"21543:61:16","nodeType":"YulFunctionCall","src":"21543:61:16"},"variableNames":[{"name":"value1","nativeSrc":"21533:6:16","nodeType":"YulIdentifier","src":"21533:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address_payable","nativeSrc":"21131:490:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21184:9:16","nodeType":"YulTypedName","src":"21184:9:16","type":""},{"name":"dataEnd","nativeSrc":"21195:7:16","nodeType":"YulTypedName","src":"21195:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"21207:6:16","nodeType":"YulTypedName","src":"21207:6:16","type":""},{"name":"value1","nativeSrc":"21215:6:16","nodeType":"YulTypedName","src":"21215:6:16","type":""}],"src":"21131:490:16"},{"body":{"nativeSrc":"21710:391:16","nodeType":"YulBlock","src":"21710:391:16","statements":[{"body":{"nativeSrc":"21756:83:16","nodeType":"YulBlock","src":"21756:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"21758:77:16","nodeType":"YulIdentifier","src":"21758:77:16"},"nativeSrc":"21758:79:16","nodeType":"YulFunctionCall","src":"21758:79:16"},"nativeSrc":"21758:79:16","nodeType":"YulExpressionStatement","src":"21758:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"21731:7:16","nodeType":"YulIdentifier","src":"21731:7:16"},{"name":"headStart","nativeSrc":"21740:9:16","nodeType":"YulIdentifier","src":"21740:9:16"}],"functionName":{"name":"sub","nativeSrc":"21727:3:16","nodeType":"YulIdentifier","src":"21727:3:16"},"nativeSrc":"21727:23:16","nodeType":"YulFunctionCall","src":"21727:23:16"},{"kind":"number","nativeSrc":"21752:2:16","nodeType":"YulLiteral","src":"21752:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"21723:3:16","nodeType":"YulIdentifier","src":"21723:3:16"},"nativeSrc":"21723:32:16","nodeType":"YulFunctionCall","src":"21723:32:16"},"nativeSrc":"21720:119:16","nodeType":"YulIf","src":"21720:119:16"},{"nativeSrc":"21849:117:16","nodeType":"YulBlock","src":"21849:117:16","statements":[{"nativeSrc":"21864:15:16","nodeType":"YulVariableDeclaration","src":"21864:15:16","value":{"kind":"number","nativeSrc":"21878:1:16","nodeType":"YulLiteral","src":"21878:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"21868:6:16","nodeType":"YulTypedName","src":"21868:6:16","type":""}]},{"nativeSrc":"21893:63:16","nodeType":"YulAssignment","src":"21893:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21928:9:16","nodeType":"YulIdentifier","src":"21928:9:16"},{"name":"offset","nativeSrc":"21939:6:16","nodeType":"YulIdentifier","src":"21939:6:16"}],"functionName":{"name":"add","nativeSrc":"21924:3:16","nodeType":"YulIdentifier","src":"21924:3:16"},"nativeSrc":"21924:22:16","nodeType":"YulFunctionCall","src":"21924:22:16"},{"name":"dataEnd","nativeSrc":"21948:7:16","nodeType":"YulIdentifier","src":"21948:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"21903:20:16","nodeType":"YulIdentifier","src":"21903:20:16"},"nativeSrc":"21903:53:16","nodeType":"YulFunctionCall","src":"21903:53:16"},"variableNames":[{"name":"value0","nativeSrc":"21893:6:16","nodeType":"YulIdentifier","src":"21893:6:16"}]}]},{"nativeSrc":"21976:118:16","nodeType":"YulBlock","src":"21976:118:16","statements":[{"nativeSrc":"21991:16:16","nodeType":"YulVariableDeclaration","src":"21991:16:16","value":{"kind":"number","nativeSrc":"22005:2:16","nodeType":"YulLiteral","src":"22005:2:16","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"21995:6:16","nodeType":"YulTypedName","src":"21995:6:16","type":""}]},{"nativeSrc":"22021:63:16","nodeType":"YulAssignment","src":"22021:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22056:9:16","nodeType":"YulIdentifier","src":"22056:9:16"},{"name":"offset","nativeSrc":"22067:6:16","nodeType":"YulIdentifier","src":"22067:6:16"}],"functionName":{"name":"add","nativeSrc":"22052:3:16","nodeType":"YulIdentifier","src":"22052:3:16"},"nativeSrc":"22052:22:16","nodeType":"YulFunctionCall","src":"22052:22:16"},{"name":"dataEnd","nativeSrc":"22076:7:16","nodeType":"YulIdentifier","src":"22076:7:16"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"22031:20:16","nodeType":"YulIdentifier","src":"22031:20:16"},"nativeSrc":"22031:53:16","nodeType":"YulFunctionCall","src":"22031:53:16"},"variableNames":[{"name":"value1","nativeSrc":"22021:6:16","nodeType":"YulIdentifier","src":"22021:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"21627:474:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21672:9:16","nodeType":"YulTypedName","src":"21672:9:16","type":""},{"name":"dataEnd","nativeSrc":"21683:7:16","nodeType":"YulTypedName","src":"21683:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"21695:6:16","nodeType":"YulTypedName","src":"21695:6:16","type":""},{"name":"value1","nativeSrc":"21703:6:16","nodeType":"YulTypedName","src":"21703:6:16","type":""}],"src":"21627:474:16"},{"body":{"nativeSrc":"22221:34:16","nodeType":"YulBlock","src":"22221:34:16","statements":[{"nativeSrc":"22231:18:16","nodeType":"YulAssignment","src":"22231:18:16","value":{"name":"pos","nativeSrc":"22246:3:16","nodeType":"YulIdentifier","src":"22246:3:16"},"variableNames":[{"name":"updated_pos","nativeSrc":"22231:11:16","nodeType":"YulIdentifier","src":"22231:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22107:148:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22193:3:16","nodeType":"YulTypedName","src":"22193:3:16","type":""},{"name":"length","nativeSrc":"22198:6:16","nodeType":"YulTypedName","src":"22198:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"22209:11:16","nodeType":"YulTypedName","src":"22209:11:16","type":""}],"src":"22107:148:16"},{"body":{"nativeSrc":"22371:280:16","nodeType":"YulBlock","src":"22371:280:16","statements":[{"nativeSrc":"22381:53:16","nodeType":"YulVariableDeclaration","src":"22381:53:16","value":{"arguments":[{"name":"value","nativeSrc":"22428:5:16","nodeType":"YulIdentifier","src":"22428:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"22395:32:16","nodeType":"YulIdentifier","src":"22395:32:16"},"nativeSrc":"22395:39:16","nodeType":"YulFunctionCall","src":"22395:39:16"},"variables":[{"name":"length","nativeSrc":"22385:6:16","nodeType":"YulTypedName","src":"22385:6:16","type":""}]},{"nativeSrc":"22443:96:16","nodeType":"YulAssignment","src":"22443:96:16","value":{"arguments":[{"name":"pos","nativeSrc":"22527:3:16","nodeType":"YulIdentifier","src":"22527:3:16"},{"name":"length","nativeSrc":"22532:6:16","nodeType":"YulIdentifier","src":"22532:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22450:76:16","nodeType":"YulIdentifier","src":"22450:76:16"},"nativeSrc":"22450:89:16","nodeType":"YulFunctionCall","src":"22450:89:16"},"variableNames":[{"name":"pos","nativeSrc":"22443:3:16","nodeType":"YulIdentifier","src":"22443:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22587:5:16","nodeType":"YulIdentifier","src":"22587:5:16"},{"kind":"number","nativeSrc":"22594:4:16","nodeType":"YulLiteral","src":"22594:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22583:3:16","nodeType":"YulIdentifier","src":"22583:3:16"},"nativeSrc":"22583:16:16","nodeType":"YulFunctionCall","src":"22583:16:16"},{"name":"pos","nativeSrc":"22601:3:16","nodeType":"YulIdentifier","src":"22601:3:16"},{"name":"length","nativeSrc":"22606:6:16","nodeType":"YulIdentifier","src":"22606:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"22548:34:16","nodeType":"YulIdentifier","src":"22548:34:16"},"nativeSrc":"22548:65:16","nodeType":"YulFunctionCall","src":"22548:65:16"},"nativeSrc":"22548:65:16","nodeType":"YulExpressionStatement","src":"22548:65:16"},{"nativeSrc":"22622:23:16","nodeType":"YulAssignment","src":"22622:23:16","value":{"arguments":[{"name":"pos","nativeSrc":"22633:3:16","nodeType":"YulIdentifier","src":"22633:3:16"},{"name":"length","nativeSrc":"22638:6:16","nodeType":"YulIdentifier","src":"22638:6:16"}],"functionName":{"name":"add","nativeSrc":"22629:3:16","nodeType":"YulIdentifier","src":"22629:3:16"},"nativeSrc":"22629:16:16","nodeType":"YulFunctionCall","src":"22629:16:16"},"variableNames":[{"name":"end","nativeSrc":"22622:3:16","nodeType":"YulIdentifier","src":"22622:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22261:390:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22352:5:16","nodeType":"YulTypedName","src":"22352:5:16","type":""},{"name":"pos","nativeSrc":"22359:3:16","nodeType":"YulTypedName","src":"22359:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22367:3:16","nodeType":"YulTypedName","src":"22367:3:16","type":""}],"src":"22261:390:16"},{"body":{"nativeSrc":"22793:139:16","nodeType":"YulBlock","src":"22793:139:16","statements":[{"nativeSrc":"22804:102:16","nodeType":"YulAssignment","src":"22804:102:16","value":{"arguments":[{"name":"value0","nativeSrc":"22893:6:16","nodeType":"YulIdentifier","src":"22893:6:16"},{"name":"pos","nativeSrc":"22902:3:16","nodeType":"YulIdentifier","src":"22902:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22811:81:16","nodeType":"YulIdentifier","src":"22811:81:16"},"nativeSrc":"22811:95:16","nodeType":"YulFunctionCall","src":"22811:95:16"},"variableNames":[{"name":"pos","nativeSrc":"22804:3:16","nodeType":"YulIdentifier","src":"22804:3:16"}]},{"nativeSrc":"22916:10:16","nodeType":"YulAssignment","src":"22916:10:16","value":{"name":"pos","nativeSrc":"22923:3:16","nodeType":"YulIdentifier","src":"22923:3:16"},"variableNames":[{"name":"end","nativeSrc":"22916:3:16","nodeType":"YulIdentifier","src":"22916:3:16"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"22657:275:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22772:3:16","nodeType":"YulTypedName","src":"22772:3:16","type":""},{"name":"value0","nativeSrc":"22778:6:16","nodeType":"YulTypedName","src":"22778:6:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22789:3:16","nodeType":"YulTypedName","src":"22789:3:16","type":""}],"src":"22657:275:16"},{"body":{"nativeSrc":"22966:152:16","nodeType":"YulBlock","src":"22966:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22983:1:16","nodeType":"YulLiteral","src":"22983:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"22986:77:16","nodeType":"YulLiteral","src":"22986:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"22976:6:16","nodeType":"YulIdentifier","src":"22976:6:16"},"nativeSrc":"22976:88:16","nodeType":"YulFunctionCall","src":"22976:88:16"},"nativeSrc":"22976:88:16","nodeType":"YulExpressionStatement","src":"22976:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23080:1:16","nodeType":"YulLiteral","src":"23080:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"23083:4:16","nodeType":"YulLiteral","src":"23083:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"23073:6:16","nodeType":"YulIdentifier","src":"23073:6:16"},"nativeSrc":"23073:15:16","nodeType":"YulFunctionCall","src":"23073:15:16"},"nativeSrc":"23073:15:16","nodeType":"YulExpressionStatement","src":"23073:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23104:1:16","nodeType":"YulLiteral","src":"23104:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"23107:4:16","nodeType":"YulLiteral","src":"23107:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"23097:6:16","nodeType":"YulIdentifier","src":"23097:6:16"},"nativeSrc":"23097:15:16","nodeType":"YulFunctionCall","src":"23097:15:16"},"nativeSrc":"23097:15:16","nodeType":"YulExpressionStatement","src":"23097:15:16"}]},"name":"panic_error_0x22","nativeSrc":"22938:180:16","nodeType":"YulFunctionDefinition","src":"22938:180:16"},{"body":{"nativeSrc":"23175:269:16","nodeType":"YulBlock","src":"23175:269:16","statements":[{"nativeSrc":"23185:22:16","nodeType":"YulAssignment","src":"23185:22:16","value":{"arguments":[{"name":"data","nativeSrc":"23199:4:16","nodeType":"YulIdentifier","src":"23199:4:16"},{"kind":"number","nativeSrc":"23205:1:16","nodeType":"YulLiteral","src":"23205:1:16","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"23195:3:16","nodeType":"YulIdentifier","src":"23195:3:16"},"nativeSrc":"23195:12:16","nodeType":"YulFunctionCall","src":"23195:12:16"},"variableNames":[{"name":"length","nativeSrc":"23185:6:16","nodeType":"YulIdentifier","src":"23185:6:16"}]},{"nativeSrc":"23216:38:16","nodeType":"YulVariableDeclaration","src":"23216:38:16","value":{"arguments":[{"name":"data","nativeSrc":"23246:4:16","nodeType":"YulIdentifier","src":"23246:4:16"},{"kind":"number","nativeSrc":"23252:1:16","nodeType":"YulLiteral","src":"23252:1:16","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"23242:3:16","nodeType":"YulIdentifier","src":"23242:3:16"},"nativeSrc":"23242:12:16","nodeType":"YulFunctionCall","src":"23242:12:16"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"23220:18:16","nodeType":"YulTypedName","src":"23220:18:16","type":""}]},{"body":{"nativeSrc":"23293:51:16","nodeType":"YulBlock","src":"23293:51:16","statements":[{"nativeSrc":"23307:27:16","nodeType":"YulAssignment","src":"23307:27:16","value":{"arguments":[{"name":"length","nativeSrc":"23321:6:16","nodeType":"YulIdentifier","src":"23321:6:16"},{"kind":"number","nativeSrc":"23329:4:16","nodeType":"YulLiteral","src":"23329:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"23317:3:16","nodeType":"YulIdentifier","src":"23317:3:16"},"nativeSrc":"23317:17:16","nodeType":"YulFunctionCall","src":"23317:17:16"},"variableNames":[{"name":"length","nativeSrc":"23307:6:16","nodeType":"YulIdentifier","src":"23307:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"23273:18:16","nodeType":"YulIdentifier","src":"23273:18:16"}],"functionName":{"name":"iszero","nativeSrc":"23266:6:16","nodeType":"YulIdentifier","src":"23266:6:16"},"nativeSrc":"23266:26:16","nodeType":"YulFunctionCall","src":"23266:26:16"},"nativeSrc":"23263:81:16","nodeType":"YulIf","src":"23263:81:16"},{"body":{"nativeSrc":"23396:42:16","nodeType":"YulBlock","src":"23396:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"23410:16:16","nodeType":"YulIdentifier","src":"23410:16:16"},"nativeSrc":"23410:18:16","nodeType":"YulFunctionCall","src":"23410:18:16"},"nativeSrc":"23410:18:16","nodeType":"YulExpressionStatement","src":"23410:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"23360:18:16","nodeType":"YulIdentifier","src":"23360:18:16"},{"arguments":[{"name":"length","nativeSrc":"23383:6:16","nodeType":"YulIdentifier","src":"23383:6:16"},{"kind":"number","nativeSrc":"23391:2:16","nodeType":"YulLiteral","src":"23391:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"23380:2:16","nodeType":"YulIdentifier","src":"23380:2:16"},"nativeSrc":"23380:14:16","nodeType":"YulFunctionCall","src":"23380:14:16"}],"functionName":{"name":"eq","nativeSrc":"23357:2:16","nodeType":"YulIdentifier","src":"23357:2:16"},"nativeSrc":"23357:38:16","nodeType":"YulFunctionCall","src":"23357:38:16"},"nativeSrc":"23354:84:16","nodeType":"YulIf","src":"23354:84:16"}]},"name":"extract_byte_array_length","nativeSrc":"23124:320:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"23159:4:16","nodeType":"YulTypedName","src":"23159:4:16","type":""}],"returnVariables":[{"name":"length","nativeSrc":"23168:6:16","nodeType":"YulTypedName","src":"23168:6:16","type":""}],"src":"23124:320:16"},{"body":{"nativeSrc":"23478:152:16","nodeType":"YulBlock","src":"23478:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23495:1:16","nodeType":"YulLiteral","src":"23495:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"23498:77:16","nodeType":"YulLiteral","src":"23498:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"23488:6:16","nodeType":"YulIdentifier","src":"23488:6:16"},"nativeSrc":"23488:88:16","nodeType":"YulFunctionCall","src":"23488:88:16"},"nativeSrc":"23488:88:16","nodeType":"YulExpressionStatement","src":"23488:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23592:1:16","nodeType":"YulLiteral","src":"23592:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"23595:4:16","nodeType":"YulLiteral","src":"23595:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"23585:6:16","nodeType":"YulIdentifier","src":"23585:6:16"},"nativeSrc":"23585:15:16","nodeType":"YulFunctionCall","src":"23585:15:16"},"nativeSrc":"23585:15:16","nodeType":"YulExpressionStatement","src":"23585:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23616:1:16","nodeType":"YulLiteral","src":"23616:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"23619:4:16","nodeType":"YulLiteral","src":"23619:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"23609:6:16","nodeType":"YulIdentifier","src":"23609:6:16"},"nativeSrc":"23609:15:16","nodeType":"YulFunctionCall","src":"23609:15:16"},"nativeSrc":"23609:15:16","nodeType":"YulExpressionStatement","src":"23609:15:16"}]},"name":"panic_error_0x11","nativeSrc":"23450:180:16","nodeType":"YulFunctionDefinition","src":"23450:180:16"},{"body":{"nativeSrc":"23680:147:16","nodeType":"YulBlock","src":"23680:147:16","statements":[{"nativeSrc":"23690:25:16","nodeType":"YulAssignment","src":"23690:25:16","value":{"arguments":[{"name":"x","nativeSrc":"23713:1:16","nodeType":"YulIdentifier","src":"23713:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"23695:17:16","nodeType":"YulIdentifier","src":"23695:17:16"},"nativeSrc":"23695:20:16","nodeType":"YulFunctionCall","src":"23695:20:16"},"variableNames":[{"name":"x","nativeSrc":"23690:1:16","nodeType":"YulIdentifier","src":"23690:1:16"}]},{"nativeSrc":"23724:25:16","nodeType":"YulAssignment","src":"23724:25:16","value":{"arguments":[{"name":"y","nativeSrc":"23747:1:16","nodeType":"YulIdentifier","src":"23747:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"23729:17:16","nodeType":"YulIdentifier","src":"23729:17:16"},"nativeSrc":"23729:20:16","nodeType":"YulFunctionCall","src":"23729:20:16"},"variableNames":[{"name":"y","nativeSrc":"23724:1:16","nodeType":"YulIdentifier","src":"23724:1:16"}]},{"nativeSrc":"23758:16:16","nodeType":"YulAssignment","src":"23758:16:16","value":{"arguments":[{"name":"x","nativeSrc":"23769:1:16","nodeType":"YulIdentifier","src":"23769:1:16"},{"name":"y","nativeSrc":"23772:1:16","nodeType":"YulIdentifier","src":"23772:1:16"}],"functionName":{"name":"add","nativeSrc":"23765:3:16","nodeType":"YulIdentifier","src":"23765:3:16"},"nativeSrc":"23765:9:16","nodeType":"YulFunctionCall","src":"23765:9:16"},"variableNames":[{"name":"sum","nativeSrc":"23758:3:16","nodeType":"YulIdentifier","src":"23758:3:16"}]},{"body":{"nativeSrc":"23798:22:16","nodeType":"YulBlock","src":"23798:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"23800:16:16","nodeType":"YulIdentifier","src":"23800:16:16"},"nativeSrc":"23800:18:16","nodeType":"YulFunctionCall","src":"23800:18:16"},"nativeSrc":"23800:18:16","nodeType":"YulExpressionStatement","src":"23800:18:16"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"23790:1:16","nodeType":"YulIdentifier","src":"23790:1:16"},{"name":"sum","nativeSrc":"23793:3:16","nodeType":"YulIdentifier","src":"23793:3:16"}],"functionName":{"name":"gt","nativeSrc":"23787:2:16","nodeType":"YulIdentifier","src":"23787:2:16"},"nativeSrc":"23787:10:16","nodeType":"YulFunctionCall","src":"23787:10:16"},"nativeSrc":"23784:36:16","nodeType":"YulIf","src":"23784:36:16"}]},"name":"checked_add_t_uint256","nativeSrc":"23636:191:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"23667:1:16","nodeType":"YulTypedName","src":"23667:1:16","type":""},{"name":"y","nativeSrc":"23670:1:16","nodeType":"YulTypedName","src":"23670:1:16","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"23676:3:16","nodeType":"YulTypedName","src":"23676:3:16","type":""}],"src":"23636:191:16"},{"body":{"nativeSrc":"23887:87:16","nodeType":"YulBlock","src":"23887:87:16","statements":[{"nativeSrc":"23897:11:16","nodeType":"YulAssignment","src":"23897:11:16","value":{"name":"ptr","nativeSrc":"23905:3:16","nodeType":"YulIdentifier","src":"23905:3:16"},"variableNames":[{"name":"data","nativeSrc":"23897:4:16","nodeType":"YulIdentifier","src":"23897:4:16"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23925:1:16","nodeType":"YulLiteral","src":"23925:1:16","type":"","value":"0"},{"name":"ptr","nativeSrc":"23928:3:16","nodeType":"YulIdentifier","src":"23928:3:16"}],"functionName":{"name":"mstore","nativeSrc":"23918:6:16","nodeType":"YulIdentifier","src":"23918:6:16"},"nativeSrc":"23918:14:16","nodeType":"YulFunctionCall","src":"23918:14:16"},"nativeSrc":"23918:14:16","nodeType":"YulExpressionStatement","src":"23918:14:16"},{"nativeSrc":"23941:26:16","nodeType":"YulAssignment","src":"23941:26:16","value":{"arguments":[{"kind":"number","nativeSrc":"23959:1:16","nodeType":"YulLiteral","src":"23959:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"23962:4:16","nodeType":"YulLiteral","src":"23962:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"23949:9:16","nodeType":"YulIdentifier","src":"23949:9:16"},"nativeSrc":"23949:18:16","nodeType":"YulFunctionCall","src":"23949:18:16"},"variableNames":[{"name":"data","nativeSrc":"23941:4:16","nodeType":"YulIdentifier","src":"23941:4:16"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"23833:141:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"23874:3:16","nodeType":"YulTypedName","src":"23874:3:16","type":""}],"returnVariables":[{"name":"data","nativeSrc":"23882:4:16","nodeType":"YulTypedName","src":"23882:4:16","type":""}],"src":"23833:141:16"},{"body":{"nativeSrc":"24111:767:16","nodeType":"YulBlock","src":"24111:767:16","statements":[{"nativeSrc":"24121:29:16","nodeType":"YulVariableDeclaration","src":"24121:29:16","value":{"arguments":[{"name":"value","nativeSrc":"24144:5:16","nodeType":"YulIdentifier","src":"24144:5:16"}],"functionName":{"name":"sload","nativeSrc":"24138:5:16","nodeType":"YulIdentifier","src":"24138:5:16"},"nativeSrc":"24138:12:16","nodeType":"YulFunctionCall","src":"24138:12:16"},"variables":[{"name":"slotValue","nativeSrc":"24125:9:16","nodeType":"YulTypedName","src":"24125:9:16","type":""}]},{"nativeSrc":"24159:50:16","nodeType":"YulVariableDeclaration","src":"24159:50:16","value":{"arguments":[{"name":"slotValue","nativeSrc":"24199:9:16","nodeType":"YulIdentifier","src":"24199:9:16"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"24173:25:16","nodeType":"YulIdentifier","src":"24173:25:16"},"nativeSrc":"24173:36:16","nodeType":"YulFunctionCall","src":"24173:36:16"},"variables":[{"name":"length","nativeSrc":"24163:6:16","nodeType":"YulTypedName","src":"24163:6:16","type":""}]},{"nativeSrc":"24218:96:16","nodeType":"YulAssignment","src":"24218:96:16","value":{"arguments":[{"name":"pos","nativeSrc":"24302:3:16","nodeType":"YulIdentifier","src":"24302:3:16"},{"name":"length","nativeSrc":"24307:6:16","nodeType":"YulIdentifier","src":"24307:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"24225:76:16","nodeType":"YulIdentifier","src":"24225:76:16"},"nativeSrc":"24225:89:16","nodeType":"YulFunctionCall","src":"24225:89:16"},"variableNames":[{"name":"pos","nativeSrc":"24218:3:16","nodeType":"YulIdentifier","src":"24218:3:16"}]},{"cases":[{"body":{"nativeSrc":"24363:159:16","nodeType":"YulBlock","src":"24363:159:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24416:3:16","nodeType":"YulIdentifier","src":"24416:3:16"},{"arguments":[{"name":"slotValue","nativeSrc":"24425:9:16","nodeType":"YulIdentifier","src":"24425:9:16"},{"arguments":[{"kind":"number","nativeSrc":"24440:4:16","nodeType":"YulLiteral","src":"24440:4:16","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"24436:3:16","nodeType":"YulIdentifier","src":"24436:3:16"},"nativeSrc":"24436:9:16","nodeType":"YulFunctionCall","src":"24436:9:16"}],"functionName":{"name":"and","nativeSrc":"24421:3:16","nodeType":"YulIdentifier","src":"24421:3:16"},"nativeSrc":"24421:25:16","nodeType":"YulFunctionCall","src":"24421:25:16"}],"functionName":{"name":"mstore","nativeSrc":"24409:6:16","nodeType":"YulIdentifier","src":"24409:6:16"},"nativeSrc":"24409:38:16","nodeType":"YulFunctionCall","src":"24409:38:16"},"nativeSrc":"24409:38:16","nodeType":"YulExpressionStatement","src":"24409:38:16"},{"nativeSrc":"24460:52:16","nodeType":"YulAssignment","src":"24460:52:16","value":{"arguments":[{"name":"pos","nativeSrc":"24471:3:16","nodeType":"YulIdentifier","src":"24471:3:16"},{"arguments":[{"name":"length","nativeSrc":"24480:6:16","nodeType":"YulIdentifier","src":"24480:6:16"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"24502:6:16","nodeType":"YulIdentifier","src":"24502:6:16"}],"functionName":{"name":"iszero","nativeSrc":"24495:6:16","nodeType":"YulIdentifier","src":"24495:6:16"},"nativeSrc":"24495:14:16","nodeType":"YulFunctionCall","src":"24495:14:16"}],"functionName":{"name":"iszero","nativeSrc":"24488:6:16","nodeType":"YulIdentifier","src":"24488:6:16"},"nativeSrc":"24488:22:16","nodeType":"YulFunctionCall","src":"24488:22:16"}],"functionName":{"name":"mul","nativeSrc":"24476:3:16","nodeType":"YulIdentifier","src":"24476:3:16"},"nativeSrc":"24476:35:16","nodeType":"YulFunctionCall","src":"24476:35:16"}],"functionName":{"name":"add","nativeSrc":"24467:3:16","nodeType":"YulIdentifier","src":"24467:3:16"},"nativeSrc":"24467:45:16","nodeType":"YulFunctionCall","src":"24467:45:16"},"variableNames":[{"name":"ret","nativeSrc":"24460:3:16","nodeType":"YulIdentifier","src":"24460:3:16"}]}]},"nativeSrc":"24356:166:16","nodeType":"YulCase","src":"24356:166:16","value":{"kind":"number","nativeSrc":"24361:1:16","nodeType":"YulLiteral","src":"24361:1:16","type":"","value":"0"}},{"body":{"nativeSrc":"24538:334:16","nodeType":"YulBlock","src":"24538:334:16","statements":[{"nativeSrc":"24583:53:16","nodeType":"YulVariableDeclaration","src":"24583:53:16","value":{"arguments":[{"name":"value","nativeSrc":"24630:5:16","nodeType":"YulIdentifier","src":"24630:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"24598:31:16","nodeType":"YulIdentifier","src":"24598:31:16"},"nativeSrc":"24598:38:16","nodeType":"YulFunctionCall","src":"24598:38:16"},"variables":[{"name":"dataPos","nativeSrc":"24587:7:16","nodeType":"YulTypedName","src":"24587:7:16","type":""}]},{"nativeSrc":"24649:10:16","nodeType":"YulVariableDeclaration","src":"24649:10:16","value":{"kind":"number","nativeSrc":"24658:1:16","nodeType":"YulLiteral","src":"24658:1:16","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"24653:1:16","nodeType":"YulTypedName","src":"24653:1:16","type":""}]},{"body":{"nativeSrc":"24716:110:16","nodeType":"YulBlock","src":"24716:110:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"24745:3:16","nodeType":"YulIdentifier","src":"24745:3:16"},{"name":"i","nativeSrc":"24750:1:16","nodeType":"YulIdentifier","src":"24750:1:16"}],"functionName":{"name":"add","nativeSrc":"24741:3:16","nodeType":"YulIdentifier","src":"24741:3:16"},"nativeSrc":"24741:11:16","nodeType":"YulFunctionCall","src":"24741:11:16"},{"arguments":[{"name":"dataPos","nativeSrc":"24760:7:16","nodeType":"YulIdentifier","src":"24760:7:16"}],"functionName":{"name":"sload","nativeSrc":"24754:5:16","nodeType":"YulIdentifier","src":"24754:5:16"},"nativeSrc":"24754:14:16","nodeType":"YulFunctionCall","src":"24754:14:16"}],"functionName":{"name":"mstore","nativeSrc":"24734:6:16","nodeType":"YulIdentifier","src":"24734:6:16"},"nativeSrc":"24734:35:16","nodeType":"YulFunctionCall","src":"24734:35:16"},"nativeSrc":"24734:35:16","nodeType":"YulExpressionStatement","src":"24734:35:16"},{"nativeSrc":"24786:26:16","nodeType":"YulAssignment","src":"24786:26:16","value":{"arguments":[{"name":"dataPos","nativeSrc":"24801:7:16","nodeType":"YulIdentifier","src":"24801:7:16"},{"kind":"number","nativeSrc":"24810:1:16","nodeType":"YulLiteral","src":"24810:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"24797:3:16","nodeType":"YulIdentifier","src":"24797:3:16"},"nativeSrc":"24797:15:16","nodeType":"YulFunctionCall","src":"24797:15:16"},"variableNames":[{"name":"dataPos","nativeSrc":"24786:7:16","nodeType":"YulIdentifier","src":"24786:7:16"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"24683:1:16","nodeType":"YulIdentifier","src":"24683:1:16"},{"name":"length","nativeSrc":"24686:6:16","nodeType":"YulIdentifier","src":"24686:6:16"}],"functionName":{"name":"lt","nativeSrc":"24680:2:16","nodeType":"YulIdentifier","src":"24680:2:16"},"nativeSrc":"24680:13:16","nodeType":"YulFunctionCall","src":"24680:13:16"},"nativeSrc":"24672:154:16","nodeType":"YulForLoop","post":{"nativeSrc":"24694:21:16","nodeType":"YulBlock","src":"24694:21:16","statements":[{"nativeSrc":"24696:17:16","nodeType":"YulAssignment","src":"24696:17:16","value":{"arguments":[{"name":"i","nativeSrc":"24705:1:16","nodeType":"YulIdentifier","src":"24705:1:16"},{"kind":"number","nativeSrc":"24708:4:16","nodeType":"YulLiteral","src":"24708:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"24701:3:16","nodeType":"YulIdentifier","src":"24701:3:16"},"nativeSrc":"24701:12:16","nodeType":"YulFunctionCall","src":"24701:12:16"},"variableNames":[{"name":"i","nativeSrc":"24696:1:16","nodeType":"YulIdentifier","src":"24696:1:16"}]}]},"pre":{"nativeSrc":"24676:3:16","nodeType":"YulBlock","src":"24676:3:16","statements":[]},"src":"24672:154:16"},{"nativeSrc":"24839:23:16","nodeType":"YulAssignment","src":"24839:23:16","value":{"arguments":[{"name":"pos","nativeSrc":"24850:3:16","nodeType":"YulIdentifier","src":"24850:3:16"},{"name":"length","nativeSrc":"24855:6:16","nodeType":"YulIdentifier","src":"24855:6:16"}],"functionName":{"name":"add","nativeSrc":"24846:3:16","nodeType":"YulIdentifier","src":"24846:3:16"},"nativeSrc":"24846:16:16","nodeType":"YulFunctionCall","src":"24846:16:16"},"variableNames":[{"name":"ret","nativeSrc":"24839:3:16","nodeType":"YulIdentifier","src":"24839:3:16"}]}]},"nativeSrc":"24531:341:16","nodeType":"YulCase","src":"24531:341:16","value":{"kind":"number","nativeSrc":"24536:1:16","nodeType":"YulLiteral","src":"24536:1:16","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nativeSrc":"24334:9:16","nodeType":"YulIdentifier","src":"24334:9:16"},{"kind":"number","nativeSrc":"24345:1:16","nodeType":"YulLiteral","src":"24345:1:16","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"24330:3:16","nodeType":"YulIdentifier","src":"24330:3:16"},"nativeSrc":"24330:17:16","nodeType":"YulFunctionCall","src":"24330:17:16"},"nativeSrc":"24323:549:16","nodeType":"YulSwitch","src":"24323:549:16"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"24004:874:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24092:5:16","nodeType":"YulTypedName","src":"24092:5:16","type":""},{"name":"pos","nativeSrc":"24099:3:16","nodeType":"YulTypedName","src":"24099:3:16","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"24107:3:16","nodeType":"YulTypedName","src":"24107:3:16","type":""}],"src":"24004:874:16"},{"body":{"nativeSrc":"25017:136:16","nodeType":"YulBlock","src":"25017:136:16","statements":[{"nativeSrc":"25028:99:16","nodeType":"YulAssignment","src":"25028:99:16","value":{"arguments":[{"name":"value0","nativeSrc":"25114:6:16","nodeType":"YulIdentifier","src":"25114:6:16"},{"name":"pos","nativeSrc":"25123:3:16","nodeType":"YulIdentifier","src":"25123:3:16"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"25035:78:16","nodeType":"YulIdentifier","src":"25035:78:16"},"nativeSrc":"25035:92:16","nodeType":"YulFunctionCall","src":"25035:92:16"},"variableNames":[{"name":"pos","nativeSrc":"25028:3:16","nodeType":"YulIdentifier","src":"25028:3:16"}]},{"nativeSrc":"25137:10:16","nodeType":"YulAssignment","src":"25137:10:16","value":{"name":"pos","nativeSrc":"25144:3:16","nodeType":"YulIdentifier","src":"25144:3:16"},"variableNames":[{"name":"end","nativeSrc":"25137:3:16","nodeType":"YulIdentifier","src":"25137:3:16"}]}]},"name":"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"24884:269:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24996:3:16","nodeType":"YulTypedName","src":"24996:3:16","type":""},{"name":"value0","nativeSrc":"25002:6:16","nodeType":"YulTypedName","src":"25002:6:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25013:3:16","nodeType":"YulTypedName","src":"25013:3:16","type":""}],"src":"24884:269:16"},{"body":{"nativeSrc":"25201:52:16","nodeType":"YulBlock","src":"25201:52:16","statements":[{"nativeSrc":"25211:35:16","nodeType":"YulAssignment","src":"25211:35:16","value":{"arguments":[{"kind":"number","nativeSrc":"25236:2:16","nodeType":"YulLiteral","src":"25236:2:16","type":"","value":"96"},{"name":"value","nativeSrc":"25240:5:16","nodeType":"YulIdentifier","src":"25240:5:16"}],"functionName":{"name":"shl","nativeSrc":"25232:3:16","nodeType":"YulIdentifier","src":"25232:3:16"},"nativeSrc":"25232:14:16","nodeType":"YulFunctionCall","src":"25232:14:16"},"variableNames":[{"name":"newValue","nativeSrc":"25211:8:16","nodeType":"YulIdentifier","src":"25211:8:16"}]}]},"name":"shift_left_96","nativeSrc":"25159:94:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25182:5:16","nodeType":"YulTypedName","src":"25182:5:16","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"25192:8:16","nodeType":"YulTypedName","src":"25192:8:16","type":""}],"src":"25159:94:16"},{"body":{"nativeSrc":"25306:47:16","nodeType":"YulBlock","src":"25306:47:16","statements":[{"nativeSrc":"25316:31:16","nodeType":"YulAssignment","src":"25316:31:16","value":{"arguments":[{"name":"value","nativeSrc":"25341:5:16","nodeType":"YulIdentifier","src":"25341:5:16"}],"functionName":{"name":"shift_left_96","nativeSrc":"25327:13:16","nodeType":"YulIdentifier","src":"25327:13:16"},"nativeSrc":"25327:20:16","nodeType":"YulFunctionCall","src":"25327:20:16"},"variableNames":[{"name":"aligned","nativeSrc":"25316:7:16","nodeType":"YulIdentifier","src":"25316:7:16"}]}]},"name":"leftAlign_t_uint160","nativeSrc":"25259:94:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25288:5:16","nodeType":"YulTypedName","src":"25288:5:16","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"25298:7:16","nodeType":"YulTypedName","src":"25298:7:16","type":""}],"src":"25259:94:16"},{"body":{"nativeSrc":"25406:53:16","nodeType":"YulBlock","src":"25406:53:16","statements":[{"nativeSrc":"25416:37:16","nodeType":"YulAssignment","src":"25416:37:16","value":{"arguments":[{"name":"value","nativeSrc":"25447:5:16","nodeType":"YulIdentifier","src":"25447:5:16"}],"functionName":{"name":"leftAlign_t_uint160","nativeSrc":"25427:19:16","nodeType":"YulIdentifier","src":"25427:19:16"},"nativeSrc":"25427:26:16","nodeType":"YulFunctionCall","src":"25427:26:16"},"variableNames":[{"name":"aligned","nativeSrc":"25416:7:16","nodeType":"YulIdentifier","src":"25416:7:16"}]}]},"name":"leftAlign_t_address","nativeSrc":"25359:100:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25388:5:16","nodeType":"YulTypedName","src":"25388:5:16","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"25398:7:16","nodeType":"YulTypedName","src":"25398:7:16","type":""}],"src":"25359:100:16"},{"body":{"nativeSrc":"25548:74:16","nodeType":"YulBlock","src":"25548:74:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"25565:3:16","nodeType":"YulIdentifier","src":"25565:3:16"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"25608:5:16","nodeType":"YulIdentifier","src":"25608:5:16"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"25590:17:16","nodeType":"YulIdentifier","src":"25590:17:16"},"nativeSrc":"25590:24:16","nodeType":"YulFunctionCall","src":"25590:24:16"}],"functionName":{"name":"leftAlign_t_address","nativeSrc":"25570:19:16","nodeType":"YulIdentifier","src":"25570:19:16"},"nativeSrc":"25570:45:16","nodeType":"YulFunctionCall","src":"25570:45:16"}],"functionName":{"name":"mstore","nativeSrc":"25558:6:16","nodeType":"YulIdentifier","src":"25558:6:16"},"nativeSrc":"25558:58:16","nodeType":"YulFunctionCall","src":"25558:58:16"},"nativeSrc":"25558:58:16","nodeType":"YulExpressionStatement","src":"25558:58:16"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"25465:157:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25536:5:16","nodeType":"YulTypedName","src":"25536:5:16","type":""},{"name":"pos","nativeSrc":"25543:3:16","nodeType":"YulTypedName","src":"25543:3:16","type":""}],"src":"25465:157:16"},{"body":{"nativeSrc":"25683:53:16","nodeType":"YulBlock","src":"25683:53:16","statements":[{"nativeSrc":"25693:37:16","nodeType":"YulAssignment","src":"25693:37:16","value":{"arguments":[{"name":"value","nativeSrc":"25724:5:16","nodeType":"YulIdentifier","src":"25724:5:16"}],"functionName":{"name":"leftAlign_t_uint160","nativeSrc":"25704:19:16","nodeType":"YulIdentifier","src":"25704:19:16"},"nativeSrc":"25704:26:16","nodeType":"YulFunctionCall","src":"25704:26:16"},"variableNames":[{"name":"aligned","nativeSrc":"25693:7:16","nodeType":"YulIdentifier","src":"25693:7:16"}]}]},"name":"leftAlign_t_address_payable","nativeSrc":"25628:108:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25665:5:16","nodeType":"YulTypedName","src":"25665:5:16","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"25675:7:16","nodeType":"YulTypedName","src":"25675:7:16","type":""}],"src":"25628:108:16"},{"body":{"nativeSrc":"25841:90:16","nodeType":"YulBlock","src":"25841:90:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"25858:3:16","nodeType":"YulIdentifier","src":"25858:3:16"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"25917:5:16","nodeType":"YulIdentifier","src":"25917:5:16"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"25891:25:16","nodeType":"YulIdentifier","src":"25891:25:16"},"nativeSrc":"25891:32:16","nodeType":"YulFunctionCall","src":"25891:32:16"}],"functionName":{"name":"leftAlign_t_address_payable","nativeSrc":"25863:27:16","nodeType":"YulIdentifier","src":"25863:27:16"},"nativeSrc":"25863:61:16","nodeType":"YulFunctionCall","src":"25863:61:16"}],"functionName":{"name":"mstore","nativeSrc":"25851:6:16","nodeType":"YulIdentifier","src":"25851:6:16"},"nativeSrc":"25851:74:16","nodeType":"YulFunctionCall","src":"25851:74:16"},"nativeSrc":"25851:74:16","nodeType":"YulExpressionStatement","src":"25851:74:16"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_nonPadded_inplace_fromStack","nativeSrc":"25742:189:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25829:5:16","nodeType":"YulTypedName","src":"25829:5:16","type":""},{"name":"pos","nativeSrc":"25836:3:16","nodeType":"YulTypedName","src":"25836:3:16","type":""}],"src":"25742:189:16"},{"body":{"nativeSrc":"25984:32:16","nodeType":"YulBlock","src":"25984:32:16","statements":[{"nativeSrc":"25994:16:16","nodeType":"YulAssignment","src":"25994:16:16","value":{"name":"value","nativeSrc":"26005:5:16","nodeType":"YulIdentifier","src":"26005:5:16"},"variableNames":[{"name":"aligned","nativeSrc":"25994:7:16","nodeType":"YulIdentifier","src":"25994:7:16"}]}]},"name":"leftAlign_t_uint256","nativeSrc":"25937:79:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25966:5:16","nodeType":"YulTypedName","src":"25966:5:16","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"25976:7:16","nodeType":"YulTypedName","src":"25976:7:16","type":""}],"src":"25937:79:16"},{"body":{"nativeSrc":"26105:74:16","nodeType":"YulBlock","src":"26105:74:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"26122:3:16","nodeType":"YulIdentifier","src":"26122:3:16"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26165:5:16","nodeType":"YulIdentifier","src":"26165:5:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"26147:17:16","nodeType":"YulIdentifier","src":"26147:17:16"},"nativeSrc":"26147:24:16","nodeType":"YulFunctionCall","src":"26147:24:16"}],"functionName":{"name":"leftAlign_t_uint256","nativeSrc":"26127:19:16","nodeType":"YulIdentifier","src":"26127:19:16"},"nativeSrc":"26127:45:16","nodeType":"YulFunctionCall","src":"26127:45:16"}],"functionName":{"name":"mstore","nativeSrc":"26115:6:16","nodeType":"YulIdentifier","src":"26115:6:16"},"nativeSrc":"26115:58:16","nodeType":"YulFunctionCall","src":"26115:58:16"},"nativeSrc":"26115:58:16","nodeType":"YulExpressionStatement","src":"26115:58:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"26022:157:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26093:5:16","nodeType":"YulTypedName","src":"26093:5:16","type":""},{"name":"pos","nativeSrc":"26100:3:16","nodeType":"YulTypedName","src":"26100:3:16","type":""}],"src":"26022:157:16"},{"body":{"nativeSrc":"26401:495:16","nodeType":"YulBlock","src":"26401:495:16","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"26474:6:16","nodeType":"YulIdentifier","src":"26474:6:16"},{"name":"pos","nativeSrc":"26483:3:16","nodeType":"YulIdentifier","src":"26483:3:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"26412:61:16","nodeType":"YulIdentifier","src":"26412:61:16"},"nativeSrc":"26412:75:16","nodeType":"YulFunctionCall","src":"26412:75:16"},"nativeSrc":"26412:75:16","nodeType":"YulExpressionStatement","src":"26412:75:16"},{"nativeSrc":"26496:19:16","nodeType":"YulAssignment","src":"26496:19:16","value":{"arguments":[{"name":"pos","nativeSrc":"26507:3:16","nodeType":"YulIdentifier","src":"26507:3:16"},{"kind":"number","nativeSrc":"26512:2:16","nodeType":"YulLiteral","src":"26512:2:16","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"26503:3:16","nodeType":"YulIdentifier","src":"26503:3:16"},"nativeSrc":"26503:12:16","nodeType":"YulFunctionCall","src":"26503:12:16"},"variableNames":[{"name":"pos","nativeSrc":"26496:3:16","nodeType":"YulIdentifier","src":"26496:3:16"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"26587:6:16","nodeType":"YulIdentifier","src":"26587:6:16"},{"name":"pos","nativeSrc":"26596:3:16","nodeType":"YulIdentifier","src":"26596:3:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"26525:61:16","nodeType":"YulIdentifier","src":"26525:61:16"},"nativeSrc":"26525:75:16","nodeType":"YulFunctionCall","src":"26525:75:16"},"nativeSrc":"26525:75:16","nodeType":"YulExpressionStatement","src":"26525:75:16"},{"nativeSrc":"26609:19:16","nodeType":"YulAssignment","src":"26609:19:16","value":{"arguments":[{"name":"pos","nativeSrc":"26620:3:16","nodeType":"YulIdentifier","src":"26620:3:16"},{"kind":"number","nativeSrc":"26625:2:16","nodeType":"YulLiteral","src":"26625:2:16","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"26616:3:16","nodeType":"YulIdentifier","src":"26616:3:16"},"nativeSrc":"26616:12:16","nodeType":"YulFunctionCall","src":"26616:12:16"},"variableNames":[{"name":"pos","nativeSrc":"26609:3:16","nodeType":"YulIdentifier","src":"26609:3:16"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"26716:6:16","nodeType":"YulIdentifier","src":"26716:6:16"},{"name":"pos","nativeSrc":"26725:3:16","nodeType":"YulIdentifier","src":"26725:3:16"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_nonPadded_inplace_fromStack","nativeSrc":"26638:77:16","nodeType":"YulIdentifier","src":"26638:77:16"},"nativeSrc":"26638:91:16","nodeType":"YulFunctionCall","src":"26638:91:16"},"nativeSrc":"26638:91:16","nodeType":"YulExpressionStatement","src":"26638:91:16"},{"nativeSrc":"26738:19:16","nodeType":"YulAssignment","src":"26738:19:16","value":{"arguments":[{"name":"pos","nativeSrc":"26749:3:16","nodeType":"YulIdentifier","src":"26749:3:16"},{"kind":"number","nativeSrc":"26754:2:16","nodeType":"YulLiteral","src":"26754:2:16","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"26745:3:16","nodeType":"YulIdentifier","src":"26745:3:16"},"nativeSrc":"26745:12:16","nodeType":"YulFunctionCall","src":"26745:12:16"},"variableNames":[{"name":"pos","nativeSrc":"26738:3:16","nodeType":"YulIdentifier","src":"26738:3:16"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"26829:6:16","nodeType":"YulIdentifier","src":"26829:6:16"},{"name":"pos","nativeSrc":"26838:3:16","nodeType":"YulIdentifier","src":"26838:3:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"26767:61:16","nodeType":"YulIdentifier","src":"26767:61:16"},"nativeSrc":"26767:75:16","nodeType":"YulFunctionCall","src":"26767:75:16"},"nativeSrc":"26767:75:16","nodeType":"YulExpressionStatement","src":"26767:75:16"},{"nativeSrc":"26851:19:16","nodeType":"YulAssignment","src":"26851:19:16","value":{"arguments":[{"name":"pos","nativeSrc":"26862:3:16","nodeType":"YulIdentifier","src":"26862:3:16"},{"kind":"number","nativeSrc":"26867:2:16","nodeType":"YulLiteral","src":"26867:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26858:3:16","nodeType":"YulIdentifier","src":"26858:3:16"},"nativeSrc":"26858:12:16","nodeType":"YulFunctionCall","src":"26858:12:16"},"variableNames":[{"name":"pos","nativeSrc":"26851:3:16","nodeType":"YulIdentifier","src":"26851:3:16"}]},{"nativeSrc":"26880:10:16","nodeType":"YulAssignment","src":"26880:10:16","value":{"name":"pos","nativeSrc":"26887:3:16","nodeType":"YulIdentifier","src":"26887:3:16"},"variableNames":[{"name":"end","nativeSrc":"26880:3:16","nodeType":"YulIdentifier","src":"26880:3:16"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_address_payable_t_uint256__nonPadded_inplace_fromStack_reversed","nativeSrc":"26185:711:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26356:3:16","nodeType":"YulTypedName","src":"26356:3:16","type":""},{"name":"value3","nativeSrc":"26362:6:16","nodeType":"YulTypedName","src":"26362:6:16","type":""},{"name":"value2","nativeSrc":"26370:6:16","nodeType":"YulTypedName","src":"26370:6:16","type":""},{"name":"value1","nativeSrc":"26378:6:16","nodeType":"YulTypedName","src":"26378:6:16","type":""},{"name":"value0","nativeSrc":"26386:6:16","nodeType":"YulTypedName","src":"26386:6:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26397:3:16","nodeType":"YulTypedName","src":"26397:3:16","type":""}],"src":"26185:711:16"},{"body":{"nativeSrc":"27008:61:16","nodeType":"YulBlock","src":"27008:61:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"27030:6:16","nodeType":"YulIdentifier","src":"27030:6:16"},{"kind":"number","nativeSrc":"27038:1:16","nodeType":"YulLiteral","src":"27038:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27026:3:16","nodeType":"YulIdentifier","src":"27026:3:16"},"nativeSrc":"27026:14:16","nodeType":"YulFunctionCall","src":"27026:14:16"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nativeSrc":"27042:19:16","nodeType":"YulLiteral","src":"27042:19:16","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nativeSrc":"27019:6:16","nodeType":"YulIdentifier","src":"27019:6:16"},"nativeSrc":"27019:43:16","nodeType":"YulFunctionCall","src":"27019:43:16"},"nativeSrc":"27019:43:16","nodeType":"YulExpressionStatement","src":"27019:43:16"}]},"name":"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","nativeSrc":"26902:167:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"27000:6:16","nodeType":"YulTypedName","src":"27000:6:16","type":""}],"src":"26902:167:16"},{"body":{"nativeSrc":"27221:220:16","nodeType":"YulBlock","src":"27221:220:16","statements":[{"nativeSrc":"27231:74:16","nodeType":"YulAssignment","src":"27231:74:16","value":{"arguments":[{"name":"pos","nativeSrc":"27297:3:16","nodeType":"YulIdentifier","src":"27297:3:16"},{"kind":"number","nativeSrc":"27302:2:16","nodeType":"YulLiteral","src":"27302:2:16","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"27238:58:16","nodeType":"YulIdentifier","src":"27238:58:16"},"nativeSrc":"27238:67:16","nodeType":"YulFunctionCall","src":"27238:67:16"},"variableNames":[{"name":"pos","nativeSrc":"27231:3:16","nodeType":"YulIdentifier","src":"27231:3:16"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"27403:3:16","nodeType":"YulIdentifier","src":"27403:3:16"}],"functionName":{"name":"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","nativeSrc":"27314:88:16","nodeType":"YulIdentifier","src":"27314:88:16"},"nativeSrc":"27314:93:16","nodeType":"YulFunctionCall","src":"27314:93:16"},"nativeSrc":"27314:93:16","nodeType":"YulExpressionStatement","src":"27314:93:16"},{"nativeSrc":"27416:19:16","nodeType":"YulAssignment","src":"27416:19:16","value":{"arguments":[{"name":"pos","nativeSrc":"27427:3:16","nodeType":"YulIdentifier","src":"27427:3:16"},{"kind":"number","nativeSrc":"27432:2:16","nodeType":"YulLiteral","src":"27432:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27423:3:16","nodeType":"YulIdentifier","src":"27423:3:16"},"nativeSrc":"27423:12:16","nodeType":"YulFunctionCall","src":"27423:12:16"},"variableNames":[{"name":"end","nativeSrc":"27416:3:16","nodeType":"YulIdentifier","src":"27416:3:16"}]}]},"name":"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack","nativeSrc":"27075:366:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"27209:3:16","nodeType":"YulTypedName","src":"27209:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"27217:3:16","nodeType":"YulTypedName","src":"27217:3:16","type":""}],"src":"27075:366:16"},{"body":{"nativeSrc":"27618:248:16","nodeType":"YulBlock","src":"27618:248:16","statements":[{"nativeSrc":"27628:26:16","nodeType":"YulAssignment","src":"27628:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"27640:9:16","nodeType":"YulIdentifier","src":"27640:9:16"},{"kind":"number","nativeSrc":"27651:2:16","nodeType":"YulLiteral","src":"27651:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27636:3:16","nodeType":"YulIdentifier","src":"27636:3:16"},"nativeSrc":"27636:18:16","nodeType":"YulFunctionCall","src":"27636:18:16"},"variableNames":[{"name":"tail","nativeSrc":"27628:4:16","nodeType":"YulIdentifier","src":"27628:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27675:9:16","nodeType":"YulIdentifier","src":"27675:9:16"},{"kind":"number","nativeSrc":"27686:1:16","nodeType":"YulLiteral","src":"27686:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27671:3:16","nodeType":"YulIdentifier","src":"27671:3:16"},"nativeSrc":"27671:17:16","nodeType":"YulFunctionCall","src":"27671:17:16"},{"arguments":[{"name":"tail","nativeSrc":"27694:4:16","nodeType":"YulIdentifier","src":"27694:4:16"},{"name":"headStart","nativeSrc":"27700:9:16","nodeType":"YulIdentifier","src":"27700:9:16"}],"functionName":{"name":"sub","nativeSrc":"27690:3:16","nodeType":"YulIdentifier","src":"27690:3:16"},"nativeSrc":"27690:20:16","nodeType":"YulFunctionCall","src":"27690:20:16"}],"functionName":{"name":"mstore","nativeSrc":"27664:6:16","nodeType":"YulIdentifier","src":"27664:6:16"},"nativeSrc":"27664:47:16","nodeType":"YulFunctionCall","src":"27664:47:16"},"nativeSrc":"27664:47:16","nodeType":"YulExpressionStatement","src":"27664:47:16"},{"nativeSrc":"27720:139:16","nodeType":"YulAssignment","src":"27720:139:16","value":{"arguments":[{"name":"tail","nativeSrc":"27854:4:16","nodeType":"YulIdentifier","src":"27854:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack","nativeSrc":"27728:124:16","nodeType":"YulIdentifier","src":"27728:124:16"},"nativeSrc":"27728:131:16","nodeType":"YulFunctionCall","src":"27728:131:16"},"variableNames":[{"name":"tail","nativeSrc":"27720:4:16","nodeType":"YulIdentifier","src":"27720:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27447:419:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27598:9:16","nodeType":"YulTypedName","src":"27598:9:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27613:4:16","nodeType":"YulTypedName","src":"27613:4:16","type":""}],"src":"27447:419:16"},{"body":{"nativeSrc":"27920:362:16","nodeType":"YulBlock","src":"27920:362:16","statements":[{"nativeSrc":"27930:25:16","nodeType":"YulAssignment","src":"27930:25:16","value":{"arguments":[{"name":"x","nativeSrc":"27953:1:16","nodeType":"YulIdentifier","src":"27953:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"27935:17:16","nodeType":"YulIdentifier","src":"27935:17:16"},"nativeSrc":"27935:20:16","nodeType":"YulFunctionCall","src":"27935:20:16"},"variableNames":[{"name":"x","nativeSrc":"27930:1:16","nodeType":"YulIdentifier","src":"27930:1:16"}]},{"nativeSrc":"27964:25:16","nodeType":"YulAssignment","src":"27964:25:16","value":{"arguments":[{"name":"y","nativeSrc":"27987:1:16","nodeType":"YulIdentifier","src":"27987:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"27969:17:16","nodeType":"YulIdentifier","src":"27969:17:16"},"nativeSrc":"27969:20:16","nodeType":"YulFunctionCall","src":"27969:20:16"},"variableNames":[{"name":"y","nativeSrc":"27964:1:16","nodeType":"YulIdentifier","src":"27964:1:16"}]},{"nativeSrc":"27998:28:16","nodeType":"YulVariableDeclaration","src":"27998:28:16","value":{"arguments":[{"name":"x","nativeSrc":"28021:1:16","nodeType":"YulIdentifier","src":"28021:1:16"},{"name":"y","nativeSrc":"28024:1:16","nodeType":"YulIdentifier","src":"28024:1:16"}],"functionName":{"name":"mul","nativeSrc":"28017:3:16","nodeType":"YulIdentifier","src":"28017:3:16"},"nativeSrc":"28017:9:16","nodeType":"YulFunctionCall","src":"28017:9:16"},"variables":[{"name":"product_raw","nativeSrc":"28002:11:16","nodeType":"YulTypedName","src":"28002:11:16","type":""}]},{"nativeSrc":"28035:41:16","nodeType":"YulAssignment","src":"28035:41:16","value":{"arguments":[{"name":"product_raw","nativeSrc":"28064:11:16","nodeType":"YulIdentifier","src":"28064:11:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"28046:17:16","nodeType":"YulIdentifier","src":"28046:17:16"},"nativeSrc":"28046:30:16","nodeType":"YulFunctionCall","src":"28046:30:16"},"variableNames":[{"name":"product","nativeSrc":"28035:7:16","nodeType":"YulIdentifier","src":"28035:7:16"}]},{"body":{"nativeSrc":"28253:22:16","nodeType":"YulBlock","src":"28253:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"28255:16:16","nodeType":"YulIdentifier","src":"28255:16:16"},"nativeSrc":"28255:18:16","nodeType":"YulFunctionCall","src":"28255:18:16"},"nativeSrc":"28255:18:16","nodeType":"YulExpressionStatement","src":"28255:18:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"28186:1:16","nodeType":"YulIdentifier","src":"28186:1:16"}],"functionName":{"name":"iszero","nativeSrc":"28179:6:16","nodeType":"YulIdentifier","src":"28179:6:16"},"nativeSrc":"28179:9:16","nodeType":"YulFunctionCall","src":"28179:9:16"},{"arguments":[{"name":"y","nativeSrc":"28209:1:16","nodeType":"YulIdentifier","src":"28209:1:16"},{"arguments":[{"name":"product","nativeSrc":"28216:7:16","nodeType":"YulIdentifier","src":"28216:7:16"},{"name":"x","nativeSrc":"28225:1:16","nodeType":"YulIdentifier","src":"28225:1:16"}],"functionName":{"name":"div","nativeSrc":"28212:3:16","nodeType":"YulIdentifier","src":"28212:3:16"},"nativeSrc":"28212:15:16","nodeType":"YulFunctionCall","src":"28212:15:16"}],"functionName":{"name":"eq","nativeSrc":"28206:2:16","nodeType":"YulIdentifier","src":"28206:2:16"},"nativeSrc":"28206:22:16","nodeType":"YulFunctionCall","src":"28206:22:16"}],"functionName":{"name":"or","nativeSrc":"28159:2:16","nodeType":"YulIdentifier","src":"28159:2:16"},"nativeSrc":"28159:83:16","nodeType":"YulFunctionCall","src":"28159:83:16"}],"functionName":{"name":"iszero","nativeSrc":"28139:6:16","nodeType":"YulIdentifier","src":"28139:6:16"},"nativeSrc":"28139:113:16","nodeType":"YulFunctionCall","src":"28139:113:16"},"nativeSrc":"28136:139:16","nodeType":"YulIf","src":"28136:139:16"}]},"name":"checked_mul_t_uint256","nativeSrc":"27872:410:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"27903:1:16","nodeType":"YulTypedName","src":"27903:1:16","type":""},{"name":"y","nativeSrc":"27906:1:16","nodeType":"YulTypedName","src":"27906:1:16","type":""}],"returnVariables":[{"name":"product","nativeSrc":"27912:7:16","nodeType":"YulTypedName","src":"27912:7:16","type":""}],"src":"27872:410:16"},{"body":{"nativeSrc":"28316:152:16","nodeType":"YulBlock","src":"28316:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"28333:1:16","nodeType":"YulLiteral","src":"28333:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"28336:77:16","nodeType":"YulLiteral","src":"28336:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"28326:6:16","nodeType":"YulIdentifier","src":"28326:6:16"},"nativeSrc":"28326:88:16","nodeType":"YulFunctionCall","src":"28326:88:16"},"nativeSrc":"28326:88:16","nodeType":"YulExpressionStatement","src":"28326:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28430:1:16","nodeType":"YulLiteral","src":"28430:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"28433:4:16","nodeType":"YulLiteral","src":"28433:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"28423:6:16","nodeType":"YulIdentifier","src":"28423:6:16"},"nativeSrc":"28423:15:16","nodeType":"YulFunctionCall","src":"28423:15:16"},"nativeSrc":"28423:15:16","nodeType":"YulExpressionStatement","src":"28423:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"28454:1:16","nodeType":"YulLiteral","src":"28454:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"28457:4:16","nodeType":"YulLiteral","src":"28457:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"28447:6:16","nodeType":"YulIdentifier","src":"28447:6:16"},"nativeSrc":"28447:15:16","nodeType":"YulFunctionCall","src":"28447:15:16"},"nativeSrc":"28447:15:16","nodeType":"YulExpressionStatement","src":"28447:15:16"}]},"name":"panic_error_0x12","nativeSrc":"28288:180:16","nodeType":"YulFunctionDefinition","src":"28288:180:16"},{"body":{"nativeSrc":"28516:143:16","nodeType":"YulBlock","src":"28516:143:16","statements":[{"nativeSrc":"28526:25:16","nodeType":"YulAssignment","src":"28526:25:16","value":{"arguments":[{"name":"x","nativeSrc":"28549:1:16","nodeType":"YulIdentifier","src":"28549:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"28531:17:16","nodeType":"YulIdentifier","src":"28531:17:16"},"nativeSrc":"28531:20:16","nodeType":"YulFunctionCall","src":"28531:20:16"},"variableNames":[{"name":"x","nativeSrc":"28526:1:16","nodeType":"YulIdentifier","src":"28526:1:16"}]},{"nativeSrc":"28560:25:16","nodeType":"YulAssignment","src":"28560:25:16","value":{"arguments":[{"name":"y","nativeSrc":"28583:1:16","nodeType":"YulIdentifier","src":"28583:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"28565:17:16","nodeType":"YulIdentifier","src":"28565:17:16"},"nativeSrc":"28565:20:16","nodeType":"YulFunctionCall","src":"28565:20:16"},"variableNames":[{"name":"y","nativeSrc":"28560:1:16","nodeType":"YulIdentifier","src":"28560:1:16"}]},{"body":{"nativeSrc":"28607:22:16","nodeType":"YulBlock","src":"28607:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"28609:16:16","nodeType":"YulIdentifier","src":"28609:16:16"},"nativeSrc":"28609:18:16","nodeType":"YulFunctionCall","src":"28609:18:16"},"nativeSrc":"28609:18:16","nodeType":"YulExpressionStatement","src":"28609:18:16"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"28604:1:16","nodeType":"YulIdentifier","src":"28604:1:16"}],"functionName":{"name":"iszero","nativeSrc":"28597:6:16","nodeType":"YulIdentifier","src":"28597:6:16"},"nativeSrc":"28597:9:16","nodeType":"YulFunctionCall","src":"28597:9:16"},"nativeSrc":"28594:35:16","nodeType":"YulIf","src":"28594:35:16"},{"nativeSrc":"28639:14:16","nodeType":"YulAssignment","src":"28639:14:16","value":{"arguments":[{"name":"x","nativeSrc":"28648:1:16","nodeType":"YulIdentifier","src":"28648:1:16"},{"name":"y","nativeSrc":"28651:1:16","nodeType":"YulIdentifier","src":"28651:1:16"}],"functionName":{"name":"div","nativeSrc":"28644:3:16","nodeType":"YulIdentifier","src":"28644:3:16"},"nativeSrc":"28644:9:16","nodeType":"YulFunctionCall","src":"28644:9:16"},"variableNames":[{"name":"r","nativeSrc":"28639:1:16","nodeType":"YulIdentifier","src":"28639:1:16"}]}]},"name":"checked_div_t_uint256","nativeSrc":"28474:185:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"28505:1:16","nodeType":"YulTypedName","src":"28505:1:16","type":""},{"name":"y","nativeSrc":"28508:1:16","nodeType":"YulTypedName","src":"28508:1:16","type":""}],"returnVariables":[{"name":"r","nativeSrc":"28514:1:16","nodeType":"YulTypedName","src":"28514:1:16","type":""}],"src":"28474:185:16"},{"body":{"nativeSrc":"28710:149:16","nodeType":"YulBlock","src":"28710:149:16","statements":[{"nativeSrc":"28720:25:16","nodeType":"YulAssignment","src":"28720:25:16","value":{"arguments":[{"name":"x","nativeSrc":"28743:1:16","nodeType":"YulIdentifier","src":"28743:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"28725:17:16","nodeType":"YulIdentifier","src":"28725:17:16"},"nativeSrc":"28725:20:16","nodeType":"YulFunctionCall","src":"28725:20:16"},"variableNames":[{"name":"x","nativeSrc":"28720:1:16","nodeType":"YulIdentifier","src":"28720:1:16"}]},{"nativeSrc":"28754:25:16","nodeType":"YulAssignment","src":"28754:25:16","value":{"arguments":[{"name":"y","nativeSrc":"28777:1:16","nodeType":"YulIdentifier","src":"28777:1:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"28759:17:16","nodeType":"YulIdentifier","src":"28759:17:16"},"nativeSrc":"28759:20:16","nodeType":"YulFunctionCall","src":"28759:20:16"},"variableNames":[{"name":"y","nativeSrc":"28754:1:16","nodeType":"YulIdentifier","src":"28754:1:16"}]},{"nativeSrc":"28788:17:16","nodeType":"YulAssignment","src":"28788:17:16","value":{"arguments":[{"name":"x","nativeSrc":"28800:1:16","nodeType":"YulIdentifier","src":"28800:1:16"},{"name":"y","nativeSrc":"28803:1:16","nodeType":"YulIdentifier","src":"28803:1:16"}],"functionName":{"name":"sub","nativeSrc":"28796:3:16","nodeType":"YulIdentifier","src":"28796:3:16"},"nativeSrc":"28796:9:16","nodeType":"YulFunctionCall","src":"28796:9:16"},"variableNames":[{"name":"diff","nativeSrc":"28788:4:16","nodeType":"YulIdentifier","src":"28788:4:16"}]},{"body":{"nativeSrc":"28830:22:16","nodeType":"YulBlock","src":"28830:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"28832:16:16","nodeType":"YulIdentifier","src":"28832:16:16"},"nativeSrc":"28832:18:16","nodeType":"YulFunctionCall","src":"28832:18:16"},"nativeSrc":"28832:18:16","nodeType":"YulExpressionStatement","src":"28832:18:16"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"28821:4:16","nodeType":"YulIdentifier","src":"28821:4:16"},{"name":"x","nativeSrc":"28827:1:16","nodeType":"YulIdentifier","src":"28827:1:16"}],"functionName":{"name":"gt","nativeSrc":"28818:2:16","nodeType":"YulIdentifier","src":"28818:2:16"},"nativeSrc":"28818:11:16","nodeType":"YulFunctionCall","src":"28818:11:16"},"nativeSrc":"28815:37:16","nodeType":"YulIf","src":"28815:37:16"}]},"name":"checked_sub_t_uint256","nativeSrc":"28665:194:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"28696:1:16","nodeType":"YulTypedName","src":"28696:1:16","type":""},{"name":"y","nativeSrc":"28699:1:16","nodeType":"YulTypedName","src":"28699:1:16","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"28705:4:16","nodeType":"YulTypedName","src":"28705:4:16","type":""}],"src":"28665:194:16"},{"body":{"nativeSrc":"28897:28:16","nodeType":"YulBlock","src":"28897:28:16","statements":[{"nativeSrc":"28907:12:16","nodeType":"YulAssignment","src":"28907:12:16","value":{"name":"value","nativeSrc":"28914:5:16","nodeType":"YulIdentifier","src":"28914:5:16"},"variableNames":[{"name":"ret","nativeSrc":"28907:3:16","nodeType":"YulIdentifier","src":"28907:3:16"}]}]},"name":"identity","nativeSrc":"28865:60:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28883:5:16","nodeType":"YulTypedName","src":"28883:5:16","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"28893:3:16","nodeType":"YulTypedName","src":"28893:3:16","type":""}],"src":"28865:60:16"},{"body":{"nativeSrc":"28991:82:16","nodeType":"YulBlock","src":"28991:82:16","statements":[{"nativeSrc":"29001:66:16","nodeType":"YulAssignment","src":"29001:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"29059:5:16","nodeType":"YulIdentifier","src":"29059:5:16"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"29041:17:16","nodeType":"YulIdentifier","src":"29041:17:16"},"nativeSrc":"29041:24:16","nodeType":"YulFunctionCall","src":"29041:24:16"}],"functionName":{"name":"identity","nativeSrc":"29032:8:16","nodeType":"YulIdentifier","src":"29032:8:16"},"nativeSrc":"29032:34:16","nodeType":"YulFunctionCall","src":"29032:34:16"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"29014:17:16","nodeType":"YulIdentifier","src":"29014:17:16"},"nativeSrc":"29014:53:16","nodeType":"YulFunctionCall","src":"29014:53:16"},"variableNames":[{"name":"converted","nativeSrc":"29001:9:16","nodeType":"YulIdentifier","src":"29001:9:16"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"28931:142:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28971:5:16","nodeType":"YulTypedName","src":"28971:5:16","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"28981:9:16","nodeType":"YulTypedName","src":"28981:9:16","type":""}],"src":"28931:142:16"},{"body":{"nativeSrc":"29139:66:16","nodeType":"YulBlock","src":"29139:66:16","statements":[{"nativeSrc":"29149:50:16","nodeType":"YulAssignment","src":"29149:50:16","value":{"arguments":[{"name":"value","nativeSrc":"29193:5:16","nodeType":"YulIdentifier","src":"29193:5:16"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"29162:30:16","nodeType":"YulIdentifier","src":"29162:30:16"},"nativeSrc":"29162:37:16","nodeType":"YulFunctionCall","src":"29162:37:16"},"variableNames":[{"name":"converted","nativeSrc":"29149:9:16","nodeType":"YulIdentifier","src":"29149:9:16"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"29079:126:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29119:5:16","nodeType":"YulTypedName","src":"29119:5:16","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"29129:9:16","nodeType":"YulTypedName","src":"29129:9:16","type":""}],"src":"29079:126:16"},{"body":{"nativeSrc":"29279:66:16","nodeType":"YulBlock","src":"29279:66:16","statements":[{"nativeSrc":"29289:50:16","nodeType":"YulAssignment","src":"29289:50:16","value":{"arguments":[{"name":"value","nativeSrc":"29333:5:16","nodeType":"YulIdentifier","src":"29333:5:16"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"29302:30:16","nodeType":"YulIdentifier","src":"29302:30:16"},"nativeSrc":"29302:37:16","nodeType":"YulFunctionCall","src":"29302:37:16"},"variableNames":[{"name":"converted","nativeSrc":"29289:9:16","nodeType":"YulIdentifier","src":"29289:9:16"}]}]},"name":"convert_t_address_payable_to_t_address","nativeSrc":"29211:134:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29259:5:16","nodeType":"YulTypedName","src":"29259:5:16","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"29269:9:16","nodeType":"YulTypedName","src":"29269:9:16","type":""}],"src":"29211:134:16"},{"body":{"nativeSrc":"29424:74:16","nodeType":"YulBlock","src":"29424:74:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"29441:3:16","nodeType":"YulIdentifier","src":"29441:3:16"},{"arguments":[{"name":"value","nativeSrc":"29485:5:16","nodeType":"YulIdentifier","src":"29485:5:16"}],"functionName":{"name":"convert_t_address_payable_to_t_address","nativeSrc":"29446:38:16","nodeType":"YulIdentifier","src":"29446:38:16"},"nativeSrc":"29446:45:16","nodeType":"YulFunctionCall","src":"29446:45:16"}],"functionName":{"name":"mstore","nativeSrc":"29434:6:16","nodeType":"YulIdentifier","src":"29434:6:16"},"nativeSrc":"29434:58:16","nodeType":"YulFunctionCall","src":"29434:58:16"},"nativeSrc":"29434:58:16","nodeType":"YulExpressionStatement","src":"29434:58:16"}]},"name":"abi_encode_t_address_payable_to_t_address_fromStack","nativeSrc":"29351:147:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29412:5:16","nodeType":"YulTypedName","src":"29412:5:16","type":""},{"name":"pos","nativeSrc":"29419:3:16","nodeType":"YulTypedName","src":"29419:3:16","type":""}],"src":"29351:147:16"},{"body":{"nativeSrc":"29666:296:16","nodeType":"YulBlock","src":"29666:296:16","statements":[{"nativeSrc":"29676:26:16","nodeType":"YulAssignment","src":"29676:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"29688:9:16","nodeType":"YulIdentifier","src":"29688:9:16"},{"kind":"number","nativeSrc":"29699:2:16","nodeType":"YulLiteral","src":"29699:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"29684:3:16","nodeType":"YulIdentifier","src":"29684:3:16"},"nativeSrc":"29684:18:16","nodeType":"YulFunctionCall","src":"29684:18:16"},"variableNames":[{"name":"tail","nativeSrc":"29676:4:16","nodeType":"YulIdentifier","src":"29676:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"29756:6:16","nodeType":"YulIdentifier","src":"29756:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"29769:9:16","nodeType":"YulIdentifier","src":"29769:9:16"},{"kind":"number","nativeSrc":"29780:1:16","nodeType":"YulLiteral","src":"29780:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29765:3:16","nodeType":"YulIdentifier","src":"29765:3:16"},"nativeSrc":"29765:17:16","nodeType":"YulFunctionCall","src":"29765:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"29712:43:16","nodeType":"YulIdentifier","src":"29712:43:16"},"nativeSrc":"29712:71:16","nodeType":"YulFunctionCall","src":"29712:71:16"},"nativeSrc":"29712:71:16","nodeType":"YulExpressionStatement","src":"29712:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"29845:6:16","nodeType":"YulIdentifier","src":"29845:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"29858:9:16","nodeType":"YulIdentifier","src":"29858:9:16"},{"kind":"number","nativeSrc":"29869:2:16","nodeType":"YulLiteral","src":"29869:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29854:3:16","nodeType":"YulIdentifier","src":"29854:3:16"},"nativeSrc":"29854:18:16","nodeType":"YulFunctionCall","src":"29854:18:16"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_fromStack","nativeSrc":"29793:51:16","nodeType":"YulIdentifier","src":"29793:51:16"},"nativeSrc":"29793:80:16","nodeType":"YulFunctionCall","src":"29793:80:16"},"nativeSrc":"29793:80:16","nodeType":"YulExpressionStatement","src":"29793:80:16"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"29927:6:16","nodeType":"YulIdentifier","src":"29927:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"29940:9:16","nodeType":"YulIdentifier","src":"29940:9:16"},{"kind":"number","nativeSrc":"29951:2:16","nodeType":"YulLiteral","src":"29951:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29936:3:16","nodeType":"YulIdentifier","src":"29936:3:16"},"nativeSrc":"29936:18:16","nodeType":"YulFunctionCall","src":"29936:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29883:43:16","nodeType":"YulIdentifier","src":"29883:43:16"},"nativeSrc":"29883:72:16","nodeType":"YulFunctionCall","src":"29883:72:16"},"nativeSrc":"29883:72:16","nodeType":"YulExpressionStatement","src":"29883:72:16"}]},"name":"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"29504:458:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29622:9:16","nodeType":"YulTypedName","src":"29622:9:16","type":""},{"name":"value2","nativeSrc":"29634:6:16","nodeType":"YulTypedName","src":"29634:6:16","type":""},{"name":"value1","nativeSrc":"29642:6:16","nodeType":"YulTypedName","src":"29642:6:16","type":""},{"name":"value0","nativeSrc":"29650:6:16","nodeType":"YulTypedName","src":"29650:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29661:4:16","nodeType":"YulTypedName","src":"29661:4:16","type":""}],"src":"29504:458:16"},{"body":{"nativeSrc":"30008:76:16","nodeType":"YulBlock","src":"30008:76:16","statements":[{"body":{"nativeSrc":"30062:16:16","nodeType":"YulBlock","src":"30062:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"30071:1:16","nodeType":"YulLiteral","src":"30071:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"30074:1:16","nodeType":"YulLiteral","src":"30074:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"30064:6:16","nodeType":"YulIdentifier","src":"30064:6:16"},"nativeSrc":"30064:12:16","nodeType":"YulFunctionCall","src":"30064:12:16"},"nativeSrc":"30064:12:16","nodeType":"YulExpressionStatement","src":"30064:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"30031:5:16","nodeType":"YulIdentifier","src":"30031:5:16"},{"arguments":[{"name":"value","nativeSrc":"30053:5:16","nodeType":"YulIdentifier","src":"30053:5:16"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"30038:14:16","nodeType":"YulIdentifier","src":"30038:14:16"},"nativeSrc":"30038:21:16","nodeType":"YulFunctionCall","src":"30038:21:16"}],"functionName":{"name":"eq","nativeSrc":"30028:2:16","nodeType":"YulIdentifier","src":"30028:2:16"},"nativeSrc":"30028:32:16","nodeType":"YulFunctionCall","src":"30028:32:16"}],"functionName":{"name":"iszero","nativeSrc":"30021:6:16","nodeType":"YulIdentifier","src":"30021:6:16"},"nativeSrc":"30021:40:16","nodeType":"YulFunctionCall","src":"30021:40:16"},"nativeSrc":"30018:60:16","nodeType":"YulIf","src":"30018:60:16"}]},"name":"validator_revert_t_bool","nativeSrc":"29968:116:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30001:5:16","nodeType":"YulTypedName","src":"30001:5:16","type":""}],"src":"29968:116:16"},{"body":{"nativeSrc":"30150:77:16","nodeType":"YulBlock","src":"30150:77:16","statements":[{"nativeSrc":"30160:22:16","nodeType":"YulAssignment","src":"30160:22:16","value":{"arguments":[{"name":"offset","nativeSrc":"30175:6:16","nodeType":"YulIdentifier","src":"30175:6:16"}],"functionName":{"name":"mload","nativeSrc":"30169:5:16","nodeType":"YulIdentifier","src":"30169:5:16"},"nativeSrc":"30169:13:16","nodeType":"YulFunctionCall","src":"30169:13:16"},"variableNames":[{"name":"value","nativeSrc":"30160:5:16","nodeType":"YulIdentifier","src":"30160:5:16"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"30215:5:16","nodeType":"YulIdentifier","src":"30215:5:16"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"30191:23:16","nodeType":"YulIdentifier","src":"30191:23:16"},"nativeSrc":"30191:30:16","nodeType":"YulFunctionCall","src":"30191:30:16"},"nativeSrc":"30191:30:16","nodeType":"YulExpressionStatement","src":"30191:30:16"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"30090:137:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"30128:6:16","nodeType":"YulTypedName","src":"30128:6:16","type":""},{"name":"end","nativeSrc":"30136:3:16","nodeType":"YulTypedName","src":"30136:3:16","type":""}],"returnVariables":[{"name":"value","nativeSrc":"30144:5:16","nodeType":"YulTypedName","src":"30144:5:16","type":""}],"src":"30090:137:16"},{"body":{"nativeSrc":"30307:271:16","nodeType":"YulBlock","src":"30307:271:16","statements":[{"body":{"nativeSrc":"30353:83:16","nodeType":"YulBlock","src":"30353:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"30355:77:16","nodeType":"YulIdentifier","src":"30355:77:16"},"nativeSrc":"30355:79:16","nodeType":"YulFunctionCall","src":"30355:79:16"},"nativeSrc":"30355:79:16","nodeType":"YulExpressionStatement","src":"30355:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"30328:7:16","nodeType":"YulIdentifier","src":"30328:7:16"},{"name":"headStart","nativeSrc":"30337:9:16","nodeType":"YulIdentifier","src":"30337:9:16"}],"functionName":{"name":"sub","nativeSrc":"30324:3:16","nodeType":"YulIdentifier","src":"30324:3:16"},"nativeSrc":"30324:23:16","nodeType":"YulFunctionCall","src":"30324:23:16"},{"kind":"number","nativeSrc":"30349:2:16","nodeType":"YulLiteral","src":"30349:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"30320:3:16","nodeType":"YulIdentifier","src":"30320:3:16"},"nativeSrc":"30320:32:16","nodeType":"YulFunctionCall","src":"30320:32:16"},"nativeSrc":"30317:119:16","nodeType":"YulIf","src":"30317:119:16"},{"nativeSrc":"30446:125:16","nodeType":"YulBlock","src":"30446:125:16","statements":[{"nativeSrc":"30461:15:16","nodeType":"YulVariableDeclaration","src":"30461:15:16","value":{"kind":"number","nativeSrc":"30475:1:16","nodeType":"YulLiteral","src":"30475:1:16","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"30465:6:16","nodeType":"YulTypedName","src":"30465:6:16","type":""}]},{"nativeSrc":"30490:71:16","nodeType":"YulAssignment","src":"30490:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30533:9:16","nodeType":"YulIdentifier","src":"30533:9:16"},{"name":"offset","nativeSrc":"30544:6:16","nodeType":"YulIdentifier","src":"30544:6:16"}],"functionName":{"name":"add","nativeSrc":"30529:3:16","nodeType":"YulIdentifier","src":"30529:3:16"},"nativeSrc":"30529:22:16","nodeType":"YulFunctionCall","src":"30529:22:16"},{"name":"dataEnd","nativeSrc":"30553:7:16","nodeType":"YulIdentifier","src":"30553:7:16"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"30500:28:16","nodeType":"YulIdentifier","src":"30500:28:16"},"nativeSrc":"30500:61:16","nodeType":"YulFunctionCall","src":"30500:61:16"},"variableNames":[{"name":"value0","nativeSrc":"30490:6:16","nodeType":"YulIdentifier","src":"30490:6:16"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"30233:345:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30277:9:16","nodeType":"YulTypedName","src":"30277:9:16","type":""},{"name":"dataEnd","nativeSrc":"30288:7:16","nodeType":"YulTypedName","src":"30288:7:16","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"30300:6:16","nodeType":"YulTypedName","src":"30300:6:16","type":""}],"src":"30233:345:16"},{"body":{"nativeSrc":"30627:190:16","nodeType":"YulBlock","src":"30627:190:16","statements":[{"nativeSrc":"30637:33:16","nodeType":"YulAssignment","src":"30637:33:16","value":{"arguments":[{"name":"value","nativeSrc":"30664:5:16","nodeType":"YulIdentifier","src":"30664:5:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"30646:17:16","nodeType":"YulIdentifier","src":"30646:17:16"},"nativeSrc":"30646:24:16","nodeType":"YulFunctionCall","src":"30646:24:16"},"variableNames":[{"name":"value","nativeSrc":"30637:5:16","nodeType":"YulIdentifier","src":"30637:5:16"}]},{"body":{"nativeSrc":"30760:22:16","nodeType":"YulBlock","src":"30760:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"30762:16:16","nodeType":"YulIdentifier","src":"30762:16:16"},"nativeSrc":"30762:18:16","nodeType":"YulFunctionCall","src":"30762:18:16"},"nativeSrc":"30762:18:16","nodeType":"YulExpressionStatement","src":"30762:18:16"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"30685:5:16","nodeType":"YulIdentifier","src":"30685:5:16"},{"kind":"number","nativeSrc":"30692:66:16","nodeType":"YulLiteral","src":"30692:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"30682:2:16","nodeType":"YulIdentifier","src":"30682:2:16"},"nativeSrc":"30682:77:16","nodeType":"YulFunctionCall","src":"30682:77:16"},"nativeSrc":"30679:103:16","nodeType":"YulIf","src":"30679:103:16"},{"nativeSrc":"30791:20:16","nodeType":"YulAssignment","src":"30791:20:16","value":{"arguments":[{"name":"value","nativeSrc":"30802:5:16","nodeType":"YulIdentifier","src":"30802:5:16"},{"kind":"number","nativeSrc":"30809:1:16","nodeType":"YulLiteral","src":"30809:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"30798:3:16","nodeType":"YulIdentifier","src":"30798:3:16"},"nativeSrc":"30798:13:16","nodeType":"YulFunctionCall","src":"30798:13:16"},"variableNames":[{"name":"ret","nativeSrc":"30791:3:16","nodeType":"YulIdentifier","src":"30791:3:16"}]}]},"name":"increment_t_uint256","nativeSrc":"30584:233:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30613:5:16","nodeType":"YulTypedName","src":"30613:5:16","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"30623:3:16","nodeType":"YulTypedName","src":"30623:3:16","type":""}],"src":"30584:233:16"},{"body":{"nativeSrc":"30929:8:16","nodeType":"YulBlock","src":"30929:8:16","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"30823:114:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"30921:6:16","nodeType":"YulTypedName","src":"30921:6:16","type":""}],"src":"30823:114:16"},{"body":{"nativeSrc":"31107:236:16","nodeType":"YulBlock","src":"31107:236:16","statements":[{"nativeSrc":"31117:91:16","nodeType":"YulAssignment","src":"31117:91:16","value":{"arguments":[{"name":"pos","nativeSrc":"31201:3:16","nodeType":"YulIdentifier","src":"31201:3:16"},{"kind":"number","nativeSrc":"31206:1:16","nodeType":"YulLiteral","src":"31206:1:16","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"31124:76:16","nodeType":"YulIdentifier","src":"31124:76:16"},"nativeSrc":"31124:84:16","nodeType":"YulFunctionCall","src":"31124:84:16"},"variableNames":[{"name":"pos","nativeSrc":"31117:3:16","nodeType":"YulIdentifier","src":"31117:3:16"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"31306:3:16","nodeType":"YulIdentifier","src":"31306:3:16"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"31217:88:16","nodeType":"YulIdentifier","src":"31217:88:16"},"nativeSrc":"31217:93:16","nodeType":"YulFunctionCall","src":"31217:93:16"},"nativeSrc":"31217:93:16","nodeType":"YulExpressionStatement","src":"31217:93:16"},{"nativeSrc":"31319:18:16","nodeType":"YulAssignment","src":"31319:18:16","value":{"arguments":[{"name":"pos","nativeSrc":"31330:3:16","nodeType":"YulIdentifier","src":"31330:3:16"},{"kind":"number","nativeSrc":"31335:1:16","nodeType":"YulLiteral","src":"31335:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31326:3:16","nodeType":"YulIdentifier","src":"31326:3:16"},"nativeSrc":"31326:11:16","nodeType":"YulFunctionCall","src":"31326:11:16"},"variableNames":[{"name":"end","nativeSrc":"31319:3:16","nodeType":"YulIdentifier","src":"31319:3:16"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"30943:400:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31095:3:16","nodeType":"YulTypedName","src":"31095:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31103:3:16","nodeType":"YulTypedName","src":"31103:3:16","type":""}],"src":"30943:400:16"},{"body":{"nativeSrc":"31538:192:16","nodeType":"YulBlock","src":"31538:192:16","statements":[{"nativeSrc":"31549:155:16","nodeType":"YulAssignment","src":"31549:155:16","value":{"arguments":[{"name":"pos","nativeSrc":"31700:3:16","nodeType":"YulIdentifier","src":"31700:3:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"31556:142:16","nodeType":"YulIdentifier","src":"31556:142:16"},"nativeSrc":"31556:148:16","nodeType":"YulFunctionCall","src":"31556:148:16"},"variableNames":[{"name":"pos","nativeSrc":"31549:3:16","nodeType":"YulIdentifier","src":"31549:3:16"}]},{"nativeSrc":"31714:10:16","nodeType":"YulAssignment","src":"31714:10:16","value":{"name":"pos","nativeSrc":"31721:3:16","nodeType":"YulIdentifier","src":"31721:3:16"},"variableNames":[{"name":"end","nativeSrc":"31714:3:16","nodeType":"YulIdentifier","src":"31714:3:16"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"31349:381:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31525:3:16","nodeType":"YulTypedName","src":"31525:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31534:3:16","nodeType":"YulTypedName","src":"31534:3:16","type":""}],"src":"31349:381:16"},{"body":{"nativeSrc":"31842:203:16","nodeType":"YulBlock","src":"31842:203:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31864:6:16","nodeType":"YulIdentifier","src":"31864:6:16"},{"kind":"number","nativeSrc":"31872:1:16","nodeType":"YulLiteral","src":"31872:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31860:3:16","nodeType":"YulIdentifier","src":"31860:3:16"},"nativeSrc":"31860:14:16","nodeType":"YulFunctionCall","src":"31860:14:16"},{"hexValue":"416e20554349206964206173736f63696174656420776974682074686973206e","kind":"string","nativeSrc":"31876:34:16","nodeType":"YulLiteral","src":"31876:34:16","type":"","value":"An UCI id associated with this n"}],"functionName":{"name":"mstore","nativeSrc":"31853:6:16","nodeType":"YulIdentifier","src":"31853:6:16"},"nativeSrc":"31853:58:16","nodeType":"YulFunctionCall","src":"31853:58:16"},"nativeSrc":"31853:58:16","nodeType":"YulExpressionStatement","src":"31853:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31932:6:16","nodeType":"YulIdentifier","src":"31932:6:16"},{"kind":"number","nativeSrc":"31940:2:16","nodeType":"YulLiteral","src":"31940:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31928:3:16","nodeType":"YulIdentifier","src":"31928:3:16"},"nativeSrc":"31928:15:16","nodeType":"YulFunctionCall","src":"31928:15:16"},{"hexValue":"616d6520616c7265616479206578697374732e20506c656173652063686f6f73","kind":"string","nativeSrc":"31945:34:16","nodeType":"YulLiteral","src":"31945:34:16","type":"","value":"ame already exists. Please choos"}],"functionName":{"name":"mstore","nativeSrc":"31921:6:16","nodeType":"YulIdentifier","src":"31921:6:16"},"nativeSrc":"31921:59:16","nodeType":"YulFunctionCall","src":"31921:59:16"},"nativeSrc":"31921:59:16","nodeType":"YulExpressionStatement","src":"31921:59:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"32001:6:16","nodeType":"YulIdentifier","src":"32001:6:16"},{"kind":"number","nativeSrc":"32009:2:16","nodeType":"YulLiteral","src":"32009:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"31997:3:16","nodeType":"YulIdentifier","src":"31997:3:16"},"nativeSrc":"31997:15:16","nodeType":"YulFunctionCall","src":"31997:15:16"},{"hexValue":"65206120646966666572656e74206e616d65202121","kind":"string","nativeSrc":"32014:23:16","nodeType":"YulLiteral","src":"32014:23:16","type":"","value":"e a different name !!"}],"functionName":{"name":"mstore","nativeSrc":"31990:6:16","nodeType":"YulIdentifier","src":"31990:6:16"},"nativeSrc":"31990:48:16","nodeType":"YulFunctionCall","src":"31990:48:16"},"nativeSrc":"31990:48:16","nodeType":"YulExpressionStatement","src":"31990:48:16"}]},"name":"store_literal_in_memory_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070","nativeSrc":"31736:309:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"31834:6:16","nodeType":"YulTypedName","src":"31834:6:16","type":""}],"src":"31736:309:16"},{"body":{"nativeSrc":"32197:220:16","nodeType":"YulBlock","src":"32197:220:16","statements":[{"nativeSrc":"32207:74:16","nodeType":"YulAssignment","src":"32207:74:16","value":{"arguments":[{"name":"pos","nativeSrc":"32273:3:16","nodeType":"YulIdentifier","src":"32273:3:16"},{"kind":"number","nativeSrc":"32278:2:16","nodeType":"YulLiteral","src":"32278:2:16","type":"","value":"85"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"32214:58:16","nodeType":"YulIdentifier","src":"32214:58:16"},"nativeSrc":"32214:67:16","nodeType":"YulFunctionCall","src":"32214:67:16"},"variableNames":[{"name":"pos","nativeSrc":"32207:3:16","nodeType":"YulIdentifier","src":"32207:3:16"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"32379:3:16","nodeType":"YulIdentifier","src":"32379:3:16"}],"functionName":{"name":"store_literal_in_memory_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070","nativeSrc":"32290:88:16","nodeType":"YulIdentifier","src":"32290:88:16"},"nativeSrc":"32290:93:16","nodeType":"YulFunctionCall","src":"32290:93:16"},"nativeSrc":"32290:93:16","nodeType":"YulExpressionStatement","src":"32290:93:16"},{"nativeSrc":"32392:19:16","nodeType":"YulAssignment","src":"32392:19:16","value":{"arguments":[{"name":"pos","nativeSrc":"32403:3:16","nodeType":"YulIdentifier","src":"32403:3:16"},{"kind":"number","nativeSrc":"32408:2:16","nodeType":"YulLiteral","src":"32408:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"32399:3:16","nodeType":"YulIdentifier","src":"32399:3:16"},"nativeSrc":"32399:12:16","nodeType":"YulFunctionCall","src":"32399:12:16"},"variableNames":[{"name":"end","nativeSrc":"32392:3:16","nodeType":"YulIdentifier","src":"32392:3:16"}]}]},"name":"abi_encode_t_stringliteral_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070_to_t_string_memory_ptr_fromStack","nativeSrc":"32051:366:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"32185:3:16","nodeType":"YulTypedName","src":"32185:3:16","type":""}],"returnVariables":[{"name":"end","nativeSrc":"32193:3:16","nodeType":"YulTypedName","src":"32193:3:16","type":""}],"src":"32051:366:16"},{"body":{"nativeSrc":"32594:248:16","nodeType":"YulBlock","src":"32594:248:16","statements":[{"nativeSrc":"32604:26:16","nodeType":"YulAssignment","src":"32604:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"32616:9:16","nodeType":"YulIdentifier","src":"32616:9:16"},{"kind":"number","nativeSrc":"32627:2:16","nodeType":"YulLiteral","src":"32627:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32612:3:16","nodeType":"YulIdentifier","src":"32612:3:16"},"nativeSrc":"32612:18:16","nodeType":"YulFunctionCall","src":"32612:18:16"},"variableNames":[{"name":"tail","nativeSrc":"32604:4:16","nodeType":"YulIdentifier","src":"32604:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"32651:9:16","nodeType":"YulIdentifier","src":"32651:9:16"},{"kind":"number","nativeSrc":"32662:1:16","nodeType":"YulLiteral","src":"32662:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32647:3:16","nodeType":"YulIdentifier","src":"32647:3:16"},"nativeSrc":"32647:17:16","nodeType":"YulFunctionCall","src":"32647:17:16"},{"arguments":[{"name":"tail","nativeSrc":"32670:4:16","nodeType":"YulIdentifier","src":"32670:4:16"},{"name":"headStart","nativeSrc":"32676:9:16","nodeType":"YulIdentifier","src":"32676:9:16"}],"functionName":{"name":"sub","nativeSrc":"32666:3:16","nodeType":"YulIdentifier","src":"32666:3:16"},"nativeSrc":"32666:20:16","nodeType":"YulFunctionCall","src":"32666:20:16"}],"functionName":{"name":"mstore","nativeSrc":"32640:6:16","nodeType":"YulIdentifier","src":"32640:6:16"},"nativeSrc":"32640:47:16","nodeType":"YulFunctionCall","src":"32640:47:16"},"nativeSrc":"32640:47:16","nodeType":"YulExpressionStatement","src":"32640:47:16"},{"nativeSrc":"32696:139:16","nodeType":"YulAssignment","src":"32696:139:16","value":{"arguments":[{"name":"tail","nativeSrc":"32830:4:16","nodeType":"YulIdentifier","src":"32830:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070_to_t_string_memory_ptr_fromStack","nativeSrc":"32704:124:16","nodeType":"YulIdentifier","src":"32704:124:16"},"nativeSrc":"32704:131:16","nodeType":"YulFunctionCall","src":"32704:131:16"},"variableNames":[{"name":"tail","nativeSrc":"32696:4:16","nodeType":"YulIdentifier","src":"32696:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"32423:419:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32574:9:16","nodeType":"YulTypedName","src":"32574:9:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32589:4:16","nodeType":"YulTypedName","src":"32589:4:16","type":""}],"src":"32423:419:16"},{"body":{"nativeSrc":"32892:49:16","nodeType":"YulBlock","src":"32892:49:16","statements":[{"nativeSrc":"32902:33:16","nodeType":"YulAssignment","src":"32902:33:16","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"32920:5:16","nodeType":"YulIdentifier","src":"32920:5:16"},{"kind":"number","nativeSrc":"32927:2:16","nodeType":"YulLiteral","src":"32927:2:16","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"32916:3:16","nodeType":"YulIdentifier","src":"32916:3:16"},"nativeSrc":"32916:14:16","nodeType":"YulFunctionCall","src":"32916:14:16"},{"kind":"number","nativeSrc":"32932:2:16","nodeType":"YulLiteral","src":"32932:2:16","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"32912:3:16","nodeType":"YulIdentifier","src":"32912:3:16"},"nativeSrc":"32912:23:16","nodeType":"YulFunctionCall","src":"32912:23:16"},"variableNames":[{"name":"result","nativeSrc":"32902:6:16","nodeType":"YulIdentifier","src":"32902:6:16"}]}]},"name":"divide_by_32_ceil","nativeSrc":"32848:93:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"32875:5:16","nodeType":"YulTypedName","src":"32875:5:16","type":""}],"returnVariables":[{"name":"result","nativeSrc":"32885:6:16","nodeType":"YulTypedName","src":"32885:6:16","type":""}],"src":"32848:93:16"},{"body":{"nativeSrc":"33000:54:16","nodeType":"YulBlock","src":"33000:54:16","statements":[{"nativeSrc":"33010:37:16","nodeType":"YulAssignment","src":"33010:37:16","value":{"arguments":[{"name":"bits","nativeSrc":"33035:4:16","nodeType":"YulIdentifier","src":"33035:4:16"},{"name":"value","nativeSrc":"33041:5:16","nodeType":"YulIdentifier","src":"33041:5:16"}],"functionName":{"name":"shl","nativeSrc":"33031:3:16","nodeType":"YulIdentifier","src":"33031:3:16"},"nativeSrc":"33031:16:16","nodeType":"YulFunctionCall","src":"33031:16:16"},"variableNames":[{"name":"newValue","nativeSrc":"33010:8:16","nodeType":"YulIdentifier","src":"33010:8:16"}]}]},"name":"shift_left_dynamic","nativeSrc":"32947:107:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"32975:4:16","nodeType":"YulTypedName","src":"32975:4:16","type":""},{"name":"value","nativeSrc":"32981:5:16","nodeType":"YulTypedName","src":"32981:5:16","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"32991:8:16","nodeType":"YulTypedName","src":"32991:8:16","type":""}],"src":"32947:107:16"},{"body":{"nativeSrc":"33136:317:16","nodeType":"YulBlock","src":"33136:317:16","statements":[{"nativeSrc":"33146:35:16","nodeType":"YulVariableDeclaration","src":"33146:35:16","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"33167:10:16","nodeType":"YulIdentifier","src":"33167:10:16"},{"kind":"number","nativeSrc":"33179:1:16","nodeType":"YulLiteral","src":"33179:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"33163:3:16","nodeType":"YulIdentifier","src":"33163:3:16"},"nativeSrc":"33163:18:16","nodeType":"YulFunctionCall","src":"33163:18:16"},"variables":[{"name":"shiftBits","nativeSrc":"33150:9:16","nodeType":"YulTypedName","src":"33150:9:16","type":""}]},{"nativeSrc":"33190:109:16","nodeType":"YulVariableDeclaration","src":"33190:109:16","value":{"arguments":[{"name":"shiftBits","nativeSrc":"33221:9:16","nodeType":"YulIdentifier","src":"33221:9:16"},{"kind":"number","nativeSrc":"33232:66:16","nodeType":"YulLiteral","src":"33232:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"33202:18:16","nodeType":"YulIdentifier","src":"33202:18:16"},"nativeSrc":"33202:97:16","nodeType":"YulFunctionCall","src":"33202:97:16"},"variables":[{"name":"mask","nativeSrc":"33194:4:16","nodeType":"YulTypedName","src":"33194:4:16","type":""}]},{"nativeSrc":"33308:51:16","nodeType":"YulAssignment","src":"33308:51:16","value":{"arguments":[{"name":"shiftBits","nativeSrc":"33339:9:16","nodeType":"YulIdentifier","src":"33339:9:16"},{"name":"toInsert","nativeSrc":"33350:8:16","nodeType":"YulIdentifier","src":"33350:8:16"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"33320:18:16","nodeType":"YulIdentifier","src":"33320:18:16"},"nativeSrc":"33320:39:16","nodeType":"YulFunctionCall","src":"33320:39:16"},"variableNames":[{"name":"toInsert","nativeSrc":"33308:8:16","nodeType":"YulIdentifier","src":"33308:8:16"}]},{"nativeSrc":"33368:30:16","nodeType":"YulAssignment","src":"33368:30:16","value":{"arguments":[{"name":"value","nativeSrc":"33381:5:16","nodeType":"YulIdentifier","src":"33381:5:16"},{"arguments":[{"name":"mask","nativeSrc":"33392:4:16","nodeType":"YulIdentifier","src":"33392:4:16"}],"functionName":{"name":"not","nativeSrc":"33388:3:16","nodeType":"YulIdentifier","src":"33388:3:16"},"nativeSrc":"33388:9:16","nodeType":"YulFunctionCall","src":"33388:9:16"}],"functionName":{"name":"and","nativeSrc":"33377:3:16","nodeType":"YulIdentifier","src":"33377:3:16"},"nativeSrc":"33377:21:16","nodeType":"YulFunctionCall","src":"33377:21:16"},"variableNames":[{"name":"value","nativeSrc":"33368:5:16","nodeType":"YulIdentifier","src":"33368:5:16"}]},{"nativeSrc":"33407:40:16","nodeType":"YulAssignment","src":"33407:40:16","value":{"arguments":[{"name":"value","nativeSrc":"33420:5:16","nodeType":"YulIdentifier","src":"33420:5:16"},{"arguments":[{"name":"toInsert","nativeSrc":"33431:8:16","nodeType":"YulIdentifier","src":"33431:8:16"},{"name":"mask","nativeSrc":"33441:4:16","nodeType":"YulIdentifier","src":"33441:4:16"}],"functionName":{"name":"and","nativeSrc":"33427:3:16","nodeType":"YulIdentifier","src":"33427:3:16"},"nativeSrc":"33427:19:16","nodeType":"YulFunctionCall","src":"33427:19:16"}],"functionName":{"name":"or","nativeSrc":"33417:2:16","nodeType":"YulIdentifier","src":"33417:2:16"},"nativeSrc":"33417:30:16","nodeType":"YulFunctionCall","src":"33417:30:16"},"variableNames":[{"name":"result","nativeSrc":"33407:6:16","nodeType":"YulIdentifier","src":"33407:6:16"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"33060:393:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33097:5:16","nodeType":"YulTypedName","src":"33097:5:16","type":""},{"name":"shiftBytes","nativeSrc":"33104:10:16","nodeType":"YulTypedName","src":"33104:10:16","type":""},{"name":"toInsert","nativeSrc":"33116:8:16","nodeType":"YulTypedName","src":"33116:8:16","type":""}],"returnVariables":[{"name":"result","nativeSrc":"33129:6:16","nodeType":"YulTypedName","src":"33129:6:16","type":""}],"src":"33060:393:16"},{"body":{"nativeSrc":"33519:82:16","nodeType":"YulBlock","src":"33519:82:16","statements":[{"nativeSrc":"33529:66:16","nodeType":"YulAssignment","src":"33529:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"33587:5:16","nodeType":"YulIdentifier","src":"33587:5:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"33569:17:16","nodeType":"YulIdentifier","src":"33569:17:16"},"nativeSrc":"33569:24:16","nodeType":"YulFunctionCall","src":"33569:24:16"}],"functionName":{"name":"identity","nativeSrc":"33560:8:16","nodeType":"YulIdentifier","src":"33560:8:16"},"nativeSrc":"33560:34:16","nodeType":"YulFunctionCall","src":"33560:34:16"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"33542:17:16","nodeType":"YulIdentifier","src":"33542:17:16"},"nativeSrc":"33542:53:16","nodeType":"YulFunctionCall","src":"33542:53:16"},"variableNames":[{"name":"converted","nativeSrc":"33529:9:16","nodeType":"YulIdentifier","src":"33529:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"33459:142:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33499:5:16","nodeType":"YulTypedName","src":"33499:5:16","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"33509:9:16","nodeType":"YulTypedName","src":"33509:9:16","type":""}],"src":"33459:142:16"},{"body":{"nativeSrc":"33654:28:16","nodeType":"YulBlock","src":"33654:28:16","statements":[{"nativeSrc":"33664:12:16","nodeType":"YulAssignment","src":"33664:12:16","value":{"name":"value","nativeSrc":"33671:5:16","nodeType":"YulIdentifier","src":"33671:5:16"},"variableNames":[{"name":"ret","nativeSrc":"33664:3:16","nodeType":"YulIdentifier","src":"33664:3:16"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"33607:75:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33640:5:16","nodeType":"YulTypedName","src":"33640:5:16","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"33650:3:16","nodeType":"YulTypedName","src":"33650:3:16","type":""}],"src":"33607:75:16"},{"body":{"nativeSrc":"33764:193:16","nodeType":"YulBlock","src":"33764:193:16","statements":[{"nativeSrc":"33774:63:16","nodeType":"YulVariableDeclaration","src":"33774:63:16","value":{"arguments":[{"name":"value_0","nativeSrc":"33829:7:16","nodeType":"YulIdentifier","src":"33829:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"33798:30:16","nodeType":"YulIdentifier","src":"33798:30:16"},"nativeSrc":"33798:39:16","nodeType":"YulFunctionCall","src":"33798:39:16"},"variables":[{"name":"convertedValue_0","nativeSrc":"33778:16:16","nodeType":"YulTypedName","src":"33778:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"33853:4:16","nodeType":"YulIdentifier","src":"33853:4:16"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"33893:4:16","nodeType":"YulIdentifier","src":"33893:4:16"}],"functionName":{"name":"sload","nativeSrc":"33887:5:16","nodeType":"YulIdentifier","src":"33887:5:16"},"nativeSrc":"33887:11:16","nodeType":"YulFunctionCall","src":"33887:11:16"},{"name":"offset","nativeSrc":"33900:6:16","nodeType":"YulIdentifier","src":"33900:6:16"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"33932:16:16","nodeType":"YulIdentifier","src":"33932:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"33908:23:16","nodeType":"YulIdentifier","src":"33908:23:16"},"nativeSrc":"33908:41:16","nodeType":"YulFunctionCall","src":"33908:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"33859:27:16","nodeType":"YulIdentifier","src":"33859:27:16"},"nativeSrc":"33859:91:16","nodeType":"YulFunctionCall","src":"33859:91:16"}],"functionName":{"name":"sstore","nativeSrc":"33846:6:16","nodeType":"YulIdentifier","src":"33846:6:16"},"nativeSrc":"33846:105:16","nodeType":"YulFunctionCall","src":"33846:105:16"},"nativeSrc":"33846:105:16","nodeType":"YulExpressionStatement","src":"33846:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"33688:269:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"33741:4:16","nodeType":"YulTypedName","src":"33741:4:16","type":""},{"name":"offset","nativeSrc":"33747:6:16","nodeType":"YulTypedName","src":"33747:6:16","type":""},{"name":"value_0","nativeSrc":"33755:7:16","nodeType":"YulTypedName","src":"33755:7:16","type":""}],"src":"33688:269:16"},{"body":{"nativeSrc":"34012:24:16","nodeType":"YulBlock","src":"34012:24:16","statements":[{"nativeSrc":"34022:8:16","nodeType":"YulAssignment","src":"34022:8:16","value":{"kind":"number","nativeSrc":"34029:1:16","nodeType":"YulLiteral","src":"34029:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"34022:3:16","nodeType":"YulIdentifier","src":"34022:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"33963:73:16","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"34008:3:16","nodeType":"YulTypedName","src":"34008:3:16","type":""}],"src":"33963:73:16"},{"body":{"nativeSrc":"34095:136:16","nodeType":"YulBlock","src":"34095:136:16","statements":[{"nativeSrc":"34105:46:16","nodeType":"YulVariableDeclaration","src":"34105:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"34119:30:16","nodeType":"YulIdentifier","src":"34119:30:16"},"nativeSrc":"34119:32:16","nodeType":"YulFunctionCall","src":"34119:32:16"},"variables":[{"name":"zero_0","nativeSrc":"34109:6:16","nodeType":"YulTypedName","src":"34109:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"34204:4:16","nodeType":"YulIdentifier","src":"34204:4:16"},{"name":"offset","nativeSrc":"34210:6:16","nodeType":"YulIdentifier","src":"34210:6:16"},{"name":"zero_0","nativeSrc":"34218:6:16","nodeType":"YulIdentifier","src":"34218:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"34160:43:16","nodeType":"YulIdentifier","src":"34160:43:16"},"nativeSrc":"34160:65:16","nodeType":"YulFunctionCall","src":"34160:65:16"},"nativeSrc":"34160:65:16","nodeType":"YulExpressionStatement","src":"34160:65:16"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"34042:189:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"34081:4:16","nodeType":"YulTypedName","src":"34081:4:16","type":""},{"name":"offset","nativeSrc":"34087:6:16","nodeType":"YulTypedName","src":"34087:6:16","type":""}],"src":"34042:189:16"},{"body":{"nativeSrc":"34287:136:16","nodeType":"YulBlock","src":"34287:136:16","statements":[{"body":{"nativeSrc":"34354:63:16","nodeType":"YulBlock","src":"34354:63:16","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"34398:5:16","nodeType":"YulIdentifier","src":"34398:5:16"},{"kind":"number","nativeSrc":"34405:1:16","nodeType":"YulLiteral","src":"34405:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"34368:29:16","nodeType":"YulIdentifier","src":"34368:29:16"},"nativeSrc":"34368:39:16","nodeType":"YulFunctionCall","src":"34368:39:16"},"nativeSrc":"34368:39:16","nodeType":"YulExpressionStatement","src":"34368:39:16"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"34307:5:16","nodeType":"YulIdentifier","src":"34307:5:16"},{"name":"end","nativeSrc":"34314:3:16","nodeType":"YulIdentifier","src":"34314:3:16"}],"functionName":{"name":"lt","nativeSrc":"34304:2:16","nodeType":"YulIdentifier","src":"34304:2:16"},"nativeSrc":"34304:14:16","nodeType":"YulFunctionCall","src":"34304:14:16"},"nativeSrc":"34297:120:16","nodeType":"YulForLoop","post":{"nativeSrc":"34319:26:16","nodeType":"YulBlock","src":"34319:26:16","statements":[{"nativeSrc":"34321:22:16","nodeType":"YulAssignment","src":"34321:22:16","value":{"arguments":[{"name":"start","nativeSrc":"34334:5:16","nodeType":"YulIdentifier","src":"34334:5:16"},{"kind":"number","nativeSrc":"34341:1:16","nodeType":"YulLiteral","src":"34341:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"34330:3:16","nodeType":"YulIdentifier","src":"34330:3:16"},"nativeSrc":"34330:13:16","nodeType":"YulFunctionCall","src":"34330:13:16"},"variableNames":[{"name":"start","nativeSrc":"34321:5:16","nodeType":"YulIdentifier","src":"34321:5:16"}]}]},"pre":{"nativeSrc":"34301:2:16","nodeType":"YulBlock","src":"34301:2:16","statements":[]},"src":"34297:120:16"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"34237:186:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"34275:5:16","nodeType":"YulTypedName","src":"34275:5:16","type":""},{"name":"end","nativeSrc":"34282:3:16","nodeType":"YulTypedName","src":"34282:3:16","type":""}],"src":"34237:186:16"},{"body":{"nativeSrc":"34508:464:16","nodeType":"YulBlock","src":"34508:464:16","statements":[{"body":{"nativeSrc":"34534:431:16","nodeType":"YulBlock","src":"34534:431:16","statements":[{"nativeSrc":"34548:54:16","nodeType":"YulVariableDeclaration","src":"34548:54:16","value":{"arguments":[{"name":"array","nativeSrc":"34596:5:16","nodeType":"YulIdentifier","src":"34596:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"34564:31:16","nodeType":"YulIdentifier","src":"34564:31:16"},"nativeSrc":"34564:38:16","nodeType":"YulFunctionCall","src":"34564:38:16"},"variables":[{"name":"dataArea","nativeSrc":"34552:8:16","nodeType":"YulTypedName","src":"34552:8:16","type":""}]},{"nativeSrc":"34615:63:16","nodeType":"YulVariableDeclaration","src":"34615:63:16","value":{"arguments":[{"name":"dataArea","nativeSrc":"34638:8:16","nodeType":"YulIdentifier","src":"34638:8:16"},{"arguments":[{"name":"startIndex","nativeSrc":"34666:10:16","nodeType":"YulIdentifier","src":"34666:10:16"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"34648:17:16","nodeType":"YulIdentifier","src":"34648:17:16"},"nativeSrc":"34648:29:16","nodeType":"YulFunctionCall","src":"34648:29:16"}],"functionName":{"name":"add","nativeSrc":"34634:3:16","nodeType":"YulIdentifier","src":"34634:3:16"},"nativeSrc":"34634:44:16","nodeType":"YulFunctionCall","src":"34634:44:16"},"variables":[{"name":"deleteStart","nativeSrc":"34619:11:16","nodeType":"YulTypedName","src":"34619:11:16","type":""}]},{"body":{"nativeSrc":"34835:27:16","nodeType":"YulBlock","src":"34835:27:16","statements":[{"nativeSrc":"34837:23:16","nodeType":"YulAssignment","src":"34837:23:16","value":{"name":"dataArea","nativeSrc":"34852:8:16","nodeType":"YulIdentifier","src":"34852:8:16"},"variableNames":[{"name":"deleteStart","nativeSrc":"34837:11:16","nodeType":"YulIdentifier","src":"34837:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"34819:10:16","nodeType":"YulIdentifier","src":"34819:10:16"},{"kind":"number","nativeSrc":"34831:2:16","nodeType":"YulLiteral","src":"34831:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"34816:2:16","nodeType":"YulIdentifier","src":"34816:2:16"},"nativeSrc":"34816:18:16","nodeType":"YulFunctionCall","src":"34816:18:16"},"nativeSrc":"34813:49:16","nodeType":"YulIf","src":"34813:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"34904:11:16","nodeType":"YulIdentifier","src":"34904:11:16"},{"arguments":[{"name":"dataArea","nativeSrc":"34921:8:16","nodeType":"YulIdentifier","src":"34921:8:16"},{"arguments":[{"name":"len","nativeSrc":"34949:3:16","nodeType":"YulIdentifier","src":"34949:3:16"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"34931:17:16","nodeType":"YulIdentifier","src":"34931:17:16"},"nativeSrc":"34931:22:16","nodeType":"YulFunctionCall","src":"34931:22:16"}],"functionName":{"name":"add","nativeSrc":"34917:3:16","nodeType":"YulIdentifier","src":"34917:3:16"},"nativeSrc":"34917:37:16","nodeType":"YulFunctionCall","src":"34917:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"34875:28:16","nodeType":"YulIdentifier","src":"34875:28:16"},"nativeSrc":"34875:80:16","nodeType":"YulFunctionCall","src":"34875:80:16"},"nativeSrc":"34875:80:16","nodeType":"YulExpressionStatement","src":"34875:80:16"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"34525:3:16","nodeType":"YulIdentifier","src":"34525:3:16"},{"kind":"number","nativeSrc":"34530:2:16","nodeType":"YulLiteral","src":"34530:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"34522:2:16","nodeType":"YulIdentifier","src":"34522:2:16"},"nativeSrc":"34522:11:16","nodeType":"YulFunctionCall","src":"34522:11:16"},"nativeSrc":"34519:446:16","nodeType":"YulIf","src":"34519:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"34429:543:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"34484:5:16","nodeType":"YulTypedName","src":"34484:5:16","type":""},{"name":"len","nativeSrc":"34491:3:16","nodeType":"YulTypedName","src":"34491:3:16","type":""},{"name":"startIndex","nativeSrc":"34496:10:16","nodeType":"YulTypedName","src":"34496:10:16","type":""}],"src":"34429:543:16"},{"body":{"nativeSrc":"35041:54:16","nodeType":"YulBlock","src":"35041:54:16","statements":[{"nativeSrc":"35051:37:16","nodeType":"YulAssignment","src":"35051:37:16","value":{"arguments":[{"name":"bits","nativeSrc":"35076:4:16","nodeType":"YulIdentifier","src":"35076:4:16"},{"name":"value","nativeSrc":"35082:5:16","nodeType":"YulIdentifier","src":"35082:5:16"}],"functionName":{"name":"shr","nativeSrc":"35072:3:16","nodeType":"YulIdentifier","src":"35072:3:16"},"nativeSrc":"35072:16:16","nodeType":"YulFunctionCall","src":"35072:16:16"},"variableNames":[{"name":"newValue","nativeSrc":"35051:8:16","nodeType":"YulIdentifier","src":"35051:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"34978:117:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"35016:4:16","nodeType":"YulTypedName","src":"35016:4:16","type":""},{"name":"value","nativeSrc":"35022:5:16","nodeType":"YulTypedName","src":"35022:5:16","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"35032:8:16","nodeType":"YulTypedName","src":"35032:8:16","type":""}],"src":"34978:117:16"},{"body":{"nativeSrc":"35152:118:16","nodeType":"YulBlock","src":"35152:118:16","statements":[{"nativeSrc":"35162:68:16","nodeType":"YulVariableDeclaration","src":"35162:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"35211:1:16","nodeType":"YulLiteral","src":"35211:1:16","type":"","value":"8"},{"name":"bytes","nativeSrc":"35214:5:16","nodeType":"YulIdentifier","src":"35214:5:16"}],"functionName":{"name":"mul","nativeSrc":"35207:3:16","nodeType":"YulIdentifier","src":"35207:3:16"},"nativeSrc":"35207:13:16","nodeType":"YulFunctionCall","src":"35207:13:16"},{"arguments":[{"kind":"number","nativeSrc":"35226:1:16","nodeType":"YulLiteral","src":"35226:1:16","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"35222:3:16","nodeType":"YulIdentifier","src":"35222:3:16"},"nativeSrc":"35222:6:16","nodeType":"YulFunctionCall","src":"35222:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"35178:28:16","nodeType":"YulIdentifier","src":"35178:28:16"},"nativeSrc":"35178:51:16","nodeType":"YulFunctionCall","src":"35178:51:16"}],"functionName":{"name":"not","nativeSrc":"35174:3:16","nodeType":"YulIdentifier","src":"35174:3:16"},"nativeSrc":"35174:56:16","nodeType":"YulFunctionCall","src":"35174:56:16"},"variables":[{"name":"mask","nativeSrc":"35166:4:16","nodeType":"YulTypedName","src":"35166:4:16","type":""}]},{"nativeSrc":"35239:25:16","nodeType":"YulAssignment","src":"35239:25:16","value":{"arguments":[{"name":"data","nativeSrc":"35253:4:16","nodeType":"YulIdentifier","src":"35253:4:16"},{"name":"mask","nativeSrc":"35259:4:16","nodeType":"YulIdentifier","src":"35259:4:16"}],"functionName":{"name":"and","nativeSrc":"35249:3:16","nodeType":"YulIdentifier","src":"35249:3:16"},"nativeSrc":"35249:15:16","nodeType":"YulFunctionCall","src":"35249:15:16"},"variableNames":[{"name":"result","nativeSrc":"35239:6:16","nodeType":"YulIdentifier","src":"35239:6:16"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"35101:169:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"35129:4:16","nodeType":"YulTypedName","src":"35129:4:16","type":""},{"name":"bytes","nativeSrc":"35135:5:16","nodeType":"YulTypedName","src":"35135:5:16","type":""}],"returnVariables":[{"name":"result","nativeSrc":"35145:6:16","nodeType":"YulTypedName","src":"35145:6:16","type":""}],"src":"35101:169:16"},{"body":{"nativeSrc":"35356:214:16","nodeType":"YulBlock","src":"35356:214:16","statements":[{"nativeSrc":"35489:37:16","nodeType":"YulAssignment","src":"35489:37:16","value":{"arguments":[{"name":"data","nativeSrc":"35516:4:16","nodeType":"YulIdentifier","src":"35516:4:16"},{"name":"len","nativeSrc":"35522:3:16","nodeType":"YulIdentifier","src":"35522:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"35497:18:16","nodeType":"YulIdentifier","src":"35497:18:16"},"nativeSrc":"35497:29:16","nodeType":"YulFunctionCall","src":"35497:29:16"},"variableNames":[{"name":"data","nativeSrc":"35489:4:16","nodeType":"YulIdentifier","src":"35489:4:16"}]},{"nativeSrc":"35535:29:16","nodeType":"YulAssignment","src":"35535:29:16","value":{"arguments":[{"name":"data","nativeSrc":"35546:4:16","nodeType":"YulIdentifier","src":"35546:4:16"},{"arguments":[{"kind":"number","nativeSrc":"35556:1:16","nodeType":"YulLiteral","src":"35556:1:16","type":"","value":"2"},{"name":"len","nativeSrc":"35559:3:16","nodeType":"YulIdentifier","src":"35559:3:16"}],"functionName":{"name":"mul","nativeSrc":"35552:3:16","nodeType":"YulIdentifier","src":"35552:3:16"},"nativeSrc":"35552:11:16","nodeType":"YulFunctionCall","src":"35552:11:16"}],"functionName":{"name":"or","nativeSrc":"35543:2:16","nodeType":"YulIdentifier","src":"35543:2:16"},"nativeSrc":"35543:21:16","nodeType":"YulFunctionCall","src":"35543:21:16"},"variableNames":[{"name":"used","nativeSrc":"35535:4:16","nodeType":"YulIdentifier","src":"35535:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"35275:295:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"35337:4:16","nodeType":"YulTypedName","src":"35337:4:16","type":""},{"name":"len","nativeSrc":"35343:3:16","nodeType":"YulTypedName","src":"35343:3:16","type":""}],"returnVariables":[{"name":"used","nativeSrc":"35351:4:16","nodeType":"YulTypedName","src":"35351:4:16","type":""}],"src":"35275:295:16"},{"body":{"nativeSrc":"35667:1303:16","nodeType":"YulBlock","src":"35667:1303:16","statements":[{"nativeSrc":"35678:51:16","nodeType":"YulVariableDeclaration","src":"35678:51:16","value":{"arguments":[{"name":"src","nativeSrc":"35725:3:16","nodeType":"YulIdentifier","src":"35725:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"35692:32:16","nodeType":"YulIdentifier","src":"35692:32:16"},"nativeSrc":"35692:37:16","nodeType":"YulFunctionCall","src":"35692:37:16"},"variables":[{"name":"newLen","nativeSrc":"35682:6:16","nodeType":"YulTypedName","src":"35682:6:16","type":""}]},{"body":{"nativeSrc":"35814:22:16","nodeType":"YulBlock","src":"35814:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"35816:16:16","nodeType":"YulIdentifier","src":"35816:16:16"},"nativeSrc":"35816:18:16","nodeType":"YulFunctionCall","src":"35816:18:16"},"nativeSrc":"35816:18:16","nodeType":"YulExpressionStatement","src":"35816:18:16"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"35786:6:16","nodeType":"YulIdentifier","src":"35786:6:16"},{"kind":"number","nativeSrc":"35794:18:16","nodeType":"YulLiteral","src":"35794:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"35783:2:16","nodeType":"YulIdentifier","src":"35783:2:16"},"nativeSrc":"35783:30:16","nodeType":"YulFunctionCall","src":"35783:30:16"},"nativeSrc":"35780:56:16","nodeType":"YulIf","src":"35780:56:16"},{"nativeSrc":"35846:52:16","nodeType":"YulVariableDeclaration","src":"35846:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"35892:4:16","nodeType":"YulIdentifier","src":"35892:4:16"}],"functionName":{"name":"sload","nativeSrc":"35886:5:16","nodeType":"YulIdentifier","src":"35886:5:16"},"nativeSrc":"35886:11:16","nodeType":"YulFunctionCall","src":"35886:11:16"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"35860:25:16","nodeType":"YulIdentifier","src":"35860:25:16"},"nativeSrc":"35860:38:16","nodeType":"YulFunctionCall","src":"35860:38:16"},"variables":[{"name":"oldLen","nativeSrc":"35850:6:16","nodeType":"YulTypedName","src":"35850:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"35991:4:16","nodeType":"YulIdentifier","src":"35991:4:16"},{"name":"oldLen","nativeSrc":"35997:6:16","nodeType":"YulIdentifier","src":"35997:6:16"},{"name":"newLen","nativeSrc":"36005:6:16","nodeType":"YulIdentifier","src":"36005:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"35945:45:16","nodeType":"YulIdentifier","src":"35945:45:16"},"nativeSrc":"35945:67:16","nodeType":"YulFunctionCall","src":"35945:67:16"},"nativeSrc":"35945:67:16","nodeType":"YulExpressionStatement","src":"35945:67:16"},{"nativeSrc":"36022:18:16","nodeType":"YulVariableDeclaration","src":"36022:18:16","value":{"kind":"number","nativeSrc":"36039:1:16","nodeType":"YulLiteral","src":"36039:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"36026:9:16","nodeType":"YulTypedName","src":"36026:9:16","type":""}]},{"nativeSrc":"36050:17:16","nodeType":"YulAssignment","src":"36050:17:16","value":{"kind":"number","nativeSrc":"36063:4:16","nodeType":"YulLiteral","src":"36063:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"36050:9:16","nodeType":"YulIdentifier","src":"36050:9:16"}]},{"cases":[{"body":{"nativeSrc":"36114:611:16","nodeType":"YulBlock","src":"36114:611:16","statements":[{"nativeSrc":"36128:37:16","nodeType":"YulVariableDeclaration","src":"36128:37:16","value":{"arguments":[{"name":"newLen","nativeSrc":"36147:6:16","nodeType":"YulIdentifier","src":"36147:6:16"},{"arguments":[{"kind":"number","nativeSrc":"36159:4:16","nodeType":"YulLiteral","src":"36159:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"36155:3:16","nodeType":"YulIdentifier","src":"36155:3:16"},"nativeSrc":"36155:9:16","nodeType":"YulFunctionCall","src":"36155:9:16"}],"functionName":{"name":"and","nativeSrc":"36143:3:16","nodeType":"YulIdentifier","src":"36143:3:16"},"nativeSrc":"36143:22:16","nodeType":"YulFunctionCall","src":"36143:22:16"},"variables":[{"name":"loopEnd","nativeSrc":"36132:7:16","nodeType":"YulTypedName","src":"36132:7:16","type":""}]},{"nativeSrc":"36179:51:16","nodeType":"YulVariableDeclaration","src":"36179:51:16","value":{"arguments":[{"name":"slot","nativeSrc":"36225:4:16","nodeType":"YulIdentifier","src":"36225:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"36193:31:16","nodeType":"YulIdentifier","src":"36193:31:16"},"nativeSrc":"36193:37:16","nodeType":"YulFunctionCall","src":"36193:37:16"},"variables":[{"name":"dstPtr","nativeSrc":"36183:6:16","nodeType":"YulTypedName","src":"36183:6:16","type":""}]},{"nativeSrc":"36243:10:16","nodeType":"YulVariableDeclaration","src":"36243:10:16","value":{"kind":"number","nativeSrc":"36252:1:16","nodeType":"YulLiteral","src":"36252:1:16","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"36247:1:16","nodeType":"YulTypedName","src":"36247:1:16","type":""}]},{"body":{"nativeSrc":"36311:163:16","nodeType":"YulBlock","src":"36311:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"36336:6:16","nodeType":"YulIdentifier","src":"36336:6:16"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"36354:3:16","nodeType":"YulIdentifier","src":"36354:3:16"},{"name":"srcOffset","nativeSrc":"36359:9:16","nodeType":"YulIdentifier","src":"36359:9:16"}],"functionName":{"name":"add","nativeSrc":"36350:3:16","nodeType":"YulIdentifier","src":"36350:3:16"},"nativeSrc":"36350:19:16","nodeType":"YulFunctionCall","src":"36350:19:16"}],"functionName":{"name":"mload","nativeSrc":"36344:5:16","nodeType":"YulIdentifier","src":"36344:5:16"},"nativeSrc":"36344:26:16","nodeType":"YulFunctionCall","src":"36344:26:16"}],"functionName":{"name":"sstore","nativeSrc":"36329:6:16","nodeType":"YulIdentifier","src":"36329:6:16"},"nativeSrc":"36329:42:16","nodeType":"YulFunctionCall","src":"36329:42:16"},"nativeSrc":"36329:42:16","nodeType":"YulExpressionStatement","src":"36329:42:16"},{"nativeSrc":"36388:24:16","nodeType":"YulAssignment","src":"36388:24:16","value":{"arguments":[{"name":"dstPtr","nativeSrc":"36402:6:16","nodeType":"YulIdentifier","src":"36402:6:16"},{"kind":"number","nativeSrc":"36410:1:16","nodeType":"YulLiteral","src":"36410:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"36398:3:16","nodeType":"YulIdentifier","src":"36398:3:16"},"nativeSrc":"36398:14:16","nodeType":"YulFunctionCall","src":"36398:14:16"},"variableNames":[{"name":"dstPtr","nativeSrc":"36388:6:16","nodeType":"YulIdentifier","src":"36388:6:16"}]},{"nativeSrc":"36429:31:16","nodeType":"YulAssignment","src":"36429:31:16","value":{"arguments":[{"name":"srcOffset","nativeSrc":"36446:9:16","nodeType":"YulIdentifier","src":"36446:9:16"},{"kind":"number","nativeSrc":"36457:2:16","nodeType":"YulLiteral","src":"36457:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36442:3:16","nodeType":"YulIdentifier","src":"36442:3:16"},"nativeSrc":"36442:18:16","nodeType":"YulFunctionCall","src":"36442:18:16"},"variableNames":[{"name":"srcOffset","nativeSrc":"36429:9:16","nodeType":"YulIdentifier","src":"36429:9:16"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"36277:1:16","nodeType":"YulIdentifier","src":"36277:1:16"},{"name":"loopEnd","nativeSrc":"36280:7:16","nodeType":"YulIdentifier","src":"36280:7:16"}],"functionName":{"name":"lt","nativeSrc":"36274:2:16","nodeType":"YulIdentifier","src":"36274:2:16"},"nativeSrc":"36274:14:16","nodeType":"YulFunctionCall","src":"36274:14:16"},"nativeSrc":"36266:208:16","nodeType":"YulForLoop","post":{"nativeSrc":"36289:21:16","nodeType":"YulBlock","src":"36289:21:16","statements":[{"nativeSrc":"36291:17:16","nodeType":"YulAssignment","src":"36291:17:16","value":{"arguments":[{"name":"i","nativeSrc":"36300:1:16","nodeType":"YulIdentifier","src":"36300:1:16"},{"kind":"number","nativeSrc":"36303:4:16","nodeType":"YulLiteral","src":"36303:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"36296:3:16","nodeType":"YulIdentifier","src":"36296:3:16"},"nativeSrc":"36296:12:16","nodeType":"YulFunctionCall","src":"36296:12:16"},"variableNames":[{"name":"i","nativeSrc":"36291:1:16","nodeType":"YulIdentifier","src":"36291:1:16"}]}]},"pre":{"nativeSrc":"36270:3:16","nodeType":"YulBlock","src":"36270:3:16","statements":[]},"src":"36266:208:16"},{"body":{"nativeSrc":"36510:156:16","nodeType":"YulBlock","src":"36510:156:16","statements":[{"nativeSrc":"36528:43:16","nodeType":"YulVariableDeclaration","src":"36528:43:16","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"36555:3:16","nodeType":"YulIdentifier","src":"36555:3:16"},{"name":"srcOffset","nativeSrc":"36560:9:16","nodeType":"YulIdentifier","src":"36560:9:16"}],"functionName":{"name":"add","nativeSrc":"36551:3:16","nodeType":"YulIdentifier","src":"36551:3:16"},"nativeSrc":"36551:19:16","nodeType":"YulFunctionCall","src":"36551:19:16"}],"functionName":{"name":"mload","nativeSrc":"36545:5:16","nodeType":"YulIdentifier","src":"36545:5:16"},"nativeSrc":"36545:26:16","nodeType":"YulFunctionCall","src":"36545:26:16"},"variables":[{"name":"lastValue","nativeSrc":"36532:9:16","nodeType":"YulTypedName","src":"36532:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"36595:6:16","nodeType":"YulIdentifier","src":"36595:6:16"},{"arguments":[{"name":"lastValue","nativeSrc":"36622:9:16","nodeType":"YulIdentifier","src":"36622:9:16"},{"arguments":[{"name":"newLen","nativeSrc":"36637:6:16","nodeType":"YulIdentifier","src":"36637:6:16"},{"kind":"number","nativeSrc":"36645:4:16","nodeType":"YulLiteral","src":"36645:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"36633:3:16","nodeType":"YulIdentifier","src":"36633:3:16"},"nativeSrc":"36633:17:16","nodeType":"YulFunctionCall","src":"36633:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"36603:18:16","nodeType":"YulIdentifier","src":"36603:18:16"},"nativeSrc":"36603:48:16","nodeType":"YulFunctionCall","src":"36603:48:16"}],"functionName":{"name":"sstore","nativeSrc":"36588:6:16","nodeType":"YulIdentifier","src":"36588:6:16"},"nativeSrc":"36588:64:16","nodeType":"YulFunctionCall","src":"36588:64:16"},"nativeSrc":"36588:64:16","nodeType":"YulExpressionStatement","src":"36588:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"36493:7:16","nodeType":"YulIdentifier","src":"36493:7:16"},{"name":"newLen","nativeSrc":"36502:6:16","nodeType":"YulIdentifier","src":"36502:6:16"}],"functionName":{"name":"lt","nativeSrc":"36490:2:16","nodeType":"YulIdentifier","src":"36490:2:16"},"nativeSrc":"36490:19:16","nodeType":"YulFunctionCall","src":"36490:19:16"},"nativeSrc":"36487:179:16","nodeType":"YulIf","src":"36487:179:16"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"36686:4:16","nodeType":"YulIdentifier","src":"36686:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"36700:6:16","nodeType":"YulIdentifier","src":"36700:6:16"},{"kind":"number","nativeSrc":"36708:1:16","nodeType":"YulLiteral","src":"36708:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"36696:3:16","nodeType":"YulIdentifier","src":"36696:3:16"},"nativeSrc":"36696:14:16","nodeType":"YulFunctionCall","src":"36696:14:16"},{"kind":"number","nativeSrc":"36712:1:16","nodeType":"YulLiteral","src":"36712:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"36692:3:16","nodeType":"YulIdentifier","src":"36692:3:16"},"nativeSrc":"36692:22:16","nodeType":"YulFunctionCall","src":"36692:22:16"}],"functionName":{"name":"sstore","nativeSrc":"36679:6:16","nodeType":"YulIdentifier","src":"36679:6:16"},"nativeSrc":"36679:36:16","nodeType":"YulFunctionCall","src":"36679:36:16"},"nativeSrc":"36679:36:16","nodeType":"YulExpressionStatement","src":"36679:36:16"}]},"nativeSrc":"36107:618:16","nodeType":"YulCase","src":"36107:618:16","value":{"kind":"number","nativeSrc":"36112:1:16","nodeType":"YulLiteral","src":"36112:1:16","type":"","value":"1"}},{"body":{"nativeSrc":"36742:222:16","nodeType":"YulBlock","src":"36742:222:16","statements":[{"nativeSrc":"36756:14:16","nodeType":"YulVariableDeclaration","src":"36756:14:16","value":{"kind":"number","nativeSrc":"36769:1:16","nodeType":"YulLiteral","src":"36769:1:16","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"36760:5:16","nodeType":"YulTypedName","src":"36760:5:16","type":""}]},{"body":{"nativeSrc":"36793:67:16","nodeType":"YulBlock","src":"36793:67:16","statements":[{"nativeSrc":"36811:35:16","nodeType":"YulAssignment","src":"36811:35:16","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"36830:3:16","nodeType":"YulIdentifier","src":"36830:3:16"},{"name":"srcOffset","nativeSrc":"36835:9:16","nodeType":"YulIdentifier","src":"36835:9:16"}],"functionName":{"name":"add","nativeSrc":"36826:3:16","nodeType":"YulIdentifier","src":"36826:3:16"},"nativeSrc":"36826:19:16","nodeType":"YulFunctionCall","src":"36826:19:16"}],"functionName":{"name":"mload","nativeSrc":"36820:5:16","nodeType":"YulIdentifier","src":"36820:5:16"},"nativeSrc":"36820:26:16","nodeType":"YulFunctionCall","src":"36820:26:16"},"variableNames":[{"name":"value","nativeSrc":"36811:5:16","nodeType":"YulIdentifier","src":"36811:5:16"}]}]},"condition":{"name":"newLen","nativeSrc":"36786:6:16","nodeType":"YulIdentifier","src":"36786:6:16"},"nativeSrc":"36783:77:16","nodeType":"YulIf","src":"36783:77:16"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"36880:4:16","nodeType":"YulIdentifier","src":"36880:4:16"},{"arguments":[{"name":"value","nativeSrc":"36939:5:16","nodeType":"YulIdentifier","src":"36939:5:16"},{"name":"newLen","nativeSrc":"36946:6:16","nodeType":"YulIdentifier","src":"36946:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"36886:52:16","nodeType":"YulIdentifier","src":"36886:52:16"},"nativeSrc":"36886:67:16","nodeType":"YulFunctionCall","src":"36886:67:16"}],"functionName":{"name":"sstore","nativeSrc":"36873:6:16","nodeType":"YulIdentifier","src":"36873:6:16"},"nativeSrc":"36873:81:16","nodeType":"YulFunctionCall","src":"36873:81:16"},"nativeSrc":"36873:81:16","nodeType":"YulExpressionStatement","src":"36873:81:16"}]},"nativeSrc":"36734:230:16","nodeType":"YulCase","src":"36734:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"36087:6:16","nodeType":"YulIdentifier","src":"36087:6:16"},{"kind":"number","nativeSrc":"36095:2:16","nodeType":"YulLiteral","src":"36095:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"36084:2:16","nodeType":"YulIdentifier","src":"36084:2:16"},"nativeSrc":"36084:14:16","nodeType":"YulFunctionCall","src":"36084:14:16"},"nativeSrc":"36077:887:16","nodeType":"YulSwitch","src":"36077:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"35575:1395:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"35656:4:16","nodeType":"YulTypedName","src":"35656:4:16","type":""},{"name":"src","nativeSrc":"35662:3:16","nodeType":"YulTypedName","src":"35662:3:16","type":""}],"src":"35575:1395:16"},{"body":{"nativeSrc":"37096:200:16","nodeType":"YulBlock","src":"37096:200:16","statements":[{"nativeSrc":"37106:26:16","nodeType":"YulAssignment","src":"37106:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"37118:9:16","nodeType":"YulIdentifier","src":"37118:9:16"},{"kind":"number","nativeSrc":"37129:2:16","nodeType":"YulLiteral","src":"37129:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"37114:3:16","nodeType":"YulIdentifier","src":"37114:3:16"},"nativeSrc":"37114:18:16","nodeType":"YulFunctionCall","src":"37114:18:16"},"variableNames":[{"name":"tail","nativeSrc":"37106:4:16","nodeType":"YulIdentifier","src":"37106:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"37186:6:16","nodeType":"YulIdentifier","src":"37186:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"37199:9:16","nodeType":"YulIdentifier","src":"37199:9:16"},{"kind":"number","nativeSrc":"37210:1:16","nodeType":"YulLiteral","src":"37210:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37195:3:16","nodeType":"YulIdentifier","src":"37195:3:16"},"nativeSrc":"37195:17:16","nodeType":"YulFunctionCall","src":"37195:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"37142:43:16","nodeType":"YulIdentifier","src":"37142:43:16"},"nativeSrc":"37142:71:16","nodeType":"YulFunctionCall","src":"37142:71:16"},"nativeSrc":"37142:71:16","nodeType":"YulExpressionStatement","src":"37142:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"37261:6:16","nodeType":"YulIdentifier","src":"37261:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"37274:9:16","nodeType":"YulIdentifier","src":"37274:9:16"},{"kind":"number","nativeSrc":"37285:2:16","nodeType":"YulLiteral","src":"37285:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37270:3:16","nodeType":"YulIdentifier","src":"37270:3:16"},"nativeSrc":"37270:18:16","nodeType":"YulFunctionCall","src":"37270:18:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"37223:37:16","nodeType":"YulIdentifier","src":"37223:37:16"},"nativeSrc":"37223:66:16","nodeType":"YulFunctionCall","src":"37223:66:16"},"nativeSrc":"37223:66:16","nodeType":"YulExpressionStatement","src":"37223:66:16"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nativeSrc":"36976:320:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"37060:9:16","nodeType":"YulTypedName","src":"37060:9:16","type":""},{"name":"value1","nativeSrc":"37072:6:16","nodeType":"YulTypedName","src":"37072:6:16","type":""},{"name":"value0","nativeSrc":"37080:6:16","nodeType":"YulTypedName","src":"37080:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"37091:4:16","nodeType":"YulTypedName","src":"37091:4:16","type":""}],"src":"36976:320:16"},{"body":{"nativeSrc":"37330:152:16","nodeType":"YulBlock","src":"37330:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"37347:1:16","nodeType":"YulLiteral","src":"37347:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"37350:77:16","nodeType":"YulLiteral","src":"37350:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"37340:6:16","nodeType":"YulIdentifier","src":"37340:6:16"},"nativeSrc":"37340:88:16","nodeType":"YulFunctionCall","src":"37340:88:16"},"nativeSrc":"37340:88:16","nodeType":"YulExpressionStatement","src":"37340:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"37444:1:16","nodeType":"YulLiteral","src":"37444:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"37447:4:16","nodeType":"YulLiteral","src":"37447:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"37437:6:16","nodeType":"YulIdentifier","src":"37437:6:16"},"nativeSrc":"37437:15:16","nodeType":"YulFunctionCall","src":"37437:15:16"},"nativeSrc":"37437:15:16","nodeType":"YulExpressionStatement","src":"37437:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"37468:1:16","nodeType":"YulLiteral","src":"37468:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"37471:4:16","nodeType":"YulLiteral","src":"37471:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"37461:6:16","nodeType":"YulIdentifier","src":"37461:6:16"},"nativeSrc":"37461:15:16","nodeType":"YulFunctionCall","src":"37461:15:16"},"nativeSrc":"37461:15:16","nodeType":"YulExpressionStatement","src":"37461:15:16"}]},"name":"panic_error_0x32","nativeSrc":"37302:180:16","nodeType":"YulFunctionDefinition","src":"37302:180:16"},{"body":{"nativeSrc":"37622:214:16","nodeType":"YulBlock","src":"37622:214:16","statements":[{"nativeSrc":"37632:26:16","nodeType":"YulAssignment","src":"37632:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"37644:9:16","nodeType":"YulIdentifier","src":"37644:9:16"},{"kind":"number","nativeSrc":"37655:2:16","nodeType":"YulLiteral","src":"37655:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"37640:3:16","nodeType":"YulIdentifier","src":"37640:3:16"},"nativeSrc":"37640:18:16","nodeType":"YulFunctionCall","src":"37640:18:16"},"variableNames":[{"name":"tail","nativeSrc":"37632:4:16","nodeType":"YulIdentifier","src":"37632:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"37720:6:16","nodeType":"YulIdentifier","src":"37720:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"37733:9:16","nodeType":"YulIdentifier","src":"37733:9:16"},{"kind":"number","nativeSrc":"37744:1:16","nodeType":"YulLiteral","src":"37744:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37729:3:16","nodeType":"YulIdentifier","src":"37729:3:16"},"nativeSrc":"37729:17:16","nodeType":"YulFunctionCall","src":"37729:17:16"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_fromStack","nativeSrc":"37668:51:16","nodeType":"YulIdentifier","src":"37668:51:16"},"nativeSrc":"37668:79:16","nodeType":"YulFunctionCall","src":"37668:79:16"},"nativeSrc":"37668:79:16","nodeType":"YulExpressionStatement","src":"37668:79:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"37801:6:16","nodeType":"YulIdentifier","src":"37801:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"37814:9:16","nodeType":"YulIdentifier","src":"37814:9:16"},{"kind":"number","nativeSrc":"37825:2:16","nodeType":"YulLiteral","src":"37825:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37810:3:16","nodeType":"YulIdentifier","src":"37810:3:16"},"nativeSrc":"37810:18:16","nodeType":"YulFunctionCall","src":"37810:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"37757:43:16","nodeType":"YulIdentifier","src":"37757:43:16"},"nativeSrc":"37757:72:16","nodeType":"YulFunctionCall","src":"37757:72:16"},"nativeSrc":"37757:72:16","nodeType":"YulExpressionStatement","src":"37757:72:16"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"37488:348:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"37586:9:16","nodeType":"YulTypedName","src":"37586:9:16","type":""},{"name":"value1","nativeSrc":"37598:6:16","nodeType":"YulTypedName","src":"37598:6:16","type":""},{"name":"value0","nativeSrc":"37606:6:16","nodeType":"YulTypedName","src":"37606:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"37617:4:16","nodeType":"YulTypedName","src":"37617:4:16","type":""}],"src":"37488:348:16"},{"body":{"nativeSrc":"37895:32:16","nodeType":"YulBlock","src":"37895:32:16","statements":[{"nativeSrc":"37905:16:16","nodeType":"YulAssignment","src":"37905:16:16","value":{"name":"value","nativeSrc":"37916:5:16","nodeType":"YulIdentifier","src":"37916:5:16"},"variableNames":[{"name":"cleaned","nativeSrc":"37905:7:16","nodeType":"YulIdentifier","src":"37905:7:16"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"37842:85:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"37877:5:16","nodeType":"YulTypedName","src":"37877:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"37887:7:16","nodeType":"YulTypedName","src":"37887:7:16","type":""}],"src":"37842:85:16"},{"body":{"nativeSrc":"37977:57:16","nodeType":"YulBlock","src":"37977:57:16","statements":[{"nativeSrc":"37987:41:16","nodeType":"YulAssignment","src":"37987:41:16","value":{"arguments":[{"name":"value","nativeSrc":"38002:5:16","nodeType":"YulIdentifier","src":"38002:5:16"},{"kind":"number","nativeSrc":"38009:18:16","nodeType":"YulLiteral","src":"38009:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"37998:3:16","nodeType":"YulIdentifier","src":"37998:3:16"},"nativeSrc":"37998:30:16","nodeType":"YulFunctionCall","src":"37998:30:16"},"variableNames":[{"name":"cleaned","nativeSrc":"37987:7:16","nodeType":"YulIdentifier","src":"37987:7:16"}]}]},"name":"cleanup_t_uint64","nativeSrc":"37933:101:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"37959:5:16","nodeType":"YulTypedName","src":"37959:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"37969:7:16","nodeType":"YulTypedName","src":"37969:7:16","type":""}],"src":"37933:101:16"},{"body":{"nativeSrc":"38107:89:16","nodeType":"YulBlock","src":"38107:89:16","statements":[{"nativeSrc":"38117:73:16","nodeType":"YulAssignment","src":"38117:73:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"38182:5:16","nodeType":"YulIdentifier","src":"38182:5:16"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"38156:25:16","nodeType":"YulIdentifier","src":"38156:25:16"},"nativeSrc":"38156:32:16","nodeType":"YulFunctionCall","src":"38156:32:16"}],"functionName":{"name":"identity","nativeSrc":"38147:8:16","nodeType":"YulIdentifier","src":"38147:8:16"},"nativeSrc":"38147:42:16","nodeType":"YulFunctionCall","src":"38147:42:16"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"38130:16:16","nodeType":"YulIdentifier","src":"38130:16:16"},"nativeSrc":"38130:60:16","nodeType":"YulFunctionCall","src":"38130:60:16"},"variableNames":[{"name":"converted","nativeSrc":"38117:9:16","nodeType":"YulIdentifier","src":"38117:9:16"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"38040:156:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"38087:5:16","nodeType":"YulTypedName","src":"38087:5:16","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"38097:9:16","nodeType":"YulTypedName","src":"38097:9:16","type":""}],"src":"38040:156:16"},{"body":{"nativeSrc":"38274:73:16","nodeType":"YulBlock","src":"38274:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"38291:3:16","nodeType":"YulIdentifier","src":"38291:3:16"},{"arguments":[{"name":"value","nativeSrc":"38334:5:16","nodeType":"YulIdentifier","src":"38334:5:16"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"38296:37:16","nodeType":"YulIdentifier","src":"38296:37:16"},"nativeSrc":"38296:44:16","nodeType":"YulFunctionCall","src":"38296:44:16"}],"functionName":{"name":"mstore","nativeSrc":"38284:6:16","nodeType":"YulIdentifier","src":"38284:6:16"},"nativeSrc":"38284:57:16","nodeType":"YulFunctionCall","src":"38284:57:16"},"nativeSrc":"38284:57:16","nodeType":"YulExpressionStatement","src":"38284:57:16"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"38202:145:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"38262:5:16","nodeType":"YulTypedName","src":"38262:5:16","type":""},{"name":"pos","nativeSrc":"38269:3:16","nodeType":"YulTypedName","src":"38269:3:16","type":""}],"src":"38202:145:16"},{"body":{"nativeSrc":"38458:131:16","nodeType":"YulBlock","src":"38458:131:16","statements":[{"nativeSrc":"38468:26:16","nodeType":"YulAssignment","src":"38468:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"38480:9:16","nodeType":"YulIdentifier","src":"38480:9:16"},{"kind":"number","nativeSrc":"38491:2:16","nodeType":"YulLiteral","src":"38491:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38476:3:16","nodeType":"YulIdentifier","src":"38476:3:16"},"nativeSrc":"38476:18:16","nodeType":"YulFunctionCall","src":"38476:18:16"},"variableNames":[{"name":"tail","nativeSrc":"38468:4:16","nodeType":"YulIdentifier","src":"38468:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"38555:6:16","nodeType":"YulIdentifier","src":"38555:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"38568:9:16","nodeType":"YulIdentifier","src":"38568:9:16"},{"kind":"number","nativeSrc":"38579:1:16","nodeType":"YulLiteral","src":"38579:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38564:3:16","nodeType":"YulIdentifier","src":"38564:3:16"},"nativeSrc":"38564:17:16","nodeType":"YulFunctionCall","src":"38564:17:16"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"38504:50:16","nodeType":"YulIdentifier","src":"38504:50:16"},"nativeSrc":"38504:78:16","nodeType":"YulFunctionCall","src":"38504:78:16"},"nativeSrc":"38504:78:16","nodeType":"YulExpressionStatement","src":"38504:78:16"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"38353:236:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38430:9:16","nodeType":"YulTypedName","src":"38430:9:16","type":""},{"name":"value0","nativeSrc":"38442:6:16","nodeType":"YulTypedName","src":"38442:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38453:4:16","nodeType":"YulTypedName","src":"38453:4:16","type":""}],"src":"38353:236:16"},{"body":{"nativeSrc":"38749:288:16","nodeType":"YulBlock","src":"38749:288:16","statements":[{"nativeSrc":"38759:26:16","nodeType":"YulAssignment","src":"38759:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"38771:9:16","nodeType":"YulIdentifier","src":"38771:9:16"},{"kind":"number","nativeSrc":"38782:2:16","nodeType":"YulLiteral","src":"38782:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"38767:3:16","nodeType":"YulIdentifier","src":"38767:3:16"},"nativeSrc":"38767:18:16","nodeType":"YulFunctionCall","src":"38767:18:16"},"variableNames":[{"name":"tail","nativeSrc":"38759:4:16","nodeType":"YulIdentifier","src":"38759:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"38839:6:16","nodeType":"YulIdentifier","src":"38839:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"38852:9:16","nodeType":"YulIdentifier","src":"38852:9:16"},{"kind":"number","nativeSrc":"38863:1:16","nodeType":"YulLiteral","src":"38863:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38848:3:16","nodeType":"YulIdentifier","src":"38848:3:16"},"nativeSrc":"38848:17:16","nodeType":"YulFunctionCall","src":"38848:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"38795:43:16","nodeType":"YulIdentifier","src":"38795:43:16"},"nativeSrc":"38795:71:16","nodeType":"YulFunctionCall","src":"38795:71:16"},"nativeSrc":"38795:71:16","nodeType":"YulExpressionStatement","src":"38795:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"38920:6:16","nodeType":"YulIdentifier","src":"38920:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"38933:9:16","nodeType":"YulIdentifier","src":"38933:9:16"},{"kind":"number","nativeSrc":"38944:2:16","nodeType":"YulLiteral","src":"38944:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38929:3:16","nodeType":"YulIdentifier","src":"38929:3:16"},"nativeSrc":"38929:18:16","nodeType":"YulFunctionCall","src":"38929:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"38876:43:16","nodeType":"YulIdentifier","src":"38876:43:16"},"nativeSrc":"38876:72:16","nodeType":"YulFunctionCall","src":"38876:72:16"},"nativeSrc":"38876:72:16","nodeType":"YulExpressionStatement","src":"38876:72:16"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"39002:6:16","nodeType":"YulIdentifier","src":"39002:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"39015:9:16","nodeType":"YulIdentifier","src":"39015:9:16"},{"kind":"number","nativeSrc":"39026:2:16","nodeType":"YulLiteral","src":"39026:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"39011:3:16","nodeType":"YulIdentifier","src":"39011:3:16"},"nativeSrc":"39011:18:16","nodeType":"YulFunctionCall","src":"39011:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"38958:43:16","nodeType":"YulIdentifier","src":"38958:43:16"},"nativeSrc":"38958:72:16","nodeType":"YulFunctionCall","src":"38958:72:16"},"nativeSrc":"38958:72:16","nodeType":"YulExpressionStatement","src":"38958:72:16"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"38595:442:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38705:9:16","nodeType":"YulTypedName","src":"38705:9:16","type":""},{"name":"value2","nativeSrc":"38717:6:16","nodeType":"YulTypedName","src":"38717:6:16","type":""},{"name":"value1","nativeSrc":"38725:6:16","nodeType":"YulTypedName","src":"38725:6:16","type":""},{"name":"value0","nativeSrc":"38733:6:16","nodeType":"YulTypedName","src":"38733:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38744:4:16","nodeType":"YulTypedName","src":"38744:4:16","type":""}],"src":"38595:442:16"},{"body":{"nativeSrc":"39071:152:16","nodeType":"YulBlock","src":"39071:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"39088:1:16","nodeType":"YulLiteral","src":"39088:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"39091:77:16","nodeType":"YulLiteral","src":"39091:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"39081:6:16","nodeType":"YulIdentifier","src":"39081:6:16"},"nativeSrc":"39081:88:16","nodeType":"YulFunctionCall","src":"39081:88:16"},"nativeSrc":"39081:88:16","nodeType":"YulExpressionStatement","src":"39081:88:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"39185:1:16","nodeType":"YulLiteral","src":"39185:1:16","type":"","value":"4"},{"kind":"number","nativeSrc":"39188:4:16","nodeType":"YulLiteral","src":"39188:4:16","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"39178:6:16","nodeType":"YulIdentifier","src":"39178:6:16"},"nativeSrc":"39178:15:16","nodeType":"YulFunctionCall","src":"39178:15:16"},"nativeSrc":"39178:15:16","nodeType":"YulExpressionStatement","src":"39178:15:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"39209:1:16","nodeType":"YulLiteral","src":"39209:1:16","type":"","value":"0"},{"kind":"number","nativeSrc":"39212:4:16","nodeType":"YulLiteral","src":"39212:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"39202:6:16","nodeType":"YulIdentifier","src":"39202:6:16"},"nativeSrc":"39202:15:16","nodeType":"YulFunctionCall","src":"39202:15:16"},"nativeSrc":"39202:15:16","nodeType":"YulExpressionStatement","src":"39202:15:16"}]},"name":"panic_error_0x21","nativeSrc":"39043:180:16","nodeType":"YulFunctionDefinition","src":"39043:180:16"},{"body":{"nativeSrc":"39274:32:16","nodeType":"YulBlock","src":"39274:32:16","statements":[{"nativeSrc":"39284:16:16","nodeType":"YulAssignment","src":"39284:16:16","value":{"name":"value","nativeSrc":"39295:5:16","nodeType":"YulIdentifier","src":"39295:5:16"},"variableNames":[{"name":"cleaned","nativeSrc":"39284:7:16","nodeType":"YulIdentifier","src":"39284:7:16"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"39229:77:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"39256:5:16","nodeType":"YulTypedName","src":"39256:5:16","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"39266:7:16","nodeType":"YulTypedName","src":"39266:7:16","type":""}],"src":"39229:77:16"},{"body":{"nativeSrc":"39377:53:16","nodeType":"YulBlock","src":"39377:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"39394:3:16","nodeType":"YulIdentifier","src":"39394:3:16"},{"arguments":[{"name":"value","nativeSrc":"39417:5:16","nodeType":"YulIdentifier","src":"39417:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"39399:17:16","nodeType":"YulIdentifier","src":"39399:17:16"},"nativeSrc":"39399:24:16","nodeType":"YulFunctionCall","src":"39399:24:16"}],"functionName":{"name":"mstore","nativeSrc":"39387:6:16","nodeType":"YulIdentifier","src":"39387:6:16"},"nativeSrc":"39387:37:16","nodeType":"YulFunctionCall","src":"39387:37:16"},"nativeSrc":"39387:37:16","nodeType":"YulExpressionStatement","src":"39387:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"39312:118:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"39365:5:16","nodeType":"YulTypedName","src":"39365:5:16","type":""},{"name":"pos","nativeSrc":"39372:3:16","nodeType":"YulTypedName","src":"39372:3:16","type":""}],"src":"39312:118:16"},{"body":{"nativeSrc":"39534:124:16","nodeType":"YulBlock","src":"39534:124:16","statements":[{"nativeSrc":"39544:26:16","nodeType":"YulAssignment","src":"39544:26:16","value":{"arguments":[{"name":"headStart","nativeSrc":"39556:9:16","nodeType":"YulIdentifier","src":"39556:9:16"},{"kind":"number","nativeSrc":"39567:2:16","nodeType":"YulLiteral","src":"39567:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39552:3:16","nodeType":"YulIdentifier","src":"39552:3:16"},"nativeSrc":"39552:18:16","nodeType":"YulFunctionCall","src":"39552:18:16"},"variableNames":[{"name":"tail","nativeSrc":"39544:4:16","nodeType":"YulIdentifier","src":"39544:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"39624:6:16","nodeType":"YulIdentifier","src":"39624:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"39637:9:16","nodeType":"YulIdentifier","src":"39637:9:16"},{"kind":"number","nativeSrc":"39648:1:16","nodeType":"YulLiteral","src":"39648:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"39633:3:16","nodeType":"YulIdentifier","src":"39633:3:16"},"nativeSrc":"39633:17:16","nodeType":"YulFunctionCall","src":"39633:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"39580:43:16","nodeType":"YulIdentifier","src":"39580:43:16"},"nativeSrc":"39580:71:16","nodeType":"YulFunctionCall","src":"39580:71:16"},"nativeSrc":"39580:71:16","nodeType":"YulExpressionStatement","src":"39580:71:16"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"39436:222:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"39506:9:16","nodeType":"YulTypedName","src":"39506:9:16","type":""},{"name":"value0","nativeSrc":"39518:6:16","nodeType":"YulTypedName","src":"39518:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"39529:4:16","nodeType":"YulTypedName","src":"39529:4:16","type":""}],"src":"39436:222:16"},{"body":{"nativeSrc":"39842:367:16","nodeType":"YulBlock","src":"39842:367:16","statements":[{"nativeSrc":"39852:27:16","nodeType":"YulAssignment","src":"39852:27:16","value":{"arguments":[{"name":"headStart","nativeSrc":"39864:9:16","nodeType":"YulIdentifier","src":"39864:9:16"},{"kind":"number","nativeSrc":"39875:3:16","nodeType":"YulLiteral","src":"39875:3:16","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"39860:3:16","nodeType":"YulIdentifier","src":"39860:3:16"},"nativeSrc":"39860:19:16","nodeType":"YulFunctionCall","src":"39860:19:16"},"variableNames":[{"name":"tail","nativeSrc":"39852:4:16","nodeType":"YulIdentifier","src":"39852:4:16"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"39933:6:16","nodeType":"YulIdentifier","src":"39933:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"39946:9:16","nodeType":"YulIdentifier","src":"39946:9:16"},{"kind":"number","nativeSrc":"39957:1:16","nodeType":"YulLiteral","src":"39957:1:16","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"39942:3:16","nodeType":"YulIdentifier","src":"39942:3:16"},"nativeSrc":"39942:17:16","nodeType":"YulFunctionCall","src":"39942:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"39889:43:16","nodeType":"YulIdentifier","src":"39889:43:16"},"nativeSrc":"39889:71:16","nodeType":"YulFunctionCall","src":"39889:71:16"},"nativeSrc":"39889:71:16","nodeType":"YulExpressionStatement","src":"39889:71:16"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"40010:6:16","nodeType":"YulIdentifier","src":"40010:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"40023:9:16","nodeType":"YulIdentifier","src":"40023:9:16"},{"kind":"number","nativeSrc":"40034:2:16","nodeType":"YulLiteral","src":"40034:2:16","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"40019:3:16","nodeType":"YulIdentifier","src":"40019:3:16"},"nativeSrc":"40019:18:16","nodeType":"YulFunctionCall","src":"40019:18:16"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"39970:39:16","nodeType":"YulIdentifier","src":"39970:39:16"},"nativeSrc":"39970:68:16","nodeType":"YulFunctionCall","src":"39970:68:16"},"nativeSrc":"39970:68:16","nodeType":"YulExpressionStatement","src":"39970:68:16"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"40092:6:16","nodeType":"YulIdentifier","src":"40092:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"40105:9:16","nodeType":"YulIdentifier","src":"40105:9:16"},{"kind":"number","nativeSrc":"40116:2:16","nodeType":"YulLiteral","src":"40116:2:16","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"40101:3:16","nodeType":"YulIdentifier","src":"40101:3:16"},"nativeSrc":"40101:18:16","nodeType":"YulFunctionCall","src":"40101:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"40048:43:16","nodeType":"YulIdentifier","src":"40048:43:16"},"nativeSrc":"40048:72:16","nodeType":"YulFunctionCall","src":"40048:72:16"},"nativeSrc":"40048:72:16","nodeType":"YulExpressionStatement","src":"40048:72:16"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"40174:6:16","nodeType":"YulIdentifier","src":"40174:6:16"},{"arguments":[{"name":"headStart","nativeSrc":"40187:9:16","nodeType":"YulIdentifier","src":"40187:9:16"},{"kind":"number","nativeSrc":"40198:2:16","nodeType":"YulLiteral","src":"40198:2:16","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"40183:3:16","nodeType":"YulIdentifier","src":"40183:3:16"},"nativeSrc":"40183:18:16","nodeType":"YulFunctionCall","src":"40183:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"40130:43:16","nodeType":"YulIdentifier","src":"40130:43:16"},"nativeSrc":"40130:72:16","nodeType":"YulFunctionCall","src":"40130:72:16"},"nativeSrc":"40130:72:16","nodeType":"YulExpressionStatement","src":"40130:72:16"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"39664:545:16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"39790:9:16","nodeType":"YulTypedName","src":"39790:9:16","type":""},{"name":"value3","nativeSrc":"39802:6:16","nodeType":"YulTypedName","src":"39802:6:16","type":""},{"name":"value2","nativeSrc":"39810:6:16","nodeType":"YulTypedName","src":"39810:6:16","type":""},{"name":"value1","nativeSrc":"39818:6:16","nodeType":"YulTypedName","src":"39818:6:16","type":""},{"name":"value0","nativeSrc":"39826:6:16","nodeType":"YulTypedName","src":"39826:6:16","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"39837:4:16","nodeType":"YulTypedName","src":"39837:4:16","type":""}],"src":"39664:545:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_address_payablet_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_length_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct phoneLink.Details -> struct phoneLink.Details\n    function abi_encode_t_struct$_Details_$6704_memory_ptr_to_t_struct$_Details_$6704_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // identifier\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // typeOfIdentifier\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // connectedWalletAddress\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // isPrimaryWallet\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Details_$6704_memory_ptr_to_t_struct$_Details_$6704_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Details_$6704_memory_ptr_to_t_struct$_Details_$6704_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct phoneLink.Details[] -> struct phoneLink.Details[]\n    function abi_encode_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Details_$6704_memory_ptr_to_t_struct$_Details_$6704_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Details_$6704_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_address_payable(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address_payable(cleanup_t_address_payable(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_address_payable_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_payable_to_t_address_payable_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070(memPtr) {\n\n        mstore(add(memPtr, 0), \"An UCI id associated with this n\")\n\n        mstore(add(memPtr, 32), \"ame already exists. Please choos\")\n\n        mstore(add(memPtr, 64), \"e a different name !!\")\n\n    }\n\n    function abi_encode_t_stringliteral_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 85)\n        store_literal_in_memory_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_986d4ef512023bef87e9a8636fe2f755feeb20e24e83ef31b281d7806dae1070_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106102045760003560e01c80635e385b9211610118578063b9598c5e116100a0578063db461e1a1161006f578063db461e1a1461078d578063dd62ed3e146107ca578063e13d23e514610807578063f24d3af214610844578063f2fde38b1461088557610204565b8063b9598c5e146106f4578063c34d9d7c1461071d578063c4d66de814610739578063d263be481461076257610204565b8063715018a6116100e7578063715018a61461060d5780638cae45d2146106245780638da5cb5b1461066157806395d89b411461068c578063a9059cbb146106b757610204565b80635e385b921461053f5780636cdaa4211461056a5780636e9976651461059357806370a08231146105d057610204565b80631888d7121161019b578063313ce5671161016a578063313ce5671461045257806334a7f1931461047d578063451e9cf0146104a857806352d95491146104d35780635a12d0f81461051457610204565b80631888d712146103a557806323b872dd146103c157806326232a2e146103fe5780632a41ffd91461042957610204565b80630f1d5ec7116101d75780630f1d5ec7146102d757806312e8e2c31461031457806315ccb6801461033d57806318160ddd1461037a57610204565b8063048743541461020957806306fdde0314610246578063095ea7b3146102715780630c60b372146102ae575b600080fd5b34801561021557600080fd5b50610230600480360381019061022b9190614034565b6108ae565b60405161023d91906140be565b60405180910390f35b34801561025257600080fd5b5061025b6108f9565b6040516102689190614158565b60405180910390f35b34801561027d57600080fd5b50610298600480360381019061029391906141dc565b61099a565b6040516102a59190614237565b60405180910390f35b3480156102ba57600080fd5b506102d560048036038101906102d09190614252565b6109bd565b005b3480156102e357600080fd5b506102fe60048036038101906102f9919061438d565b610be5565b60405161030b9190614237565b60405180910390f35b34801561032057600080fd5b5061033b60048036038101906103369190614424565b610e14565b005b34801561034957600080fd5b50610364600480360381019061035f9190614034565b610e36565b6040516103719190614237565b60405180910390f35b34801561038657600080fd5b5061038f610f5e565b60405161039c9190614460565b60405180910390f35b6103bf60048036038101906103ba919061447b565b610f76565b005b3480156103cd57600080fd5b506103e860048036038101906103e391906144a8565b611068565b6040516103f59190614237565b60405180910390f35b34801561040a57600080fd5b50610413611097565b6040516104209190614460565b60405180910390f35b34801561043557600080fd5b50610450600480360381019061044b91906144fb565b61109d565b005b34801561045e57600080fd5b506104676114cd565b60405161047491906145d2565b60405180910390f35b34801561048957600080fd5b506104926114d6565b60405161049f9190614460565b60405180910390f35b3480156104b457600080fd5b506104bd6114dc565b6040516104ca91906145fc565b60405180910390f35b3480156104df57600080fd5b506104fa60048036038101906104f59190614424565b611505565b60405161050b959493929190614617565b60405180910390f35b34801561052057600080fd5b50610529611700565b604051610536919061482d565b60405180910390f35b34801561054b57600080fd5b50610554611a16565b60405161056191906145fc565b60405180910390f35b34801561057657600080fd5b50610591600480360381019061058c919061447b565b611a3a565b005b34801561059f57600080fd5b506105ba60048036038101906105b59190614034565b611a85565b6040516105c7919061482d565b60405180910390f35b3480156105dc57600080fd5b506105f760048036038101906105f2919061484f565b611eaa565b6040516106049190614460565b60405180910390f35b34801561061957600080fd5b50610622611f01565b005b34801561063057600080fd5b5061064b6004803603810190610646919061484f565b611f15565b604051610658919061482d565b60405180910390f35b34801561066d57600080fd5b50610676612295565b60405161068391906140be565b60405180910390f35b34801561069857600080fd5b506106a16122cd565b6040516106ae9190614158565b60405180910390f35b3480156106c357600080fd5b506106de60048036038101906106d991906141dc565b61236e565b6040516106eb9190614237565b60405180910390f35b34801561070057600080fd5b5061071b6004803603810190610716919061487c565b612391565b005b61073760048036038101906107329190614967565b6125b9565b005b34801561074557600080fd5b50610760600480360381019061075b919061484f565b612676565b005b34801561076e57600080fd5b506107776128be565b604051610784919061482d565b60405180910390f35b34801561079957600080fd5b506107b460048036038101906107af9190614034565b612ceb565b6040516107c191906140be565b60405180910390f35b3480156107d657600080fd5b506107f160048036038101906107ec91906149a7565b612e15565b6040516107fe9190614460565b60405180910390f35b34801561081357600080fd5b5061082e60048036038101906108299190614034565b612eaa565b60405161083b9190614237565b60405180910390f35b34801561085057600080fd5b5061086b60048036038101906108669190614034565b612f30565b60405161087c959493929190614617565b60405180910390f35b34801561089157600080fd5b506108ac60048036038101906108a7919061484f565b613141565b005b60006004826040516108c09190614a23565b908152602001604051809103902060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b606060006109056131c7565b905080600301805461091690614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461094290614a69565b801561098f5780601f106109645761010080835404028352916020019161098f565b820191906000526020600020905b81548152906001019060200180831161097257829003601f168201915b505050505091505090565b6000806109a56131ef565b90506109b28185856131f7565b600191505092915050565b6109c5613209565b6000600254905060005b81811015610a9457826040516020016109e89190614a23565b6040516020818303038152906040528051906020012060036000600184610a0f9190614ac9565b8152602001908152602001600020600101604051602001610a309190614b95565b6040516020818303038152906040528051906020012003610a8757600060036000600184610a5e9190614ac9565b815260200190815260200160002060030160146101000a81548160ff0219169083151502179055505b80806001019150506109cf565b5060005b81811015610bd7578373ffffffffffffffffffffffffffffffffffffffff1660036000600184610ac89190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610b89575082604051602001610b299190614a23565b6040516020818303038152906040528051906020012060036000600184610b509190614ac9565b8152602001908152602001600020600101604051602001610b719190614b95565b60405160208183030381529060405280519060200120145b15610bca57600160036000600184610ba19190614ac9565b815260200190815260200160002060030160146101000a81548160ff0219169083151502179055505b8080600101915050610a98565b5050610be1613260565b5050565b6000610bef613209565b600083868689604051602001610c089493929190614c3e565b6040516020818303038152906040528051906020012090506000610c2b82613279565b90506000610c3982866132af565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ca9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca090614cd8565b60405180910390fd5b60006103e86001548b610cbc9190614cf8565b610cc69190614d69565b90506000818b610cd69190614d9a565b90508973ffffffffffffffffffffffffffffffffffffffff166323b872dd898b846040518463ffffffff1660e01b8152600401610d1593929190614e2d565b6020604051808303816000875af1158015610d34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d589190614e90565b508973ffffffffffffffffffffffffffffffffffffffff166323b872dd8960008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b8152600401610db693929190614e2d565b6020604051808303816000875af1158015610dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df99190614e90565b50600195505050505050610e0b613260565b95945050505050565b610e1c6132db565b610e24613209565b80600181905550610e33613260565b50565b600080600190506000600254905060005b81811015610f53573373ffffffffffffffffffffffffffffffffffffffff1660036000600184610e779190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610f38575084604051602001610ed89190614a23565b6040516020818303038152906040528051906020012060036000600184610eff9190614ac9565b8152602001908152602001600020600101604051602001610f209190614b95565b60405160208183030381529060405280519060200120145b15610f465760009250610f53565b8080600101915050610e47565b508192505050919050565b600080610f696131c7565b9050806002015491505090565b610f7e613209565b60006103e860015434610f919190614cf8565b610f9b9190614d69565b905060008134610fab9190614d9a565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ff3573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561105a573d6000803e3d6000fd5b505050611065613260565b50565b6000806110736131ef565b9050611080858285613362565b61108b8585856133f7565b60019150509392505050565b60015481565b6110a5613209565b600260008154809291906110b890614ebd565b91905055506000600254905060005b8181101561118c57846040516020016110e09190614a23565b60405160208183030381529060405280519060200120600360006001846111079190614ac9565b81526020019081526020016000206001016040516020016111289190614b95565b604051602081830303815290604052805190602001200361117f576000600360006001846111569190614ac9565b815260200190815260200160002060030160146101000a81548160ff0219169083151502179055505b80806001019150506110c7565b5060405160200161119c90614f2b565b604051602081830303815290604052805190602001206004866040516111c29190614a23565b90815260200160405180910390206000016040516020016111e39190614b95565b6040516020818303038152906040528051906020012014611239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123090614fd8565b60405180910390fd5b6040518060a001604052808681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506004866040516112899190614a23565b908152602001604051809103902060008201518160000190816112ac9190615185565b5060208201518160010190816112c29190615185565b5060408201518160020190816112d89190615185565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff0219169083151502179055509050506040518060a001604052808681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506003600083815260200190815260200160002060008201518160000190816113ab9190615185565b5060208201518160010190816113c19190615185565b5060408201518160020190816113d79190615185565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff021916908315150217905550905050826040516114509190614a23565b6040518091039020846040516114669190614a23565b60405180910390208660405161147c9190614a23565b60405180910390207f2e3249f822bd56e4e9ae7d39402def6df4618c14f212fbe4c35e0c94eddef9fe8560016040516114b6929190615257565b60405180910390a4506114c7613260565b50505050565b60006012905090565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360205280600052604060002060009150905080600001805461152890614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461155490614a69565b80156115a15780601f10611576576101008083540402835291602001916115a1565b820191906000526020600020905b81548152906001019060200180831161158457829003601f168201915b5050505050908060010180546115b690614a69565b80601f01602080910402602001604051908101604052809291908181526020018280546115e290614a69565b801561162f5780601f106116045761010080835404028352916020019161162f565b820191906000526020600020905b81548152906001019060200180831161161257829003601f168201915b50505050509080600201805461164490614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461167090614a69565b80156116bd5780601f10611692576101008083540402835291602001916116bd565b820191906000526020600020905b8154815290600101906020018083116116a057829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16905085565b606061170a6132db565b600060025490506000808267ffffffffffffffff81111561172e5761172d613f09565b5b60405190808252806020026020018201604052801561176757816020015b611754613e93565b81526020019060019003908161174c5790505b50905060005b83811015611a0c5760006001826117849190614ac9565b90506000600360008381526020019081526020016000209050806040518060a00160405290816000820180546117b990614a69565b80601f01602080910402602001604051908101604052809291908181526020018280546117e590614a69565b80156118325780601f1061180757610100808354040283529160200191611832565b820191906000526020600020905b81548152906001019060200180831161181557829003601f168201915b5050505050815260200160018201805461184b90614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461187790614a69565b80156118c45780601f10611899576101008083540402835291602001916118c4565b820191906000526020600020905b8154815290600101906020018083116118a757829003601f168201915b505050505081526020016002820180546118dd90614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461190990614a69565b80156119565780601f1061192b57610100808354040283529160200191611956565b820191906000526020600020905b81548152906001019060200180831161193957829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff1615151515815250508486815181106119e3576119e2615280565b5b60200260200101819052506001856119fb9190614ac9565b94505050808060010191505061176d565b5080935050505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611a426132db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000600254905060008060005b83811015611b2d5785604051602001611aad9190614a23565b6040516020818303038152906040528051906020012060036000600184611ad49190614ac9565b8152602001908152602001600020600101604051602001611af59190614b95565b6040516020818303038152906040528051906020012003611b2057600183611b1d9190614ac9565b92505b8080600101915050611a94565b5060008267ffffffffffffffff811115611b4a57611b49613f09565b5b604051908082528060200260200182016040528015611b8357816020015b611b70613e93565b815260200190600190039081611b685790505b50905060005b84811015611e9d5786604051602001611ba29190614a23565b6040516020818303038152906040528051906020012060036000600184611bc99190614ac9565b8152602001908152602001600020600101604051602001611bea9190614b95565b6040516020818303038152906040528051906020012003611e90576000600182611c149190614ac9565b90506000600360008381526020019081526020016000209050806040518060a0016040529081600082018054611c4990614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7590614a69565b8015611cc25780601f10611c9757610100808354040283529160200191611cc2565b820191906000526020600020905b815481529060010190602001808311611ca557829003601f168201915b50505050508152602001600182018054611cdb90614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054611d0790614a69565b8015611d545780601f10611d2957610100808354040283529160200191611d54565b820191906000526020600020905b815481529060010190602001808311611d3757829003601f168201915b50505050508152602001600282018054611d6d90614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054611d9990614a69565b8015611de65780601f10611dbb57610100808354040283529160200191611de6565b820191906000526020600020905b815481529060010190602001808311611dc957829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581525050848681518110611e7357611e72615280565b5b6020026020010181905250600185611e8b9190614ac9565b945050505b8080600101915050611b89565b5080945050505050919050565b600080611eb56131c7565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b611f096132db565b611f1360006134eb565b565b6060600060025490506000808267ffffffffffffffff811115611f3b57611f3a613f09565b5b604051908082528060200260200182016040528015611f7457816020015b611f61613e93565b815260200190600190039081611f595790505b50905060005b83811015612289578573ffffffffffffffffffffffffffffffffffffffff1660036000600184611faa9190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361227c5760006003600060018461200a9190614ac9565b81526020019081526020016000209050806040518060a001604052908160008201805461203690614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461206290614a69565b80156120af5780601f10612084576101008083540402835291602001916120af565b820191906000526020600020905b81548152906001019060200180831161209257829003601f168201915b505050505081526020016001820180546120c890614a69565b80601f01602080910402602001604051908101604052809291908181526020018280546120f490614a69565b80156121415780601f1061211657610100808354040283529160200191612141565b820191906000526020600020905b81548152906001019060200180831161212457829003601f168201915b5050505050815260200160028201805461215a90614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461218690614a69565b80156121d35780601f106121a8576101008083540402835291602001916121d3565b820191906000526020600020905b8154815290600101906020018083116121b657829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff1615151515815250508385815181106122605761225f615280565b5b60200260200101819052506001846122789190614ac9565b9350505b8080600101915050611f7a565b50809350505050919050565b6000806122a06135c2565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b606060006122d96131c7565b90508060040180546122ea90614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461231690614a69565b80156123635780601f1061233857610100808354040283529160200191612363565b820191906000526020600020905b81548152906001019060200180831161234657829003601f168201915b505050505091505090565b6000806123796131ef565b90506123868185856133f7565b600191505092915050565b612399613209565b6000600254905060005b818110156125a8578273ffffffffffffffffffffffffffffffffffffffff16600360006001846123d39190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361259b57846040516020016124319190614a23565b60405160208183030381529060405280519060200120600360006001846124589190614ac9565b81526020019081526020016000206002016040516020016124799190614b95565b604051602081830303815290604052805190602001200361259a57836040516020016124a59190614a23565b60405160208183030381529060405280519060200120600360006001846124cc9190614ac9565b81526020019081526020016000206001016040516020016124ed9190614b95565b604051602081830303815290604052805190602001200361259957866003600060018461251a9190614ac9565b815260200190815260200160002060000190816125379190615185565b50856003600060018461254a9190614ac9565b815260200190815260200160002060010190816125679190615185565b50846003600060018461257a9190614ac9565b815260200190815260200160002060020190816125979190615185565b505b5b5b80806001019150506123a3565b50506125b2613260565b5050505050565b6125c16132db565b6125c9613209565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b81526004016126269291906152af565b6020604051808303816000875af1158015612645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126699190614e90565b50612672613260565b5050565b60006126806135ea565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156126ce5750825b9050600060018367ffffffffffffffff16148015612703575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015612711575080155b15612748576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156127985760018560000160086101000a81548160ff0219169083151502179055505b6127c06040518060200160405280600081525060405180602001604052806000815250613612565b6127c8613628565b6127d13361363a565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560018190555085600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156128b65760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516128ad9190615327565b60405180910390a15b505050505050565b6060600060025490506000808267ffffffffffffffff8111156128e4576128e3613f09565b5b60405190808252806020026020018201604052801561291d57816020015b61290a613e93565b8152602001906001900390816129025790505b50905060005b83811015612ce1573373ffffffffffffffffffffffffffffffffffffffff16600360006001846129539190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603612cd45760005b84811015612cd257600360006001846129bc9190614ac9565b81526020019081526020016000206001016040516020016129dd9190614b95565b6040516020818303038152906040528051906020012060036000600184612a049190614ac9565b8152602001908152602001600020600101604051602001612a259190614b95565b6040516020818303038152906040528051906020012003612cc557600060036000600184612a539190614ac9565b81526020019081526020016000209050806040518060a0016040529081600082018054612a7f90614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054612aab90614a69565b8015612af85780601f10612acd57610100808354040283529160200191612af8565b820191906000526020600020905b815481529060010190602001808311612adb57829003601f168201915b50505050508152602001600182018054612b1190614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054612b3d90614a69565b8015612b8a5780601f10612b5f57610100808354040283529160200191612b8a565b820191906000526020600020905b815481529060010190602001808311612b6d57829003601f168201915b50505050508152602001600282018054612ba390614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054612bcf90614a69565b8015612c1c5780601f10612bf157610100808354040283529160200191612c1c565b820191906000526020600020905b815481529060010190602001808311612bff57829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581525050848681518110612ca957612ca8615280565b5b6020026020010181905250600185612cc19190614ac9565b9450505b80806001019150506129a3565b505b8080600101915050612923565b5080935050505090565b60008060025490506000805b82811015612e0a5784604051602001612d109190614a23565b6040516020818303038152906040528051906020012060036000600184612d379190614ac9565b8152602001908152602001600020600101604051602001612d589190614b95565b60405160208183030381529060405280519060200120148015612dae57506001151560036000600184612d8b9190614ac9565b815260200190815260200160002060030160149054906101000a900460ff161515145b15612dfd5760036000600183612dc49190614ac9565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150612e0a565b8080600101915050612cf7565b508092505050919050565b600080612e206131c7565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b6000604051602001612ebb90614f2b565b60405160208183030381529060405280519060200120600483604051612ee19190614a23565b9081526020016040518091039020600001604051602001612f029190614b95565b6040516020818303038152906040528051906020012003612f265760019050612f2b565b600090505b919050565b600481805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054612f6990614a69565b80601f0160208091040260200160405190810160405280929190818152602001828054612f9590614a69565b8015612fe25780601f10612fb757610100808354040283529160200191612fe2565b820191906000526020600020905b815481529060010190602001808311612fc557829003601f168201915b505050505090806001018054612ff790614a69565b80601f016020809104026020016040519081016040528092919081815260200182805461302390614a69565b80156130705780601f1061304557610100808354040283529160200191613070565b820191906000526020600020905b81548152906001019060200180831161305357829003601f168201915b50505050509080600201805461308590614a69565b80601f01602080910402602001604051908101604052809291908181526020018280546130b190614a69565b80156130fe5780601f106130d3576101008083540402835291602001916130fe565b820191906000526020600020905b8154815290600101906020018083116130e157829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16905085565b6131496132db565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036131bb5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016131b291906140be565b60405180910390fd5b6131c4816134eb565b50565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b613204838383600161364e565b505050565b6000613213613834565b90506002816000015403613253576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b600061326a613834565b90506001816000018190555050565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b6000806000806132bf868661385c565b9250925092506132cf82826138b8565b82935050505092915050565b6132e36131ef565b73ffffffffffffffffffffffffffffffffffffffff16613301612295565b73ffffffffffffffffffffffffffffffffffffffff1614613360576133246131ef565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161335791906140be565b60405180910390fd5b565b600061336e8484612e15565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156133f157818110156133e1578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016133d893929190615342565b60405180910390fd5b6133f08484848403600061364e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036134695760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161346091906140be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036134db5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016134d291906140be565b60405180910390fd5b6134e6838383613a1c565b505050565b60006134f56135c2565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61361a613c5b565b6136248282613c9b565b5050565b613630613c5b565b613638613cd8565b565b613642613c5b565b61364b81613cf9565b50565b60006136586131c7565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036136cc5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016136c391906140be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361373e5760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161373591906140be565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550811561382d578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516138249190614460565b60405180910390a35b5050505050565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b600080600060418451036138a15760008060006020870151925060408701519150606087015160001a905061389388828585613d7f565b9550955095505050506138b1565b60006002855160001b9250925092505b9250925092565b600060038111156138cc576138cb615379565b5b8260038111156138df576138de615379565b5b0315613a1857600160038111156138f9576138f8615379565b5b82600381111561390c5761390b615379565b5b03613943576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561395757613956615379565b5b82600381111561396a57613969615379565b5b036139af578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016139a69190614460565b60405180910390fd5b6003808111156139c2576139c1615379565b5b8260038111156139d5576139d4615379565b5b03613a1757806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401613a0e91906153c1565b60405180910390fd5b5b5050565b6000613a266131c7565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603613a7c5781816002016000828254613a709190614ac9565b92505081905550613b55565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015613b0b578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401613b0293929190615342565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603613ba057818160020160008282540392505081905550613bf0565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051613c4d9190614460565b60405180910390a350505050565b613c63613e73565b613c99576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b613ca3613c5b565b6000613cad6131c7565b905082816003019081613cc09190615185565b5081816004019081613cd29190615185565b50505050565b613ce0613c5b565b6000613cea613834565b90506001816000018190555050565b613d01613c5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613d735760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401613d6a91906140be565b60405180910390fd5b613d7c816134eb565b50565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115613dbf576000600385925092509250613e69565b600060018888888860405160008152602001604052604051613de494939291906153dc565b6020604051602081039080840390855afa158015613e06573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613e5a57600060016000801b93509350935050613e69565b8060008060001b935093509350505b9450945094915050565b6000613e7d6135ea565b60000160089054906101000a900460ff16905090565b6040518060a00160405280606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613f4182613ef8565b810181811067ffffffffffffffff82111715613f6057613f5f613f09565b5b80604052505050565b6000613f73613eda565b9050613f7f8282613f38565b919050565b600067ffffffffffffffff821115613f9f57613f9e613f09565b5b613fa882613ef8565b9050602081019050919050565b82818337600083830152505050565b6000613fd7613fd284613f84565b613f69565b905082815260208101848484011115613ff357613ff2613ef3565b5b613ffe848285613fb5565b509392505050565b600082601f83011261401b5761401a613eee565b5b813561402b848260208601613fc4565b91505092915050565b60006020828403121561404a57614049613ee4565b5b600082013567ffffffffffffffff81111561406857614067613ee9565b5b61407484828501614006565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006140a88261407d565b9050919050565b6140b88161409d565b82525050565b60006020820190506140d360008301846140af565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156141135780820151818401526020810190506140f8565b60008484015250505050565b600061412a826140d9565b61413481856140e4565b93506141448185602086016140f5565b61414d81613ef8565b840191505092915050565b60006020820190508181036000830152614172818461411f565b905092915050565b6141838161409d565b811461418e57600080fd5b50565b6000813590506141a08161417a565b92915050565b6000819050919050565b6141b9816141a6565b81146141c457600080fd5b50565b6000813590506141d6816141b0565b92915050565b600080604083850312156141f3576141f2613ee4565b5b600061420185828601614191565b9250506020614212858286016141c7565b9150509250929050565b60008115159050919050565b6142318161421c565b82525050565b600060208201905061424c6000830184614228565b92915050565b6000806040838503121561426957614268613ee4565b5b600061427785828601614191565b925050602083013567ffffffffffffffff81111561429857614297613ee9565b5b6142a485828601614006565b9150509250929050565b60006142b98261407d565b9050919050565b6142c9816142ae565b81146142d457600080fd5b50565b6000813590506142e6816142c0565b92915050565b600067ffffffffffffffff82111561430757614306613f09565b5b61431082613ef8565b9050602081019050919050565b600061433061432b846142ec565b613f69565b90508281526020810184848401111561434c5761434b613ef3565b5b614357848285613fb5565b509392505050565b600082601f83011261437457614373613eee565b5b813561438484826020860161431d565b91505092915050565b600080600080600060a086880312156143a9576143a8613ee4565b5b60006143b7888289016141c7565b95505060206143c888828901614191565b94505060406143d9888289016142d7565b93505060606143ea88828901614191565b925050608086013567ffffffffffffffff81111561440b5761440a613ee9565b5b6144178882890161435f565b9150509295509295909350565b60006020828403121561443a57614439613ee4565b5b6000614448848285016141c7565b91505092915050565b61445a816141a6565b82525050565b60006020820190506144756000830184614451565b92915050565b60006020828403121561449157614490613ee4565b5b600061449f848285016142d7565b91505092915050565b6000806000606084860312156144c1576144c0613ee4565b5b60006144cf86828701614191565b93505060206144e086828701614191565b92505060406144f1868287016141c7565b9150509250925092565b6000806000806080858703121561451557614514613ee4565b5b600085013567ffffffffffffffff81111561453357614532613ee9565b5b61453f87828801614006565b945050602085013567ffffffffffffffff8111156145605761455f613ee9565b5b61456c87828801614006565b935050604085013567ffffffffffffffff81111561458d5761458c613ee9565b5b61459987828801614006565b92505060606145aa87828801614191565b91505092959194509250565b600060ff82169050919050565b6145cc816145b6565b82525050565b60006020820190506145e760008301846145c3565b92915050565b6145f6816142ae565b82525050565b600060208201905061461160008301846145ed565b92915050565b600060a0820190508181036000830152614631818861411f565b90508181036020830152614645818761411f565b90508181036040830152614659818661411f565b905061466860608301856140af565b6146756080830184614228565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006146c7826140d9565b6146d181856146ab565b93506146e18185602086016140f5565b6146ea81613ef8565b840191505092915050565b6146fe8161409d565b82525050565b61470d8161421c565b82525050565b600060a083016000830151848203600086015261473082826146bc565b9150506020830151848203602086015261474a82826146bc565b9150506040830151848203604086015261476482826146bc565b915050606083015161477960608601826146f5565b50608083015161478c6080860182614704565b508091505092915050565b60006147a38383614713565b905092915050565b6000602082019050919050565b60006147c38261467f565b6147cd818561468a565b9350836020820285016147df8561469b565b8060005b8581101561481b57848403895281516147fc8582614797565b9450614807836147ab565b925060208a019950506001810190506147e3565b50829750879550505050505092915050565b6000602082019050818103600083015261484781846147b8565b905092915050565b60006020828403121561486557614864613ee4565b5b600061487384828501614191565b91505092915050565b600080600080600060a0868803121561489857614897613ee4565b5b600086013567ffffffffffffffff8111156148b6576148b5613ee9565b5b6148c288828901614006565b955050602086013567ffffffffffffffff8111156148e3576148e2613ee9565b5b6148ef88828901614006565b945050604086013567ffffffffffffffff8111156149105761490f613ee9565b5b61491c88828901614006565b935050606086013567ffffffffffffffff81111561493d5761493c613ee9565b5b61494988828901614006565b925050608061495a88828901614191565b9150509295509295909350565b6000806040838503121561497e5761497d613ee4565b5b600061498c858286016141c7565b925050602061499d858286016142d7565b9150509250929050565b600080604083850312156149be576149bd613ee4565b5b60006149cc85828601614191565b92505060206149dd85828601614191565b9150509250929050565b600081905092915050565b60006149fd826140d9565b614a0781856149e7565b9350614a178185602086016140f5565b80840191505092915050565b6000614a2f82846149f2565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680614a8157607f821691505b602082108103614a9457614a93614a3a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614ad4826141a6565b9150614adf836141a6565b9250828201905080821115614af757614af6614a9a565b5b92915050565b60008190508160005260206000209050919050565b60008154614b1f81614a69565b614b2981866149e7565b94506001821660008114614b445760018114614b5957614b8c565b60ff1983168652811515820286019350614b8c565b614b6285614afd565b60005b83811015614b8457815481890152600182019150602081019050614b65565b838801955050505b50505092915050565b6000614ba18284614b12565b915081905092915050565b60008160601b9050919050565b6000614bc482614bac565b9050919050565b6000614bd682614bb9565b9050919050565b614bee614be98261409d565b614bcb565b82525050565b6000614bff82614bb9565b9050919050565b614c17614c12826142ae565b614bf4565b82525050565b6000819050919050565b614c38614c33826141a6565b614c1d565b82525050565b6000614c4a8287614bdd565b601482019150614c5a8286614bdd565b601482019150614c6a8285614c06565b601482019150614c7a8284614c27565b60208201915081905095945050505050565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b6000614cc26011836140e4565b9150614ccd82614c8c565b602082019050919050565b60006020820190508181036000830152614cf181614cb5565b9050919050565b6000614d03826141a6565b9150614d0e836141a6565b9250828202614d1c816141a6565b91508282048414831517614d3357614d32614a9a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000614d74826141a6565b9150614d7f836141a6565b925082614d8f57614d8e614d3a565b5b828204905092915050565b6000614da5826141a6565b9150614db0836141a6565b9250828203905081811115614dc857614dc7614a9a565b5b92915050565b6000819050919050565b6000614df3614dee614de98461407d565b614dce565b61407d565b9050919050565b6000614e0582614dd8565b9050919050565b6000614e1782614dfa565b9050919050565b614e2781614e0c565b82525050565b6000606082019050614e4260008301866140af565b614e4f6020830185614e1e565b614e5c6040830184614451565b949350505050565b614e6d8161421c565b8114614e7857600080fd5b50565b600081519050614e8a81614e64565b92915050565b600060208284031215614ea657614ea5613ee4565b5b6000614eb484828501614e7b565b91505092915050565b6000614ec8826141a6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614efa57614ef9614a9a565b5b600182019050919050565b50565b6000614f156000836149e7565b9150614f2082614f05565b600082019050919050565b6000614f3682614f08565b9150819050919050565b7f416e20554349206964206173736f63696174656420776974682074686973206e60008201527f616d6520616c7265616479206578697374732e20506c656173652063686f6f7360208201527f65206120646966666572656e74206e616d652021210000000000000000000000604082015250565b6000614fc26055836140e4565b9150614fcd82614f40565b606082019050919050565b60006020820190508181036000830152614ff181614fb5565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026150457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82615008565b61504f8683615008565b95508019841693508086168417925050509392505050565b600061508261507d615078846141a6565b614dce565b6141a6565b9050919050565b6000819050919050565b61509c83615067565b6150b06150a882615089565b848454615015565b825550505050565b600090565b6150c56150b8565b6150d0818484615093565b505050565b5b818110156150f4576150e96000826150bd565b6001810190506150d6565b5050565b601f8211156151395761510a81614afd565b61511384614ff8565b81016020851015615122578190505b61513661512e85614ff8565b8301826150d5565b50505b505050565b600082821c905092915050565b600061515c6000198460080261513e565b1980831691505092915050565b6000615175838361514b565b9150826002028217905092915050565b61518e826140d9565b67ffffffffffffffff8111156151a7576151a6613f09565b5b6151b18254614a69565b6151bc8282856150f8565b600060209050601f8311600181146151ef57600084156151dd578287015190505b6151e78582615169565b86555061524f565b601f1984166151fd86614afd565b60005b8281101561522557848901518255600182019150602085019450602081019050615200565b86831015615242578489015161523e601f89168261514b565b8355505b6001600288020188555050505b505050505050565b600060408201905061526c60008301856140af565b6152796020830184614228565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190506152c46000830185614e1e565b6152d16020830184614451565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061531161530c615307846152d8565b614dce565b6152e2565b9050919050565b615321816152f6565b82525050565b600060208201905061533c6000830184615318565b92915050565b600060608201905061535760008301866140af565b6153646020830185614451565b6153716040830184614451565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000819050919050565b6153bb816153a8565b82525050565b60006020820190506153d660008301846153b2565b92915050565b60006080820190506153f160008301876153b2565b6153fe60208301866145c3565b61540b60408301856153b2565b61541860608301846153b2565b9594505050505056fea2646970667358221220bf822f1dd77786e7fadab5d67b5a48655eba16d7d09a11bbec7312494db22dc064736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5E385B92 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xB9598C5E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDB461E1A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDB461E1A EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7CA JUMPI DUP1 PUSH4 0xE13D23E5 EQ PUSH2 0x807 JUMPI DUP1 PUSH4 0xF24D3AF2 EQ PUSH2 0x844 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x885 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xB9598C5E EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xC34D9D7C EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0xD263BE48 EQ PUSH2 0x762 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0x8CAE45D2 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6B7 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x5E385B92 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0x6CDAA421 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0x6E997665 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5D0 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1888D712 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x34A7F193 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x451E9CF0 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x52D95491 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x5A12D0F8 EQ PUSH2 0x514 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1888D712 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x26232A2E EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x2A41FFD9 EQ PUSH2 0x429 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xF1D5EC7 GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xF1D5EC7 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x12E8E2C3 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x15CCB680 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x37A JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x4874354 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xC60B372 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x4158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x41DC JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x4252 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x438D JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x4424 JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x447B JUMP JUMPDEST PUSH2 0xF76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x44A8 JUMP JUMPDEST PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x450 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x44FB JUMP JUMPDEST PUSH2 0x109D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x45D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x492 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BD PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x45FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x4424 JUMP JUMPDEST PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x529 PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x482D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x554 PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x45FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x591 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x447B JUMP JUMPDEST PUSH2 0x1A3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x1A85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x482D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x622 PUSH2 0x1F01 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x1F15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x482D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x676 PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A1 PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0x4158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x41DC JUMP JUMPDEST PUSH2 0x236E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x487C JUMP JUMPDEST PUSH2 0x2391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x737 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x4967 JUMP JUMPDEST PUSH2 0x25B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x760 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x2676 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x777 PUSH2 0x28BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x482D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AF SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x49A7 JUMP JUMPDEST PUSH2 0x2E15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x2EAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83B SWAP2 SWAP1 PUSH2 0x4237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x484F JUMP JUMPDEST PUSH2 0x3141 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x905 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x916 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x942 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x964 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x972 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9A5 PUSH2 0x31EF JUMP JUMPDEST SWAP1 POP PUSH2 0x9B2 DUP2 DUP6 DUP6 PUSH2 0x31F7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C5 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA94 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xA0F SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0xA87 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xA5E SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9CF JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBD7 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB89 JUMPI POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB71 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0xBCA JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA98 JUMP JUMPDEST POP POP PUSH2 0xBE1 PUSH2 0x3260 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEF PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP7 DUP7 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC08 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xC2B DUP3 PUSH2 0x3279 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC39 DUP3 DUP7 PUSH2 0x32AF JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA0 SWAP1 PUSH2 0x4CD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x1 SLOAD DUP12 PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x4CF8 JUMP JUMPDEST PUSH2 0xCC6 SWAP2 SWAP1 PUSH2 0x4D69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP12 PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x4D9A JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP10 DUP12 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD15 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E2D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x4E90 JUMP JUMPDEST POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP10 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E2D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF9 SWAP2 SWAP1 PUSH2 0x4E90 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 POP POP POP POP POP POP PUSH2 0xE0B PUSH2 0x3260 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE1C PUSH2 0x32DB JUMP JUMPDEST PUSH2 0xE24 PUSH2 0x3209 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xE33 PUSH2 0x3260 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF53 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xE77 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF38 JUMPI POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ JUMPDEST ISZERO PUSH2 0xF46 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0xF53 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE47 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF69 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xF7E PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x1 SLOAD CALLVALUE PUSH2 0xF91 SWAP2 SWAP1 PUSH2 0x4CF8 JUMP JUMPDEST PUSH2 0xF9B SWAP2 SWAP1 PUSH2 0x4D69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 CALLVALUE PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x4D9A JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x105A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH2 0x1065 PUSH2 0x3260 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1073 PUSH2 0x31EF JUMP JUMPDEST SWAP1 POP PUSH2 0x1080 DUP6 DUP3 DUP6 PUSH2 0x3362 JUMP JUMPDEST PUSH2 0x108B DUP6 DUP6 DUP6 PUSH2 0x33F7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10A5 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x10B8 SWAP1 PUSH2 0x4EBD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x118C JUMPI DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10E0 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1107 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x117F JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1156 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x10C7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x119C SWAP1 PUSH2 0x4F2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x11C2 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1230 SWAP1 PUSH2 0x4FD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x12D8 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x13AB SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x13C1 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x13D7 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 PUSH1 0x40 MLOAD PUSH2 0x1450 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1466 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH2 0x147C SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x2E3249F822BD56E4E9AE7D39402DEF6DF4618C14F212FBE4C35E0C94EDDEF9FE DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x14B6 SWAP3 SWAP2 SWAP1 PUSH2 0x5257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x14C7 PUSH2 0x3260 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1528 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1554 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1576 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1584 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x15B6 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15E2 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x162F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1604 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x162F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1612 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1644 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1670 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1692 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x170A PUSH2 0x32DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x172E JUMPI PUSH2 0x172D PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1767 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1754 PUSH2 0x3E93 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x174C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1784 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x17B9 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17E5 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1832 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1807 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1832 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1815 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x184B SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1877 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1899 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x18DD SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1909 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1956 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x192B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1956 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1939 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP5 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x19E3 JUMPI PUSH2 0x19E2 PUSH2 0x5280 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP6 PUSH2 0x19FB SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP5 POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x176D JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1A42 PUSH2 0x32DB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B2D JUMPI DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AAD SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1AD4 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1AF5 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x1B20 JUMPI PUSH1 0x1 DUP4 PUSH2 0x1B1D SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B4A JUMPI PUSH2 0x1B49 PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B83 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1B70 PUSH2 0x3E93 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1B68 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1E9D JUMPI DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BA2 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1BC9 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BEA SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x1E90 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1C14 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x1C49 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C75 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CC2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C97 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CC2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CA5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1CDB SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D07 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D54 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D29 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D54 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D37 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1D6D SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D99 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DE6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DBB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DE6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DC9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP5 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1E73 JUMPI PUSH2 0x1E72 PUSH2 0x5280 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP6 PUSH2 0x1E8B SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1B89 JUMP JUMPDEST POP DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1EB5 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F09 PUSH2 0x32DB JUMP JUMPDEST PUSH2 0x1F13 PUSH1 0x0 PUSH2 0x34EB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F3B JUMPI PUSH2 0x1F3A PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F74 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1F61 PUSH2 0x3E93 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1F59 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2289 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x1FAA SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x227C JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x200A SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2036 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2062 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2084 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2092 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x20C8 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20F4 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2141 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2116 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2141 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2124 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x215A SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2186 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x5280 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP5 PUSH2 0x2278 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1F7A JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22A0 PUSH2 0x35C2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x22D9 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x22EA SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2316 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2363 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2338 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2363 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2346 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2379 PUSH2 0x31EF JUMP JUMPDEST SWAP1 POP PUSH2 0x2386 DUP2 DUP6 DUP6 PUSH2 0x33F7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2399 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25A8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x23D3 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x259B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2431 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2458 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2479 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x259A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24A5 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x24CC SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24ED SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2599 JUMPI DUP7 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x251A SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2537 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP DUP6 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x254A SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2567 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP DUP5 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x257A SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2597 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x23A3 JUMP JUMPDEST POP POP PUSH2 0x25B2 PUSH2 0x3260 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25C1 PUSH2 0x32DB JUMP JUMPDEST PUSH2 0x25C9 PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2626 SWAP3 SWAP2 SWAP1 PUSH2 0x52AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2645 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2669 SWAP2 SWAP1 PUSH2 0x4E90 JUMP JUMPDEST POP PUSH2 0x2672 PUSH2 0x3260 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2680 PUSH2 0x35EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x26CE JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2703 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x2711 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x2748 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2798 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x27C0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3612 JUMP JUMPDEST PUSH2 0x27C8 PUSH2 0x3628 JUMP JUMPDEST PUSH2 0x27D1 CALLER PUSH2 0x363A JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x28B6 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x28AD SWAP2 SWAP1 PUSH2 0x5327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28E4 JUMPI PUSH2 0x28E3 PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x291D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x290A PUSH2 0x3E93 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2902 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CE1 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2953 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2CD4 JUMPI PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2CD2 JUMPI PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x29BC SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29DD SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2A04 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A25 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2CC5 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2A53 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2A7F SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AAB SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AF8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2ACD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AF8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2ADB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2B11 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B3D SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B8A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B5F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B8A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B6D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x2BA3 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BCF SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C1C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BF1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C1C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BFF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP5 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2CA9 JUMPI PUSH2 0x2CA8 PUSH2 0x5280 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP6 PUSH2 0x2CC1 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP5 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x29A3 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2923 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E0A JUMPI DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D10 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2D37 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D58 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ DUP1 ISZERO PUSH2 0x2DAE JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH2 0x2D8B SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST ISZERO PUSH2 0x2DFD JUMPI PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x2DC4 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x2E0A JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2CF7 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E20 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2EBB SWAP1 PUSH2 0x4F2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2EE1 SWAP2 SWAP1 PUSH2 0x4A23 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F02 SWAP2 SWAP1 PUSH2 0x4B95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2F26 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2F2B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x2F69 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F95 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FB7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FC5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x2FF7 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3023 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3070 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3045 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3070 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3053 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3085 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30B1 SWAP1 PUSH2 0x4A69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x30D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0x3149 PUSH2 0x32DB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31BB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31B2 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31C4 DUP2 PUSH2 0x34EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3204 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x364E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3213 PUSH2 0x3834 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x3253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x326A PUSH2 0x3834 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x32BF DUP7 DUP7 PUSH2 0x385C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x32CF DUP3 DUP3 PUSH2 0x38B8 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32E3 PUSH2 0x31EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3301 PUSH2 0x2295 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3360 JUMPI PUSH2 0x3324 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3357 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336E DUP5 DUP5 PUSH2 0x2E15 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x33F1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x33E1 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x364E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3469 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3460 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34DB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34D2 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34E6 DUP4 DUP4 DUP4 PUSH2 0x3A1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34F5 PUSH2 0x35C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x361A PUSH2 0x3C5B JUMP JUMPDEST PUSH2 0x3624 DUP3 DUP3 PUSH2 0x3C9B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3630 PUSH2 0x3C5B JUMP JUMPDEST PUSH2 0x3638 PUSH2 0x3CD8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3642 PUSH2 0x3C5B JUMP JUMPDEST PUSH2 0x364B DUP2 PUSH2 0x3CF9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3658 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36CC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36C3 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x373E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3735 SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x382D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3824 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x38A1 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x3893 DUP9 DUP3 DUP6 DUP6 PUSH2 0x3D7F JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x38B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x38CC JUMPI PUSH2 0x38CB PUSH2 0x5379 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x38DF JUMPI PUSH2 0x38DE PUSH2 0x5379 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x3A18 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x38F9 JUMPI PUSH2 0x38F8 PUSH2 0x5379 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x390C JUMPI PUSH2 0x390B PUSH2 0x5379 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3943 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3957 JUMPI PUSH2 0x3956 PUSH2 0x5379 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x396A JUMPI PUSH2 0x3969 PUSH2 0x5379 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x39AF JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39A6 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x39C2 JUMPI PUSH2 0x39C1 PUSH2 0x5379 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x39D5 JUMPI PUSH2 0x39D4 PUSH2 0x5379 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3A17 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A0E SWAP2 SWAP1 PUSH2 0x53C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A26 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A7C JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A70 SWAP2 SWAP1 PUSH2 0x4AC9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3B55 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x3B0B JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3BA0 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3BF0 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3C4D SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x3C63 PUSH2 0x3E73 JUMP JUMPDEST PUSH2 0x3C99 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x3CA3 PUSH2 0x3C5B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CAD PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x3CC0 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x3CD2 SWAP2 SWAP1 PUSH2 0x5185 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3CE0 PUSH2 0x3C5B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CEA PUSH2 0x3834 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3D01 PUSH2 0x3C5B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D73 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6A SWAP2 SWAP1 PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D7C DUP2 PUSH2 0x34EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x3DBF JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3E69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3DE4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x53DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E5A JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x3E69 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7D PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3F41 DUP3 PUSH2 0x3EF8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3F60 JUMPI PUSH2 0x3F5F PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F73 PUSH2 0x3EDA JUMP JUMPDEST SWAP1 POP PUSH2 0x3F7F DUP3 DUP3 PUSH2 0x3F38 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3F9F JUMPI PUSH2 0x3F9E PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH2 0x3FA8 DUP3 PUSH2 0x3EF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD7 PUSH2 0x3FD2 DUP5 PUSH2 0x3F84 JUMP JUMPDEST PUSH2 0x3F69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3FF3 JUMPI PUSH2 0x3FF2 PUSH2 0x3EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x3FFE DUP5 DUP3 DUP6 PUSH2 0x3FB5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x401B JUMPI PUSH2 0x401A PUSH2 0x3EEE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x402B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3FC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x404A JUMPI PUSH2 0x4049 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4068 JUMPI PUSH2 0x4067 PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x4074 DUP5 DUP3 DUP6 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40A8 DUP3 PUSH2 0x407D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40B8 DUP2 PUSH2 0x409D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4113 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x40F8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412A DUP3 PUSH2 0x40D9 JUMP JUMPDEST PUSH2 0x4134 DUP2 DUP6 PUSH2 0x40E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x4144 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40F5 JUMP JUMPDEST PUSH2 0x414D DUP2 PUSH2 0x3EF8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4172 DUP2 DUP5 PUSH2 0x411F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4183 DUP2 PUSH2 0x409D JUMP JUMPDEST DUP2 EQ PUSH2 0x418E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41A0 DUP2 PUSH2 0x417A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41B9 DUP2 PUSH2 0x41A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x41C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41D6 DUP2 PUSH2 0x41B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41F3 JUMPI PUSH2 0x41F2 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4201 DUP6 DUP3 DUP7 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4212 DUP6 DUP3 DUP7 ADD PUSH2 0x41C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4231 DUP2 PUSH2 0x421C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x424C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4269 JUMPI PUSH2 0x4268 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4277 DUP6 DUP3 DUP7 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4298 JUMPI PUSH2 0x4297 PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x42A4 DUP6 DUP3 DUP7 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B9 DUP3 PUSH2 0x407D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42C9 DUP2 PUSH2 0x42AE JUMP JUMPDEST DUP2 EQ PUSH2 0x42D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42E6 DUP2 PUSH2 0x42C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4307 JUMPI PUSH2 0x4306 PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH2 0x4310 DUP3 PUSH2 0x3EF8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4330 PUSH2 0x432B DUP5 PUSH2 0x42EC JUMP JUMPDEST PUSH2 0x3F69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x434C JUMPI PUSH2 0x434B PUSH2 0x3EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x4357 DUP5 DUP3 DUP6 PUSH2 0x3FB5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4374 JUMPI PUSH2 0x4373 PUSH2 0x3EEE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4384 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x431D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x43A9 JUMPI PUSH2 0x43A8 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43B7 DUP9 DUP3 DUP10 ADD PUSH2 0x41C7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43C8 DUP9 DUP3 DUP10 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x43D9 DUP9 DUP3 DUP10 ADD PUSH2 0x42D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x43EA DUP9 DUP3 DUP10 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x440B JUMPI PUSH2 0x440A PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x4417 DUP9 DUP3 DUP10 ADD PUSH2 0x435F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x443A JUMPI PUSH2 0x4439 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4448 DUP5 DUP3 DUP6 ADD PUSH2 0x41C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x445A DUP2 PUSH2 0x41A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4475 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4491 JUMPI PUSH2 0x4490 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x449F DUP5 DUP3 DUP6 ADD PUSH2 0x42D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x44C1 JUMPI PUSH2 0x44C0 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44CF DUP7 DUP3 DUP8 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x44E0 DUP7 DUP3 DUP8 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x44F1 DUP7 DUP3 DUP8 ADD PUSH2 0x41C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4515 JUMPI PUSH2 0x4514 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4533 JUMPI PUSH2 0x4532 PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x453F DUP8 DUP3 DUP9 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4560 JUMPI PUSH2 0x455F PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x456C DUP8 DUP3 DUP9 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x458D JUMPI PUSH2 0x458C PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x4599 DUP8 DUP3 DUP9 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x45AA DUP8 DUP3 DUP9 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45CC DUP2 PUSH2 0x45B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45F6 DUP2 PUSH2 0x42AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4611 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4631 DUP2 DUP9 PUSH2 0x411F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4645 DUP2 DUP8 PUSH2 0x411F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4659 DUP2 DUP7 PUSH2 0x411F JUMP JUMPDEST SWAP1 POP PUSH2 0x4668 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x4675 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4228 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C7 DUP3 PUSH2 0x40D9 JUMP JUMPDEST PUSH2 0x46D1 DUP2 DUP6 PUSH2 0x46AB JUMP JUMPDEST SWAP4 POP PUSH2 0x46E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40F5 JUMP JUMPDEST PUSH2 0x46EA DUP2 PUSH2 0x3EF8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46FE DUP2 PUSH2 0x409D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x470D DUP2 PUSH2 0x421C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x4730 DUP3 DUP3 PUSH2 0x46BC JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x474A DUP3 DUP3 PUSH2 0x46BC JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x4764 DUP3 DUP3 PUSH2 0x46BC JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4779 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x46F5 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x478C PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x4704 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A3 DUP4 DUP4 PUSH2 0x4713 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C3 DUP3 PUSH2 0x467F JUMP JUMPDEST PUSH2 0x47CD DUP2 DUP6 PUSH2 0x468A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x47DF DUP6 PUSH2 0x469B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x481B JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x47FC DUP6 DUP3 PUSH2 0x4797 JUMP JUMPDEST SWAP5 POP PUSH2 0x4807 DUP4 PUSH2 0x47AB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x47E3 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4847 DUP2 DUP5 PUSH2 0x47B8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4865 JUMPI PUSH2 0x4864 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4873 DUP5 DUP3 DUP6 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4898 JUMPI PUSH2 0x4897 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48B6 JUMPI PUSH2 0x48B5 PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x48C2 DUP9 DUP3 DUP10 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48E3 JUMPI PUSH2 0x48E2 PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x48EF DUP9 DUP3 DUP10 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4910 JUMPI PUSH2 0x490F PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x491C DUP9 DUP3 DUP10 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x493D JUMPI PUSH2 0x493C PUSH2 0x3EE9 JUMP JUMPDEST JUMPDEST PUSH2 0x4949 DUP9 DUP3 DUP10 ADD PUSH2 0x4006 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x495A DUP9 DUP3 DUP10 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x497E JUMPI PUSH2 0x497D PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x498C DUP6 DUP3 DUP7 ADD PUSH2 0x41C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x499D DUP6 DUP3 DUP7 ADD PUSH2 0x42D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x49BE JUMPI PUSH2 0x49BD PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49CC DUP6 DUP3 DUP7 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x49DD DUP6 DUP3 DUP7 ADD PUSH2 0x4191 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49FD DUP3 PUSH2 0x40D9 JUMP JUMPDEST PUSH2 0x4A07 DUP2 DUP6 PUSH2 0x49E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x4A17 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x40F5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A2F DUP3 DUP5 PUSH2 0x49F2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4A81 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4A94 JUMPI PUSH2 0x4A93 PUSH2 0x4A3A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4AD4 DUP3 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ADF DUP4 PUSH2 0x41A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4AF7 JUMPI PUSH2 0x4AF6 PUSH2 0x4A9A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4B1F DUP2 PUSH2 0x4A69 JUMP JUMPDEST PUSH2 0x4B29 DUP2 DUP7 PUSH2 0x49E7 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4B44 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4B59 JUMPI PUSH2 0x4B8C JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x4B8C JUMP JUMPDEST PUSH2 0x4B62 DUP6 PUSH2 0x4AFD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B84 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4B65 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA1 DUP3 DUP5 PUSH2 0x4B12 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC4 DUP3 PUSH2 0x4BAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD6 DUP3 PUSH2 0x4BB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BEE PUSH2 0x4BE9 DUP3 PUSH2 0x409D JUMP JUMPDEST PUSH2 0x4BCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BFF DUP3 PUSH2 0x4BB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C17 PUSH2 0x4C12 DUP3 PUSH2 0x42AE JUMP JUMPDEST PUSH2 0x4BF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C38 PUSH2 0x4C33 DUP3 PUSH2 0x41A6 JUMP JUMPDEST PUSH2 0x4C1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4A DUP3 DUP8 PUSH2 0x4BDD JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4C5A DUP3 DUP7 PUSH2 0x4BDD JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4C6A DUP3 DUP6 PUSH2 0x4C06 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4C7A DUP3 DUP5 PUSH2 0x4C27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CC2 PUSH1 0x11 DUP4 PUSH2 0x40E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CCD DUP3 PUSH2 0x4C8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CF1 DUP2 PUSH2 0x4CB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D03 DUP3 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D0E DUP4 PUSH2 0x41A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4D1C DUP2 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4D33 JUMPI PUSH2 0x4D32 PUSH2 0x4A9A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D74 DUP3 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D7F DUP4 PUSH2 0x41A6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4D8F JUMPI PUSH2 0x4D8E PUSH2 0x4D3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA5 DUP3 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DB0 DUP4 PUSH2 0x41A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4DC8 JUMPI PUSH2 0x4DC7 PUSH2 0x4A9A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF3 PUSH2 0x4DEE PUSH2 0x4DE9 DUP5 PUSH2 0x407D JUMP JUMPDEST PUSH2 0x4DCE JUMP JUMPDEST PUSH2 0x407D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E05 DUP3 PUSH2 0x4DD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E17 DUP3 PUSH2 0x4DFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E27 DUP2 PUSH2 0x4E0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4E42 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x4E4F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4E1E JUMP JUMPDEST PUSH2 0x4E5C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4451 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4E6D DUP2 PUSH2 0x421C JUMP JUMPDEST DUP2 EQ PUSH2 0x4E78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E8A DUP2 PUSH2 0x4E64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EA6 JUMPI PUSH2 0x4EA5 PUSH2 0x3EE4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4EB4 DUP5 DUP3 DUP6 ADD PUSH2 0x4E7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC8 DUP3 PUSH2 0x41A6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4EFA JUMPI PUSH2 0x4EF9 PUSH2 0x4A9A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F15 PUSH1 0x0 DUP4 PUSH2 0x49E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F20 DUP3 PUSH2 0x4F05 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F36 DUP3 PUSH2 0x4F08 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416E20554349206964206173736F63696174656420776974682074686973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616D6520616C7265616479206578697374732E20506C656173652063686F6F73 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x65206120646966666572656E74206E616D652021210000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC2 PUSH1 0x55 DUP4 PUSH2 0x40E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FCD DUP3 PUSH2 0x4F40 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FF1 DUP2 PUSH2 0x4FB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5045 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5008 JUMP JUMPDEST PUSH2 0x504F DUP7 DUP4 PUSH2 0x5008 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5082 PUSH2 0x507D PUSH2 0x5078 DUP5 PUSH2 0x41A6 JUMP JUMPDEST PUSH2 0x4DCE JUMP JUMPDEST PUSH2 0x41A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x509C DUP4 PUSH2 0x5067 JUMP JUMPDEST PUSH2 0x50B0 PUSH2 0x50A8 DUP3 PUSH2 0x5089 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5015 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x50C5 PUSH2 0x50B8 JUMP JUMPDEST PUSH2 0x50D0 DUP2 DUP5 DUP5 PUSH2 0x5093 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x50F4 JUMPI PUSH2 0x50E9 PUSH1 0x0 DUP3 PUSH2 0x50BD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x50D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5139 JUMPI PUSH2 0x510A DUP2 PUSH2 0x4AFD JUMP JUMPDEST PUSH2 0x5113 DUP5 PUSH2 0x4FF8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5122 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5136 PUSH2 0x512E DUP6 PUSH2 0x4FF8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x50D5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x513E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5175 DUP4 DUP4 PUSH2 0x514B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x518E DUP3 PUSH2 0x40D9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51A7 JUMPI PUSH2 0x51A6 PUSH2 0x3F09 JUMP JUMPDEST JUMPDEST PUSH2 0x51B1 DUP3 SLOAD PUSH2 0x4A69 JUMP JUMPDEST PUSH2 0x51BC DUP3 DUP3 DUP6 PUSH2 0x50F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x51EF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x51DD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x51E7 DUP6 DUP3 PUSH2 0x5169 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x524F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x51FD DUP7 PUSH2 0x4AFD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5225 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5200 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5242 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x523E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x514B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x526C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x5279 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4228 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x52C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4E1E JUMP JUMPDEST PUSH2 0x52D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4451 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5311 PUSH2 0x530C PUSH2 0x5307 DUP5 PUSH2 0x52D8 JUMP JUMPDEST PUSH2 0x4DCE JUMP JUMPDEST PUSH2 0x52E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5321 DUP2 PUSH2 0x52F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x533C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5318 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5357 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x5364 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4451 JUMP JUMPDEST PUSH2 0x5371 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4451 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53BB DUP2 PUSH2 0x53A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x53D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x53B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x53F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x53B2 JUMP JUMPDEST PUSH2 0x53FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x45C3 JUMP JUMPDEST PUSH2 0x540B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x53B2 JUMP JUMPDEST PUSH2 0x5418 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x53B2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF DUP3 0x2F SAR 0xD7 PUSH24 0x86E7FADAB5D67B5A48655EBA16D7D09A11BBEC7312494DB2 0x2D 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"568:11495:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10549:147;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2716:144:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5558:838:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10700:873;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2988:97;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9428:512;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3896:152:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11577:319:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5988:244:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:26:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4257:1009;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3754:82:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;838:23:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2791:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1064:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3737:502;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;682:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2890:94;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8430:963;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4106:171:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;3135:572:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:148:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4472:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7247:948:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11900:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1618:391;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6415:807;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9944:602;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4708:195:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5270:260:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1117:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10549:147:15;10623:7;10645:17;10663:4;10645:23;;;;;;:::i;:::-;;;;;;;;;;;;;:46;;;;;;;;;;;;10638:53;;10549:147;;;:::o;2716:144:2:-;2761:13;2786:22;2811:18;:16;:18::i;:::-;2786:43;;2846:1;:7;;2839:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;5299:13;5315:12;:10;:12::i;:::-;5299:28;;5337:31;5346:5;5353:7;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;:::o;5558:838:15:-;3395:21:4;:19;:21::i;:::-;5689:12:15::1;5704:8;;5689:23;;5769:9;5764:251;5788:4;5784:1;:8;5764:251;;;5923:10;5905:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;5895:41;;;;;;5848:14;:21;5867:1;5863;:5;;;;:::i;:::-;5848:21;;;;;;;;;;;:32;;5830:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;5820:63;;;;;;:116:::0;5807:202:::1;;5995:5;5955:14;:21;5974:1;5970;:5;;;;:::i;:::-;5955:21;;;;;;;;;;;:37;;;:45;;;;;;;;;;;;;;;;;;5807:202;5794:3;;;;;;;5764:251;;;;6081:9;6076:316;6100:4;6096:1;:8;6076:316;;;6180:6;6132:54;;:14;:21;6151:1;6147;:5;;;;:::i;:::-;6132:21;;;;;;;;;;;:44;;;;;;;;;;;;:54;;;:182;;;;;6301:10;6283:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;6273:41;;;;;;6226:14;:21;6245:1;6241;:5;;;;:::i;:::-;6226:21;;;;;;;;;;;:32;;6208:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;6198:63;;;;;;:116;6132:182;6119:267;;;6373:4;6333:14;:21;6352:1;6348;:5;;;;:::i;:::-;6333:21;;;;;;;;;;;:37;;;:44;;;;;;;;;;;;;;;;;;6119:267;6106:3;;;;;;;6076:316;;;;5641:755;3437:20:4::0;:18;:20::i;:::-;5558:838:15;;:::o;10700:873::-;10875:4;3395:21:4;:19;:21::i;:::-;10887:19:15::1;10943:6;10951:5;10958:8;10968:10;10926:53;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10909:76;;;;;;10887:98;;11072:28;11103:52;11143:11;11103:39;:52::i;:::-;11072:83;;11161:23;11187:46;11201:20;11223:9;11187:13;:46::i;:::-;11161:72;;11267:6;11248:25;;:15;:25;;;11240:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11302:16;11350:4;11335:11;;11322:10;:24;;;;:::i;:::-;11321:33;;;;:::i;:::-;11302:52;;11360:29;11405:8;11392:10;:21;;;;:::i;:::-;11360:53;;11427:5;11420:26;;;11447:6;11455:8;11465:21;11420:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11500:5;11493:26;;;11520:6;11528:11;::::0;::::1;;;;;;;;11541:8;11493:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11564:4;11557:11;;;;;;;3437:20:4::0;:18;:20::i;:::-;10700:873:15;;;;;;;:::o;2988:97::-;2334:13:0;:11;:13::i;:::-;3395:21:4::1;:19;:21::i;:::-;3077:3:15::2;3063:11;:17;;;;3437:20:4::1;:18;:20::i;:::-;2988:97:15::0;:::o;9428:512::-;9504:4;9516:11;9530:4;9516:18;;9582:12;9597:8;;9582:23;;9617:9;9612:305;9636:4;9632:1;:8;9612:305;;;9716:10;9668:58;;:14;:21;9687:1;9683;:5;;;;:::i;:::-;9668:21;;;;;;;;;;;:44;;;;;;;;;;;;:58;;;:186;;;;;9841:10;9823:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;9813:41;;;;;;9766:14;:21;9785:1;9781;:5;;;;:::i;:::-;9766:21;;;;;;;;;;;:32;;9748:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;9738:63;;;;;;:116;9668:186;9655:256;;;9882:5;9873:14;;9897:5;;9655:256;9642:3;;;;;;;9612:305;;;;9929:6;9922:13;;;;9428:512;;;:::o;3896:152:2:-;3948:7;3967:22;3992:18;:16;:18::i;:::-;3967:43;;4027:1;:14;;;4020:21;;;3896:152;:::o;11577:319:15:-;3395:21:4;:19;:21::i;:::-;11659:16:15::1;11706:4;11691:11;;11679:9;:23;;;;:::i;:::-;11678:32;;;;:::i;:::-;11659:51;;11739:29;11783:8;11771:9;:20;;;;:::i;:::-;11739:52;;11805:8;11797:26;;:49;11824:21;11797:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;11860:11;::::0;::::1;;;;;;;;11852:29;;:39;11882:8;11852:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;11653:243;;3437:20:4::0;:18;:20::i;:::-;11577:319:15;:::o;5988:244:2:-;6075:4;6091:15;6109:12;:10;:12::i;:::-;6091:30;;6131:37;6147:4;6153:7;6162:5;6131:15;:37::i;:::-;6178:26;6188:4;6194:2;6198:5;6178:9;:26::i;:::-;6221:4;6214:11;;;5988:244;;;;;:::o;723:26:15:-;;;;:::o;4257:1009::-;3395:21:4;:19;:21::i;:::-;4448:8:15::1;;:10;;;;;;;;;:::i;:::-;;;;;;4506:12;4521:8;;4506:23;;4541:9;4536:251;4560:4;4556:1;:8;4536:251;;;4695:10;4677:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;4667:41;;;;;;4620:14;:21;4639:1;4635;:5;;;;:::i;:::-;4620:21;;;;;;;;;;;:32;;4602:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;4592:63;;;;;;:116:::0;4579:202:::1;;4767:5;4727:14;:21;4746:1;4742;:5;;;;:::i;:::-;4727:21;;;;;;;;;;;:37;;;:45;;;;;;;;;;;;;;;;;;4579:202;4566:3;;;;;;;4536:251;;;;4888:20;;;;;;;:::i;:::-;;;;;;;;;;;;;4878:31;;;;;;4835:17;4853:4;4835:23;;;;;;:::i;:::-;;;;;;;;;;;;;:28;;4817:48;;;;;;;;:::i;:::-;;;;;;;;;;;;;4807:59;;;;;;:102;4792:218;;;;;;;;;;;;:::i;:::-;;;;;;;;;5042:57;;;;;;;;5050:4;5042:57;;;;5056:10;5042:57;;;;5068:16;5042:57;;;;5086:6;5042:57;;;;;;5094:4;5042:57;;;;::::0;5016:17:::1;5034:4;5016:23;;;;;;:::i;:::-;;;;;;;;;;;;;:83;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5128:57;;;;;;;;5136:4;5128:57;;;;5142:10;5128:57;;;;5154:16;5128:57;;;;5172:6;5128:57;;;;;;5180:4;5128:57;;;;::::0;5105:14:::1;:20;5120:4;5105:20;;;;;;;;;;;:80;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5230:16;5197:64;;;;;;:::i;:::-;;;;;;;;5218:10;5197:64;;;;;;:::i;:::-;;;;;;;;5212:4;5197:64;;;;;;:::i;:::-;;;;;;;;;5248:6;5256:4;5197:64;;;;;;;:::i;:::-;;;;;;;;4413:853;3437:20:4::0;:18;:20::i;:::-;4257:1009:15;;;;:::o;3754:82:2:-;3803:5;3827:2;3820:9;;3754:82;:::o;838:23:15:-;;;;:::o;2791:95::-;2840:15;2870:11;;;;;;;;;;;2863:18;;2791:95;:::o;1064:49::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3737:502::-;3797:16;2334:13:0;:11;:13::i;:::-;3873:22:15::1;3898:8;;3873:33;;3912:20;3943:22:::0;3982:14:::1;3968:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3943:54;;4008:9;4003:214;4027:14;4023:1;:18;4003:214;;;4056:17;4080:1;4076;:5;;;;:::i;:::-;4056:25;;4089:27;4119:14;:25;4134:9;4119:25;;;;;;;;;;;4089:55;;4174:11;4152:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;:5;4158:12;4152:19;;;;;;;;:::i;:::-;;;;;;;:33;;;;4209:1;4193:17;;;;;:::i;:::-;;;4048:169;;4043:3;;;;;;;4003:214;;;;4229:5;4222:12;;;;;3737:502:::0;:::o;682:34::-;;;;;;;;;;;;:::o;2890:94::-;2334:13:0;:11;:13::i;:::-;2975:4:15::1;2961:11;::::0;:18:::1;;;;;;;;;;;;;;;;;;2890:94:::0;:::o;8430:963::-;8520:16;8596:22;8621:8;;8596:33;;8635:17;8662:20;8698:9;8693:234;8717:14;8713:1;:18;8693:234;;;8862:14;8844:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;8834:45;;;;;;8787:14;:21;8806:1;8802;:5;;;;:::i;:::-;8787:21;;;;;;;;;;;:32;;8769:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;8759:63;;;;;;:120;8746:175;;8911:1;8898:14;;;;;:::i;:::-;;;8746:175;8733:3;;;;;;;8693:234;;;;8933:23;8973:9;8959:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8933:50;;8994:9;8989:381;9013:14;9009:1;:18;8989:381;;;9158:14;9140:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;9130:45;;;;;;9083:14;:21;9102:1;9098;:5;;;;:::i;:::-;9083:21;;;;;;;;;;;:32;;9065:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;9055:63;;;;;;:120;9042:322;;9194:17;9218:1;9214;:5;;;;:::i;:::-;9194:25;;9229:27;9259:14;:25;9274:9;9259:25;;;;;;;;;;;9229:55;;9317:11;9294:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;9301:12;9294:20;;;;;;;;:::i;:::-;;;;;;;:34;;;;9354:1;9338:17;;;;;:::i;:::-;;;9184:180;;9042:322;9029:3;;;;;;;8989:381;;;;9382:6;9375:13;;;;;;8430:963;;;:::o;4106:171:2:-;4171:7;4190:22;4215:18;:16;:18::i;:::-;4190:43;;4250:1;:11;;:20;4262:7;4250:20;;;;;;;;;;;;;;;;4243:27;;;4106:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;3135:572:15:-;3213:16;3289:22;3314:8;;3289:33;;3328:20;3359:22;3398:14;3384:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3359:54;;3424:9;3419:266;3443:14;3439:1;:18;3419:266;;;3524:13;3476:61;;:14;:21;3495:1;3491;:5;;;;:::i;:::-;3476:21;;;;;;;;;;;:44;;;;;;;;;;;;:61;;;3472:207;;3549:27;3579:14;:21;3598:1;3594;:5;;;;:::i;:::-;3579:21;;;;;;;;;;;3549:51;;3632:11;3610:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;3616:12;3610:19;;;;;;;;:::i;:::-;;;;;;;:33;;;;3669:1;3653:17;;;;;:::i;:::-;;;3539:140;3472:207;3459:3;;;;;;;3419:266;;;;3697:5;3690:12;;;;;3135:572;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2973:148:2:-;3020:13;3045:22;3070:18;:16;:18::i;:::-;3045:43;;3105:1;:9;;3098:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:148;:::o;4472:178::-;4541:4;4557:13;4573:12;:10;:12::i;:::-;4557:28;;4595:27;4605:5;4612:2;4616:5;4595:9;:27::i;:::-;4639:4;4632:11;;;4472:178;;;;:::o;7247:948:15:-;3395:21:4;:19;:21::i;:::-;7493:22:15::1;7518:8;;7493:33;;7538:9;7533:658;7557:14;7553:1;:18;7533:658;;;7638:6;7590:54;;:14;:21;7609:1;7605;:5;;;;:::i;:::-;7590:21;;;;;;;;;;;:44;;;;;;;;;;;;:54;;::::0;7586:599:::1;;7782:16;7764:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;7754:47;;;;;;7699:14;:21;7718:1;7714;:5;;;;:::i;:::-;7699:21;;;;;;;;;;;:38;;7681:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;7671:69;;;;;;:130:::0;7656:521:::1;;7948:13;7930:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;7920:44;;;;;;7869:14;:21;7888:1;7884;:5;;;;:::i;:::-;7869:21;;;;;;;;;;;:32;;7851:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;7841:63;;;;;;:123:::0;7824:343:::1;;8020:4;7991:14;:21;8010:1;8006;:5;;;;:::i;:::-;7991:21;;;;;;;;;;;:26;;:33;;;;;;:::i;:::-;;8073:10;8038:14;:21;8057:1;8053;:5;;;;:::i;:::-;8038:21;;;;;;;;;;;:32;;:45;;;;;;:::i;:::-;;8138:16;8097:14;:21;8116:1;8112;:5;;;;:::i;:::-;8097:21;;;;;;;;;;;:38;;:57;;;;;;:::i;:::-;;7824:343;7656:521;7586:599;7573:3;;;;;;;7533:658;;;;7435:760;3437:20:4::0;:18;:20::i;:::-;7247:948:15;;;;;:::o;11900:160::-;2334:13:0;:11;:13::i;:::-;3395:21:4::1;:19;:21::i;:::-;12015:8:15::2;;;;;;;;;;;12008:25;;;12034:8;12044:10;12008:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3437:20:4::1;:18;:20::i;:::-;11900:160:15::0;;:::o;1618:391::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1676:20:15::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:12:::1;:20::i;:::-;1702:24;:22;:24::i;:::-;1732:26;1747:10;1732:14;:26::i;:::-;1952:10;1930:11;::::0;:33:::1;;;;;;;;;;;;;;;;;;1983:1;1969:11;:15;;;;2001:3;1990:8;;:14;;;;;;;;;;;;;;;;;;5070::1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1618:391:15;:::o;6415:807::-;6457:16;6533:22;6558:8;;6533:33;;6572:20;6603:22;6642:14;6628:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6603:54;;6668:9;6663:536;6687:14;6683:1;:18;6663:536;;;6768:10;6720:58;;:14;:21;6739:1;6735;:5;;;;:::i;:::-;6720:21;;;;;;;;;;;:44;;;;;;;;;;;;:58;;;6716:477;;6795:9;6790:395;6814:14;6810:1;:18;6790:395;;;6971:14;:21;6990:1;6986;:5;;;;:::i;:::-;6971:21;;;;;;;;;;;:32;;6953:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;6943:63;;;;;;6892:14;:21;6911:1;6907;:5;;;;:::i;:::-;6892:21;;;;;;;;;;;:32;;6874:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;6864:63;;;;;;:142;6847:328;;7033:27;7063:14;:21;7082:1;7078;:5;;;;:::i;:::-;7063:21;;;;;;;;;;;7033:51;;7120:11;7098:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;7104:12;7098:19;;;;;;;;:::i;:::-;;;;;;;:33;;;;7161:1;7145:17;;;;;:::i;:::-;;;7019:156;6847:328;6830:3;;;;;;;6790:395;;;;6716:477;6703:3;;;;;;;6663:536;;;;7212:5;7205:12;;;;;6415:807;:::o;9944:602::-;10038:7;10105:22;10130:8;;10105:33;;10144:14;10183:9;10178:345;10202:14;10198:1;:18;10178:345;;;10347:14;10329:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;10319:45;;;;;;10272:14;:21;10291:1;10287;:5;;;;:::i;:::-;10272:21;;;;;;;;;;;:32;;10254:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;10244:63;;;;;;:120;:177;;;;;10417:4;10376:45;;:14;:21;10395:1;10391;:5;;;;:::i;:::-;10376:21;;;;;;;;;;;:37;;;;;;;;;;;;:45;;;10244:177;10231:286;;;10449:14;:21;10468:1;10464;:5;;;;:::i;:::-;10449:21;;;;;;;;;;;:44;;;;;;;;;;;;10440:53;;10503:5;;10231:286;10218:3;;;;;;;10178:345;;;;10535:6;10528:13;;;;9944:602;;;:::o;4708:195:2:-;4788:7;4807:22;4832:18;:16;:18::i;:::-;4807:43;;4867:1;:13;;:20;4881:5;4867:20;;;;;;;;;;;;;;;:29;4888:7;4867:29;;;;;;;;;;;;;;;;4860:36;;;4708:195;;;;:::o;5270:260:15:-;5337:4;5439:20;;;;;;;:::i;:::-;;;;;;;;;;;;;5429:31;;;;;;5388:17;5406:4;5388:23;;;;;;:::i;:::-;;;;;;;;;;;;;:28;;5370:48;;;;;;;;:::i;:::-;;;;;;;;;;;;;5360:59;;;;;;:100;5349:177;;5482:4;5475:11;;;;5349:177;5514:5;5507:12;;5270:260;;;;:::o;1117:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1947:153:2:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;10001:128:2:-;10085:37;10094:5;10101:7;10110:5;10117:4;10085:8;:37::i;:::-;10001:128;;;:::o;3470:384:4:-;3519:32;3554:28;:26;:28::i;:::-;3519:63;;1991:1;3670;:9;;;:20;3666:88;;3713:30;;;;;;;;;;;;;;3666:88;1991:1;3828;:9;;:19;;;;3509:345;3470:384::o;3860:283::-;3908:32;3943:28;:26;:28::i;:::-;3908:63;;1949:1;4113;:9;;:23;;;;3898:245;3860:283::o;1222:433:11:-;1298:14;1376:34;1370:4;1363:48;1478:11;1472:4;1465:25;1570:4;1564;1554:21;1544:31;;1222:433;;;:::o;3714:255:10:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;11745:476:2:-;11844:24;11871:25;11881:5;11888:7;11871:9;:25::i;:::-;11844:52;;11929:17;11910:16;:36;11906:309;;;11985:5;11966:16;:24;11962:130;;;12044:7;12053:16;12071:5;12017:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11962:130;12133:57;12142:5;12149:7;12177:5;12158:16;:24;12184:5;12133:8;:57::i;:::-;11906:309;11834:387;11745:476;;;:::o;6605:300::-;6704:1;6688:18;;:4;:18;;;6684:86;;6756:1;6729:30;;;;;;;;;;;:::i;:::-;;;;;;;;6684:86;6797:1;6783:16;;:2;:16;;;6779:86;;6851:1;6822:32;;;;;;;;;;;:::i;:::-;;;;;;;;6779:86;6874:24;6882:4;6888:2;6892:5;6874:7;:24::i;:::-;6605:300;;;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2282:147:2:-;6931:20:1;:18;:20::i;:::-;2384:38:2::1;2407:5;2414:7;2384:22;:38::i;:::-;2282:147:::0;;:::o;2684:111:4:-;6931:20:1;:18;:20::i;:::-;2754:34:4::1;:32;:34::i;:::-;2684:111::o:0;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;10976:487:2:-;11084:22;11109:18;:16;:18::i;:::-;11084:43;;11158:1;11141:19;;:5;:19;;;11137:89;;11212:1;11183:32;;;;;;;;;;;:::i;:::-;;;;;;;;11137:89;11258:1;11239:21;;:7;:21;;;11235:90;;11311:1;11283:31;;;;;;;;;;;:::i;:::-;;;;;;;;11235:90;11366:5;11334:1;:13;;:20;11348:5;11334:20;;;;;;;;;;;;;;;:29;11355:7;11334:29;;;;;;;;;;;;;;;:37;;;;11385:9;11381:76;;;11431:7;11415:31;;11424:5;11415:31;;;11440:5;11415:31;;;;;;:::i;:::-;;;;;;;;11381:76;11074:389;10976:487;;;;:::o;2395:183:4:-;2455:32;2532:30;2522:40;;2395:183;:::o;2129:778:10:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;7220:1170:2:-;7305:22;7330:18;:16;:18::i;:::-;7305:43;;7378:1;7362:18;;:4;:18;;;7358:546;;7516:5;7498:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7358:546;;;7552:19;7574:1;:11;;:17;7586:4;7574:17;;;;;;;;;;;;;;;;7552:39;;7623:5;7609:11;:19;7605:115;;;7680:4;7686:11;7699:5;7655:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7605:115;7874:5;7860:11;:19;7840:1;:11;;:17;7852:4;7840:17;;;;;;;;;;;;;;;:39;;;;7538:366;7358:546;7932:1;7918:16;;:2;:16;;;7914:429;;8099:5;8081:1;:14;;;:23;;;;;;;;;;;7914:429;;;8313:5;8294:1;:11;;:15;8306:2;8294:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7914:429;8373:2;8358:25;;8367:4;8358:25;;;8377:5;8358:25;;;;;;:::i;:::-;;;;;;;;7295:1095;7220:1170;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2435:216:2:-;6931:20:1;:18;:20::i;:::-;2547:22:2::1;2572:18;:16;:18::i;:::-;2547:43;;2610:5;2600:1;:7;;:15;;;;;;:::i;:::-;;2637:7;2625:1;:9;;:19;;;;;;:::i;:::-;;2537:114;2435:216:::0;;:::o;2801:183:4:-;6931:20:1;:18;:20::i;:::-;2881:32:4::1;2916:28;:26;:28::i;:::-;2881:63;;1949:1;2954;:9;;:23;;;;2871:113;2801:183::o:0;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;5203:1551:10:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:148::-;1708:6;1703:3;1698;1685:30;1749:1;1740:6;1735:3;1731:16;1724:27;1610:148;;;:::o;1764:425::-;1842:5;1867:66;1883:49;1925:6;1883:49;:::i;:::-;1867:66;:::i;:::-;1858:75;;1956:6;1949:5;1942:21;1994:4;1987:5;1983:16;2032:3;2023:6;2018:3;2014:16;2011:25;2008:112;;;2039:79;;:::i;:::-;2008:112;2129:54;2176:6;2171:3;2166;2129:54;:::i;:::-;1848:341;1764:425;;;;;:::o;2209:340::-;2265:5;2314:3;2307:4;2299:6;2295:17;2291:27;2281:122;;2322:79;;:::i;:::-;2281:122;2439:6;2426:20;2464:79;2539:3;2531:6;2524:4;2516:6;2512:17;2464:79;:::i;:::-;2455:88;;2271:278;2209:340;;;;:::o;2555:509::-;2624:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:119;;;2679:79;;:::i;:::-;2641:119;2827:1;2816:9;2812:17;2799:31;2857:18;2849:6;2846:30;2843:117;;;2879:79;;:::i;:::-;2843:117;2984:63;3039:7;3030:6;3019:9;3015:22;2984:63;:::i;:::-;2974:73;;2770:287;2555:509;;;;:::o;3070:126::-;3107:7;3147:42;3140:5;3136:54;3125:65;;3070:126;;;:::o;3202:96::-;3239:7;3268:24;3286:5;3268:24;:::i;:::-;3257:35;;3202:96;;;:::o;3304:118::-;3391:24;3409:5;3391:24;:::i;:::-;3386:3;3379:37;3304:118;;:::o;3428:222::-;3521:4;3559:2;3548:9;3544:18;3536:26;;3572:71;3640:1;3629:9;3625:17;3616:6;3572:71;:::i;:::-;3428:222;;;;:::o;3656:99::-;3708:6;3742:5;3736:12;3726:22;;3656:99;;;:::o;3761:169::-;3845:11;3879:6;3874:3;3867:19;3919:4;3914:3;3910:14;3895:29;;3761:169;;;;:::o;3936:248::-;4018:1;4028:113;4042:6;4039:1;4036:13;4028:113;;;4127:1;4122:3;4118:11;4112:18;4108:1;4103:3;4099:11;4092:39;4064:2;4061:1;4057:10;4052:15;;4028:113;;;4175:1;4166:6;4161:3;4157:16;4150:27;3998:186;3936:248;;;:::o;4190:377::-;4278:3;4306:39;4339:5;4306:39;:::i;:::-;4361:71;4425:6;4420:3;4361:71;:::i;:::-;4354:78;;4441:65;4499:6;4494:3;4487:4;4480:5;4476:16;4441:65;:::i;:::-;4531:29;4553:6;4531:29;:::i;:::-;4526:3;4522:39;4515:46;;4282:285;4190:377;;;;:::o;4573:313::-;4686:4;4724:2;4713:9;4709:18;4701:26;;4773:9;4767:4;4763:20;4759:1;4748:9;4744:17;4737:47;4801:78;4874:4;4865:6;4801:78;:::i;:::-;4793:86;;4573:313;;;;:::o;4892:122::-;4965:24;4983:5;4965:24;:::i;:::-;4958:5;4955:35;4945:63;;5004:1;5001;4994:12;4945:63;4892:122;:::o;5020:139::-;5066:5;5104:6;5091:20;5082:29;;5120:33;5147:5;5120:33;:::i;:::-;5020:139;;;;:::o;5165:77::-;5202:7;5231:5;5220:16;;5165:77;;;:::o;5248:122::-;5321:24;5339:5;5321:24;:::i;:::-;5314:5;5311:35;5301:63;;5360:1;5357;5350:12;5301:63;5248:122;:::o;5376:139::-;5422:5;5460:6;5447:20;5438:29;;5476:33;5503:5;5476:33;:::i;:::-;5376:139;;;;:::o;5521:474::-;5589:6;5597;5646:2;5634:9;5625:7;5621:23;5617:32;5614:119;;;5652:79;;:::i;:::-;5614:119;5772:1;5797:53;5842:7;5833:6;5822:9;5818:22;5797:53;:::i;:::-;5787:63;;5743:117;5899:2;5925:53;5970:7;5961:6;5950:9;5946:22;5925:53;:::i;:::-;5915:63;;5870:118;5521:474;;;;;:::o;6001:90::-;6035:7;6078:5;6071:13;6064:21;6053:32;;6001:90;;;:::o;6097:109::-;6178:21;6193:5;6178:21;:::i;:::-;6173:3;6166:34;6097:109;;:::o;6212:210::-;6299:4;6337:2;6326:9;6322:18;6314:26;;6350:65;6412:1;6401:9;6397:17;6388:6;6350:65;:::i;:::-;6212:210;;;;:::o;6428:654::-;6506:6;6514;6563:2;6551:9;6542:7;6538:23;6534:32;6531:119;;;6569:79;;:::i;:::-;6531:119;6689:1;6714:53;6759:7;6750:6;6739:9;6735:22;6714:53;:::i;:::-;6704:63;;6660:117;6844:2;6833:9;6829:18;6816:32;6875:18;6867:6;6864:30;6861:117;;;6897:79;;:::i;:::-;6861:117;7002:63;7057:7;7048:6;7037:9;7033:22;7002:63;:::i;:::-;6992:73;;6787:288;6428:654;;;;;:::o;7088:104::-;7133:7;7162:24;7180:5;7162:24;:::i;:::-;7151:35;;7088:104;;;:::o;7198:138::-;7279:32;7305:5;7279:32;:::i;:::-;7272:5;7269:43;7259:71;;7326:1;7323;7316:12;7259:71;7198:138;:::o;7342:155::-;7396:5;7434:6;7421:20;7412:29;;7450:41;7485:5;7450:41;:::i;:::-;7342:155;;;;:::o;7503:307::-;7564:4;7654:18;7646:6;7643:30;7640:56;;;7676:18;;:::i;:::-;7640:56;7714:29;7736:6;7714:29;:::i;:::-;7706:37;;7798:4;7792;7788:15;7780:23;;7503:307;;;:::o;7816:423::-;7893:5;7918:65;7934:48;7975:6;7934:48;:::i;:::-;7918:65;:::i;:::-;7909:74;;8006:6;7999:5;7992:21;8044:4;8037:5;8033:16;8082:3;8073:6;8068:3;8064:16;8061:25;8058:112;;;8089:79;;:::i;:::-;8058:112;8179:54;8226:6;8221:3;8216;8179:54;:::i;:::-;7899:340;7816:423;;;;;:::o;8258:338::-;8313:5;8362:3;8355:4;8347:6;8343:17;8339:27;8329:122;;8370:79;;:::i;:::-;8329:122;8487:6;8474:20;8512:78;8586:3;8578:6;8571:4;8563:6;8559:17;8512:78;:::i;:::-;8503:87;;8319:277;8258:338;;;;:::o;8602:1105::-;8714:6;8722;8730;8738;8746;8795:3;8783:9;8774:7;8770:23;8766:33;8763:120;;;8802:79;;:::i;:::-;8763:120;8922:1;8947:53;8992:7;8983:6;8972:9;8968:22;8947:53;:::i;:::-;8937:63;;8893:117;9049:2;9075:53;9120:7;9111:6;9100:9;9096:22;9075:53;:::i;:::-;9065:63;;9020:118;9177:2;9203:61;9256:7;9247:6;9236:9;9232:22;9203:61;:::i;:::-;9193:71;;9148:126;9313:2;9339:53;9384:7;9375:6;9364:9;9360:22;9339:53;:::i;:::-;9329:63;;9284:118;9469:3;9458:9;9454:19;9441:33;9501:18;9493:6;9490:30;9487:117;;;9523:79;;:::i;:::-;9487:117;9628:62;9682:7;9673:6;9662:9;9658:22;9628:62;:::i;:::-;9618:72;;9412:288;8602:1105;;;;;;;;:::o;9713:329::-;9772:6;9821:2;9809:9;9800:7;9796:23;9792:32;9789:119;;;9827:79;;:::i;:::-;9789:119;9947:1;9972:53;10017:7;10008:6;9997:9;9993:22;9972:53;:::i;:::-;9962:63;;9918:117;9713:329;;;;:::o;10048:118::-;10135:24;10153:5;10135:24;:::i;:::-;10130:3;10123:37;10048:118;;:::o;10172:222::-;10265:4;10303:2;10292:9;10288:18;10280:26;;10316:71;10384:1;10373:9;10369:17;10360:6;10316:71;:::i;:::-;10172:222;;;;:::o;10400:345::-;10467:6;10516:2;10504:9;10495:7;10491:23;10487:32;10484:119;;;10522:79;;:::i;:::-;10484:119;10642:1;10667:61;10720:7;10711:6;10700:9;10696:22;10667:61;:::i;:::-;10657:71;;10613:125;10400:345;;;;:::o;10751:619::-;10828:6;10836;10844;10893:2;10881:9;10872:7;10868:23;10864:32;10861:119;;;10899:79;;:::i;:::-;10861:119;11019:1;11044:53;11089:7;11080:6;11069:9;11065:22;11044:53;:::i;:::-;11034:63;;10990:117;11146:2;11172:53;11217:7;11208:6;11197:9;11193:22;11172:53;:::i;:::-;11162:63;;11117:118;11274:2;11300:53;11345:7;11336:6;11325:9;11321:22;11300:53;:::i;:::-;11290:63;;11245:118;10751:619;;;;;:::o;11376:1305::-;11492:6;11500;11508;11516;11565:3;11553:9;11544:7;11540:23;11536:33;11533:120;;;11572:79;;:::i;:::-;11533:120;11720:1;11709:9;11705:17;11692:31;11750:18;11742:6;11739:30;11736:117;;;11772:79;;:::i;:::-;11736:117;11877:63;11932:7;11923:6;11912:9;11908:22;11877:63;:::i;:::-;11867:73;;11663:287;12017:2;12006:9;12002:18;11989:32;12048:18;12040:6;12037:30;12034:117;;;12070:79;;:::i;:::-;12034:117;12175:63;12230:7;12221:6;12210:9;12206:22;12175:63;:::i;:::-;12165:73;;11960:288;12315:2;12304:9;12300:18;12287:32;12346:18;12338:6;12335:30;12332:117;;;12368:79;;:::i;:::-;12332:117;12473:63;12528:7;12519:6;12508:9;12504:22;12473:63;:::i;:::-;12463:73;;12258:288;12585:2;12611:53;12656:7;12647:6;12636:9;12632:22;12611:53;:::i;:::-;12601:63;;12556:118;11376:1305;;;;;;;:::o;12687:86::-;12722:7;12762:4;12755:5;12751:16;12740:27;;12687:86;;;:::o;12779:112::-;12862:22;12878:5;12862:22;:::i;:::-;12857:3;12850:35;12779:112;;:::o;12897:214::-;12986:4;13024:2;13013:9;13009:18;13001:26;;13037:67;13101:1;13090:9;13086:17;13077:6;13037:67;:::i;:::-;12897:214;;;;:::o;13117:142::-;13220:32;13246:5;13220:32;:::i;:::-;13215:3;13208:45;13117:142;;:::o;13265:254::-;13374:4;13412:2;13401:9;13397:18;13389:26;;13425:87;13509:1;13498:9;13494:17;13485:6;13425:87;:::i;:::-;13265:254;;;;:::o;13525:925::-;13784:4;13822:3;13811:9;13807:19;13799:27;;13872:9;13866:4;13862:20;13858:1;13847:9;13843:17;13836:47;13900:78;13973:4;13964:6;13900:78;:::i;:::-;13892:86;;14025:9;14019:4;14015:20;14010:2;13999:9;13995:18;13988:48;14053:78;14126:4;14117:6;14053:78;:::i;:::-;14045:86;;14178:9;14172:4;14168:20;14163:2;14152:9;14148:18;14141:48;14206:78;14279:4;14270:6;14206:78;:::i;:::-;14198:86;;14294:72;14362:2;14351:9;14347:18;14338:6;14294:72;:::i;:::-;14376:67;14438:3;14427:9;14423:19;14414:6;14376:67;:::i;:::-;13525:925;;;;;;;;:::o;14456:139::-;14548:6;14582:5;14576:12;14566:22;;14456:139;;;:::o;14601:209::-;14725:11;14759:6;14754:3;14747:19;14799:4;14794:3;14790:14;14775:29;;14601:209;;;;:::o;14816:157::-;14908:4;14931:3;14923:11;;14961:4;14956:3;14952:14;14944:22;;14816:157;;;:::o;14979:159::-;15053:11;15087:6;15082:3;15075:19;15127:4;15122:3;15118:14;15103:29;;14979:159;;;;:::o;15144:357::-;15222:3;15250:39;15283:5;15250:39;:::i;:::-;15305:61;15359:6;15354:3;15305:61;:::i;:::-;15298:68;;15375:65;15433:6;15428:3;15421:4;15414:5;15410:16;15375:65;:::i;:::-;15465:29;15487:6;15465:29;:::i;:::-;15460:3;15456:39;15449:46;;15226:275;15144:357;;;;:::o;15507:108::-;15584:24;15602:5;15584:24;:::i;:::-;15579:3;15572:37;15507:108;;:::o;15621:99::-;15692:21;15707:5;15692:21;:::i;:::-;15687:3;15680:34;15621:99;;:::o;15786:1301::-;15895:3;15931:4;15926:3;15922:14;16018:4;16011:5;16007:16;16001:23;16071:3;16065:4;16061:14;16054:4;16049:3;16045:14;16038:38;16097:73;16165:4;16151:12;16097:73;:::i;:::-;16089:81;;15946:235;16269:4;16262:5;16258:16;16252:23;16322:3;16316:4;16312:14;16305:4;16300:3;16296:14;16289:38;16348:73;16416:4;16402:12;16348:73;:::i;:::-;16340:81;;16191:241;16526:4;16519:5;16515:16;16509:23;16579:3;16573:4;16569:14;16562:4;16557:3;16553:14;16546:38;16605:73;16673:4;16659:12;16605:73;:::i;:::-;16597:81;;16442:247;16789:4;16782:5;16778:16;16772:23;16808:63;16865:4;16860:3;16856:14;16842:12;16808:63;:::i;:::-;16699:182;16974:4;16967:5;16963:16;16957:23;16993:57;17044:4;17039:3;17035:14;17021:12;16993:57;:::i;:::-;16891:169;17077:4;17070:11;;15900:1187;15786:1301;;;;:::o;17093:256::-;17212:10;17247:96;17339:3;17331:6;17247:96;:::i;:::-;17233:110;;17093:256;;;;:::o;17355:138::-;17450:4;17482;17477:3;17473:14;17465:22;;17355:138;;;:::o;17563:1111::-;17732:3;17761:79;17834:5;17761:79;:::i;:::-;17856:111;17960:6;17955:3;17856:111;:::i;:::-;17849:118;;17993:3;18038:4;18030:6;18026:17;18021:3;18017:27;18068:81;18143:5;18068:81;:::i;:::-;18172:7;18203:1;18188:441;18213:6;18210:1;18207:13;18188:441;;;18284:9;18278:4;18274:20;18269:3;18262:33;18335:6;18329:13;18363:114;18472:4;18457:13;18363:114;:::i;:::-;18355:122;;18500:85;18578:6;18500:85;:::i;:::-;18490:95;;18614:4;18609:3;18605:14;18598:21;;18248:381;18235:1;18232;18228:9;18223:14;;18188:441;;;18192:14;18645:4;18638:11;;18665:3;18658:10;;17737:937;;;;;17563:1111;;;;:::o;18680:473::-;18873:4;18911:2;18900:9;18896:18;18888:26;;18960:9;18954:4;18950:20;18946:1;18935:9;18931:17;18924:47;18988:158;19141:4;19132:6;18988:158;:::i;:::-;18980:166;;18680:473;;;;:::o;19159:329::-;19218:6;19267:2;19255:9;19246:7;19242:23;19238:32;19235:119;;;19273:79;;:::i;:::-;19235:119;19393:1;19418:53;19463:7;19454:6;19443:9;19439:22;19418:53;:::i;:::-;19408:63;;19364:117;19159:329;;;;:::o;19494:1631::-;19629:6;19637;19645;19653;19661;19710:3;19698:9;19689:7;19685:23;19681:33;19678:120;;;19717:79;;:::i;:::-;19678:120;19865:1;19854:9;19850:17;19837:31;19895:18;19887:6;19884:30;19881:117;;;19917:79;;:::i;:::-;19881:117;20022:63;20077:7;20068:6;20057:9;20053:22;20022:63;:::i;:::-;20012:73;;19808:287;20162:2;20151:9;20147:18;20134:32;20193:18;20185:6;20182:30;20179:117;;;20215:79;;:::i;:::-;20179:117;20320:63;20375:7;20366:6;20355:9;20351:22;20320:63;:::i;:::-;20310:73;;20105:288;20460:2;20449:9;20445:18;20432:32;20491:18;20483:6;20480:30;20477:117;;;20513:79;;:::i;:::-;20477:117;20618:63;20673:7;20664:6;20653:9;20649:22;20618:63;:::i;:::-;20608:73;;20403:288;20758:2;20747:9;20743:18;20730:32;20789:18;20781:6;20778:30;20775:117;;;20811:79;;:::i;:::-;20775:117;20916:63;20971:7;20962:6;20951:9;20947:22;20916:63;:::i;:::-;20906:73;;20701:288;21028:3;21055:53;21100:7;21091:6;21080:9;21076:22;21055:53;:::i;:::-;21045:63;;20999:119;19494:1631;;;;;;;;:::o;21131:490::-;21207:6;21215;21264:2;21252:9;21243:7;21239:23;21235:32;21232:119;;;21270:79;;:::i;:::-;21232:119;21390:1;21415:53;21460:7;21451:6;21440:9;21436:22;21415:53;:::i;:::-;21405:63;;21361:117;21517:2;21543:61;21596:7;21587:6;21576:9;21572:22;21543:61;:::i;:::-;21533:71;;21488:126;21131:490;;;;;:::o;21627:474::-;21695:6;21703;21752:2;21740:9;21731:7;21727:23;21723:32;21720:119;;;21758:79;;:::i;:::-;21720:119;21878:1;21903:53;21948:7;21939:6;21928:9;21924:22;21903:53;:::i;:::-;21893:63;;21849:117;22005:2;22031:53;22076:7;22067:6;22056:9;22052:22;22031:53;:::i;:::-;22021:63;;21976:118;21627:474;;;;;:::o;22107:148::-;22209:11;22246:3;22231:18;;22107:148;;;;:::o;22261:390::-;22367:3;22395:39;22428:5;22395:39;:::i;:::-;22450:89;22532:6;22527:3;22450:89;:::i;:::-;22443:96;;22548:65;22606:6;22601:3;22594:4;22587:5;22583:16;22548:65;:::i;:::-;22638:6;22633:3;22629:16;22622:23;;22371:280;22261:390;;;;:::o;22657:275::-;22789:3;22811:95;22902:3;22893:6;22811:95;:::i;:::-;22804:102;;22923:3;22916:10;;22657:275;;;;:::o;22938:180::-;22986:77;22983:1;22976:88;23083:4;23080:1;23073:15;23107:4;23104:1;23097:15;23124:320;23168:6;23205:1;23199:4;23195:12;23185:22;;23252:1;23246:4;23242:12;23273:18;23263:81;;23329:4;23321:6;23317:17;23307:27;;23263:81;23391:2;23383:6;23380:14;23360:18;23357:38;23354:84;;23410:18;;:::i;:::-;23354:84;23175:269;23124:320;;;:::o;23450:180::-;23498:77;23495:1;23488:88;23595:4;23592:1;23585:15;23619:4;23616:1;23609:15;23636:191;23676:3;23695:20;23713:1;23695:20;:::i;:::-;23690:25;;23729:20;23747:1;23729:20;:::i;:::-;23724:25;;23772:1;23769;23765:9;23758:16;;23793:3;23790:1;23787:10;23784:36;;;23800:18;;:::i;:::-;23784:36;23636:191;;;;:::o;23833:141::-;23882:4;23905:3;23897:11;;23928:3;23925:1;23918:14;23962:4;23959:1;23949:18;23941:26;;23833:141;;;:::o;24004:874::-;24107:3;24144:5;24138:12;24173:36;24199:9;24173:36;:::i;:::-;24225:89;24307:6;24302:3;24225:89;:::i;:::-;24218:96;;24345:1;24334:9;24330:17;24361:1;24356:166;;;;24536:1;24531:341;;;;24323:549;;24356:166;24440:4;24436:9;24425;24421:25;24416:3;24409:38;24502:6;24495:14;24488:22;24480:6;24476:35;24471:3;24467:45;24460:52;;24356:166;;24531:341;24598:38;24630:5;24598:38;:::i;:::-;24658:1;24672:154;24686:6;24683:1;24680:13;24672:154;;;24760:7;24754:14;24750:1;24745:3;24741:11;24734:35;24810:1;24801:7;24797:15;24786:26;;24708:4;24705:1;24701:12;24696:17;;24672:154;;;24855:6;24850:3;24846:16;24839:23;;24538:334;;24323:549;;24111:767;;24004:874;;;;:::o;24884:269::-;25013:3;25035:92;25123:3;25114:6;25035:92;:::i;:::-;25028:99;;25144:3;25137:10;;24884:269;;;;:::o;25159:94::-;25192:8;25240:5;25236:2;25232:14;25211:35;;25159:94;;;:::o;25259:::-;25298:7;25327:20;25341:5;25327:20;:::i;:::-;25316:31;;25259:94;;;:::o;25359:100::-;25398:7;25427:26;25447:5;25427:26;:::i;:::-;25416:37;;25359:100;;;:::o;25465:157::-;25570:45;25590:24;25608:5;25590:24;:::i;:::-;25570:45;:::i;:::-;25565:3;25558:58;25465:157;;:::o;25628:108::-;25675:7;25704:26;25724:5;25704:26;:::i;:::-;25693:37;;25628:108;;;:::o;25742:189::-;25863:61;25891:32;25917:5;25891:32;:::i;:::-;25863:61;:::i;:::-;25858:3;25851:74;25742:189;;:::o;25937:79::-;25976:7;26005:5;25994:16;;25937:79;;;:::o;26022:157::-;26127:45;26147:24;26165:5;26147:24;:::i;:::-;26127:45;:::i;:::-;26122:3;26115:58;26022:157;;:::o;26185:711::-;26397:3;26412:75;26483:3;26474:6;26412:75;:::i;:::-;26512:2;26507:3;26503:12;26496:19;;26525:75;26596:3;26587:6;26525:75;:::i;:::-;26625:2;26620:3;26616:12;26609:19;;26638:91;26725:3;26716:6;26638:91;:::i;:::-;26754:2;26749:3;26745:12;26738:19;;26767:75;26838:3;26829:6;26767:75;:::i;:::-;26867:2;26862:3;26858:12;26851:19;;26887:3;26880:10;;26185:711;;;;;;;:::o;26902:167::-;27042:19;27038:1;27030:6;27026:14;27019:43;26902:167;:::o;27075:366::-;27217:3;27238:67;27302:2;27297:3;27238:67;:::i;:::-;27231:74;;27314:93;27403:3;27314:93;:::i;:::-;27432:2;27427:3;27423:12;27416:19;;27075:366;;;:::o;27447:419::-;27613:4;27651:2;27640:9;27636:18;27628:26;;27700:9;27694:4;27690:20;27686:1;27675:9;27671:17;27664:47;27728:131;27854:4;27728:131;:::i;:::-;27720:139;;27447:419;;;:::o;27872:410::-;27912:7;27935:20;27953:1;27935:20;:::i;:::-;27930:25;;27969:20;27987:1;27969:20;:::i;:::-;27964:25;;28024:1;28021;28017:9;28046:30;28064:11;28046:30;:::i;:::-;28035:41;;28225:1;28216:7;28212:15;28209:1;28206:22;28186:1;28179:9;28159:83;28136:139;;28255:18;;:::i;:::-;28136:139;27920:362;27872:410;;;;:::o;28288:180::-;28336:77;28333:1;28326:88;28433:4;28430:1;28423:15;28457:4;28454:1;28447:15;28474:185;28514:1;28531:20;28549:1;28531:20;:::i;:::-;28526:25;;28565:20;28583:1;28565:20;:::i;:::-;28560:25;;28604:1;28594:35;;28609:18;;:::i;:::-;28594:35;28651:1;28648;28644:9;28639:14;;28474:185;;;;:::o;28665:194::-;28705:4;28725:20;28743:1;28725:20;:::i;:::-;28720:25;;28759:20;28777:1;28759:20;:::i;:::-;28754:25;;28803:1;28800;28796:9;28788:17;;28827:1;28821:4;28818:11;28815:37;;;28832:18;;:::i;:::-;28815:37;28665:194;;;;:::o;28865:60::-;28893:3;28914:5;28907:12;;28865:60;;;:::o;28931:142::-;28981:9;29014:53;29032:34;29041:24;29059:5;29041:24;:::i;:::-;29032:34;:::i;:::-;29014:53;:::i;:::-;29001:66;;28931:142;;;:::o;29079:126::-;29129:9;29162:37;29193:5;29162:37;:::i;:::-;29149:50;;29079:126;;;:::o;29211:134::-;29269:9;29302:37;29333:5;29302:37;:::i;:::-;29289:50;;29211:134;;;:::o;29351:147::-;29446:45;29485:5;29446:45;:::i;:::-;29441:3;29434:58;29351:147;;:::o;29504:458::-;29661:4;29699:2;29688:9;29684:18;29676:26;;29712:71;29780:1;29769:9;29765:17;29756:6;29712:71;:::i;:::-;29793:80;29869:2;29858:9;29854:18;29845:6;29793:80;:::i;:::-;29883:72;29951:2;29940:9;29936:18;29927:6;29883:72;:::i;:::-;29504:458;;;;;;:::o;29968:116::-;30038:21;30053:5;30038:21;:::i;:::-;30031:5;30028:32;30018:60;;30074:1;30071;30064:12;30018:60;29968:116;:::o;30090:137::-;30144:5;30175:6;30169:13;30160:22;;30191:30;30215:5;30191:30;:::i;:::-;30090:137;;;;:::o;30233:345::-;30300:6;30349:2;30337:9;30328:7;30324:23;30320:32;30317:119;;;30355:79;;:::i;:::-;30317:119;30475:1;30500:61;30553:7;30544:6;30533:9;30529:22;30500:61;:::i;:::-;30490:71;;30446:125;30233:345;;;;:::o;30584:233::-;30623:3;30646:24;30664:5;30646:24;:::i;:::-;30637:33;;30692:66;30685:5;30682:77;30679:103;;30762:18;;:::i;:::-;30679:103;30809:1;30802:5;30798:13;30791:20;;30584:233;;;:::o;30823:114::-;;:::o;30943:400::-;31103:3;31124:84;31206:1;31201:3;31124:84;:::i;:::-;31117:91;;31217:93;31306:3;31217:93;:::i;:::-;31335:1;31330:3;31326:11;31319:18;;30943:400;;;:::o;31349:381::-;31534:3;31556:148;31700:3;31556:148;:::i;:::-;31549:155;;31721:3;31714:10;;31349:381;;;:::o;31736:309::-;31876:34;31872:1;31864:6;31860:14;31853:58;31945:34;31940:2;31932:6;31928:15;31921:59;32014:23;32009:2;32001:6;31997:15;31990:48;31736:309;:::o;32051:366::-;32193:3;32214:67;32278:2;32273:3;32214:67;:::i;:::-;32207:74;;32290:93;32379:3;32290:93;:::i;:::-;32408:2;32403:3;32399:12;32392:19;;32051:366;;;:::o;32423:419::-;32589:4;32627:2;32616:9;32612:18;32604:26;;32676:9;32670:4;32666:20;32662:1;32651:9;32647:17;32640:47;32704:131;32830:4;32704:131;:::i;:::-;32696:139;;32423:419;;;:::o;32848:93::-;32885:6;32932:2;32927;32920:5;32916:14;32912:23;32902:33;;32848:93;;;:::o;32947:107::-;32991:8;33041:5;33035:4;33031:16;33010:37;;32947:107;;;;:::o;33060:393::-;33129:6;33179:1;33167:10;33163:18;33202:97;33232:66;33221:9;33202:97;:::i;:::-;33320:39;33350:8;33339:9;33320:39;:::i;:::-;33308:51;;33392:4;33388:9;33381:5;33377:21;33368:30;;33441:4;33431:8;33427:19;33420:5;33417:30;33407:40;;33136:317;;33060:393;;;;;:::o;33459:142::-;33509:9;33542:53;33560:34;33569:24;33587:5;33569:24;:::i;:::-;33560:34;:::i;:::-;33542:53;:::i;:::-;33529:66;;33459:142;;;:::o;33607:75::-;33650:3;33671:5;33664:12;;33607:75;;;:::o;33688:269::-;33798:39;33829:7;33798:39;:::i;:::-;33859:91;33908:41;33932:16;33908:41;:::i;:::-;33900:6;33893:4;33887:11;33859:91;:::i;:::-;33853:4;33846:105;33764:193;33688:269;;;:::o;33963:73::-;34008:3;33963:73;:::o;34042:189::-;34119:32;;:::i;:::-;34160:65;34218:6;34210;34204:4;34160:65;:::i;:::-;34095:136;34042:189;;:::o;34237:186::-;34297:120;34314:3;34307:5;34304:14;34297:120;;;34368:39;34405:1;34398:5;34368:39;:::i;:::-;34341:1;34334:5;34330:13;34321:22;;34297:120;;;34237:186;;:::o;34429:543::-;34530:2;34525:3;34522:11;34519:446;;;34564:38;34596:5;34564:38;:::i;:::-;34648:29;34666:10;34648:29;:::i;:::-;34638:8;34634:44;34831:2;34819:10;34816:18;34813:49;;;34852:8;34837:23;;34813:49;34875:80;34931:22;34949:3;34931:22;:::i;:::-;34921:8;34917:37;34904:11;34875:80;:::i;:::-;34534:431;;34519:446;34429:543;;;:::o;34978:117::-;35032:8;35082:5;35076:4;35072:16;35051:37;;34978:117;;;;:::o;35101:169::-;35145:6;35178:51;35226:1;35222:6;35214:5;35211:1;35207:13;35178:51;:::i;:::-;35174:56;35259:4;35253;35249:15;35239:25;;35152:118;35101:169;;;;:::o;35275:295::-;35351:4;35497:29;35522:3;35516:4;35497:29;:::i;:::-;35489:37;;35559:3;35556:1;35552:11;35546:4;35543:21;35535:29;;35275:295;;;;:::o;35575:1395::-;35692:37;35725:3;35692:37;:::i;:::-;35794:18;35786:6;35783:30;35780:56;;;35816:18;;:::i;:::-;35780:56;35860:38;35892:4;35886:11;35860:38;:::i;:::-;35945:67;36005:6;35997;35991:4;35945:67;:::i;:::-;36039:1;36063:4;36050:17;;36095:2;36087:6;36084:14;36112:1;36107:618;;;;36769:1;36786:6;36783:77;;;36835:9;36830:3;36826:19;36820:26;36811:35;;36783:77;36886:67;36946:6;36939:5;36886:67;:::i;:::-;36880:4;36873:81;36742:222;36077:887;;36107:618;36159:4;36155:9;36147:6;36143:22;36193:37;36225:4;36193:37;:::i;:::-;36252:1;36266:208;36280:7;36277:1;36274:14;36266:208;;;36359:9;36354:3;36350:19;36344:26;36336:6;36329:42;36410:1;36402:6;36398:14;36388:24;;36457:2;36446:9;36442:18;36429:31;;36303:4;36300:1;36296:12;36291:17;;36266:208;;;36502:6;36493:7;36490:19;36487:179;;;36560:9;36555:3;36551:19;36545:26;36603:48;36645:4;36637:6;36633:17;36622:9;36603:48;:::i;:::-;36595:6;36588:64;36510:156;36487:179;36712:1;36708;36700:6;36696:14;36692:22;36686:4;36679:36;36114:611;;;36077:887;;35667:1303;;;35575:1395;;:::o;36976:320::-;37091:4;37129:2;37118:9;37114:18;37106:26;;37142:71;37210:1;37199:9;37195:17;37186:6;37142:71;:::i;:::-;37223:66;37285:2;37274:9;37270:18;37261:6;37223:66;:::i;:::-;36976:320;;;;;:::o;37302:180::-;37350:77;37347:1;37340:88;37447:4;37444:1;37437:15;37471:4;37468:1;37461:15;37488:348;37617:4;37655:2;37644:9;37640:18;37632:26;;37668:79;37744:1;37733:9;37729:17;37720:6;37668:79;:::i;:::-;37757:72;37825:2;37814:9;37810:18;37801:6;37757:72;:::i;:::-;37488:348;;;;;:::o;37842:85::-;37887:7;37916:5;37905:16;;37842:85;;;:::o;37933:101::-;37969:7;38009:18;38002:5;37998:30;37987:41;;37933:101;;;:::o;38040:156::-;38097:9;38130:60;38147:42;38156:32;38182:5;38156:32;:::i;:::-;38147:42;:::i;:::-;38130:60;:::i;:::-;38117:73;;38040:156;;;:::o;38202:145::-;38296:44;38334:5;38296:44;:::i;:::-;38291:3;38284:57;38202:145;;:::o;38353:236::-;38453:4;38491:2;38480:9;38476:18;38468:26;;38504:78;38579:1;38568:9;38564:17;38555:6;38504:78;:::i;:::-;38353:236;;;;:::o;38595:442::-;38744:4;38782:2;38771:9;38767:18;38759:26;;38795:71;38863:1;38852:9;38848:17;38839:6;38795:71;:::i;:::-;38876:72;38944:2;38933:9;38929:18;38920:6;38876:72;:::i;:::-;38958;39026:2;39015:9;39011:18;39002:6;38958:72;:::i;:::-;38595:442;;;;;;:::o;39043:180::-;39091:77;39088:1;39081:88;39188:4;39185:1;39178:15;39212:4;39209:1;39202:15;39229:77;39266:7;39295:5;39284:16;;39229:77;;;:::o;39312:118::-;39399:24;39417:5;39399:24;:::i;:::-;39394:3;39387:37;39312:118;;:::o;39436:222::-;39529:4;39567:2;39556:9;39552:18;39544:26;;39580:71;39648:1;39637:9;39633:17;39624:6;39580:71;:::i;:::-;39436:222;;;;:::o;39664:545::-;39837:4;39875:3;39864:9;39860:19;39852:27;;39889:71;39957:1;39946:9;39942:17;39933:6;39889:71;:::i;:::-;39970:68;40034:2;40023:9;40019:18;40010:6;39970:68;:::i;:::-;40048:72;40116:2;40105:9;40101:18;40092:6;40048:72;:::i;:::-;40130;40198:2;40187:9;40183:18;40174:6;40130:72;:::i;:::-;39664:545;;;;;;;:::o"},"methodIdentifiers":{"_itemIds()":"34a7f193","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkUniqueUCI(string)":"e13d23e5","decimals()":"313ce567","editProfile(string,string,string,string,address)":"b9598c5e","enterDetails(string,string,string,address)":"2a41ffd9","fetchAllWalletAddress(string)":"6e997665","fetchPrimaryWalletAddress(string)":"db461e1a","fetchWalletAddressUCI(string)":"04874354","getGLL(uint256,address)":"c34d9d7c","getMarketOwner()":"451e9cf0","getPhoneToDetails()":"5a12d0f8","getWalletDetails(address)":"8cae45d2","initialize(address)":"c4d66de8","makePrimary(address,string)":"0c60b372","marketowner()":"5e385b92","myWallets()":"d263be48","name()":"06fdde03","owner()":"8da5cb5b","phoneToDetails(uint256)":"52d95491","phoneToDetailsUPI(string)":"f24d3af2","platformFee()":"26232a2e","renounceOwnership()":"715018a6","sendMoney(uint256,address,address,address,bytes)":"0f1d5ec7","sendNative(address)":"1888d712","setMarketOwner(address)":"6cdaa421","setPlatformFee(uint256)":"12e8e2c3","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","uniqueEntry(string)":"15ccb680"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"typeOfIdentifier\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"connectedWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPrimaryWallet\",\"type\":\"bool\"}],\"name\":\"DetailsCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_itemIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"checkUniqueUCI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeOfIdentifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"oldIdentifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"editProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeOfIdentifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"enterDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userIdentifier\",\"type\":\"string\"}],\"name\":\"fetchAllWalletAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeOfIdentifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"connectedWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrimaryWallet\",\"type\":\"bool\"}],\"internalType\":\"struct phoneLink.Details[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userIdentifier\",\"type\":\"string\"}],\"name\":\"fetchPrimaryWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"fetchWalletAddressUCI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coinAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getGLL\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPhoneToDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeOfIdentifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"connectedWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrimaryWallet\",\"type\":\"bool\"}],\"internalType\":\"struct phoneLink.Details[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getWalletDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeOfIdentifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"connectedWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrimaryWallet\",\"type\":\"bool\"}],\"internalType\":\"struct phoneLink.Details[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gll\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"}],\"name\":\"makePrimary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketowner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myWallets\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeOfIdentifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"connectedWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrimaryWallet\",\"type\":\"bool\"}],\"internalType\":\"struct phoneLink.Details[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"phoneToDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeOfIdentifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"connectedWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrimaryWallet\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"phoneToDetailsUPI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeOfIdentifier\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"connectedWalletAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrimaryWallet\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coinAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"sendMoney\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"sendNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setMarketOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"}],\"name\":\"uniqueEntry\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getMarketOwner()\":{\"details\":\"both Ownable and ERC2771Context have a sender function, so we need to override and select which one to use.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/phoneLink.sol\":\"phoneLink\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x5c54228bbb2f1f8616179c51bdb90b7960f4a3414c390ad5c6ead6763eb55a59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://745fe72596bb8fde5f294d9d6b943db942202e4445536ee00da3ba011f876e86\",\"dweb:/ipfs/QmcjeESkk4rbhUVaSBfyq5f8rY56Jms1TwcJXaRD55K3UH\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/phoneLink.sol\":{\"keccak256\":\"0x3b154ea695b8d669e60d22153abe6a4a8c7e5376edebf4f9918d00bcfc6460cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://113f8879c7fda4e4747557e7c299cccc83cdb80b27ab67f1cf9f52b2a317ea00\",\"dweb:/ipfs/QmXG61VdoJ1adu6bu3twF88KrGeCmnLvko4XUQ78gYaeAc\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":6689,"contract":"contracts/phoneLink.sol:phoneLink","label":"marketowner","offset":0,"slot":"0","type":"t_address_payable"},{"astId":6691,"contract":"contracts/phoneLink.sol:phoneLink","label":"platformFee","offset":0,"slot":"1","type":"t_uint256"},{"astId":6693,"contract":"contracts/phoneLink.sol:phoneLink","label":"_itemIds","offset":0,"slot":"2","type":"t_uint256"},{"astId":6709,"contract":"contracts/phoneLink.sol:phoneLink","label":"phoneToDetails","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_struct(Details)6704_storage)"},{"astId":6714,"contract":"contracts/phoneLink.sol:phoneLink","label":"phoneToDetailsUPI","offset":0,"slot":"4","type":"t_mapping(t_string_memory_ptr,t_struct(Details)6704_storage)"},{"astId":6731,"contract":"contracts/phoneLink.sol:phoneLink","label":"glltoken","offset":0,"slot":"5","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_string_memory_ptr,t_struct(Details)6704_storage)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => struct phoneLink.Details)","numberOfBytes":"32","value":"t_struct(Details)6704_storage"},"t_mapping(t_uint256,t_struct(Details)6704_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct phoneLink.Details)","numberOfBytes":"32","value":"t_struct(Details)6704_storage"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Details)6704_storage":{"encoding":"inplace","label":"struct phoneLink.Details","members":[{"astId":6695,"contract":"contracts/phoneLink.sol:phoneLink","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":6697,"contract":"contracts/phoneLink.sol:phoneLink","label":"identifier","offset":0,"slot":"1","type":"t_string_storage"},{"astId":6699,"contract":"contracts/phoneLink.sol:phoneLink","label":"typeOfIdentifier","offset":0,"slot":"2","type":"t_string_storage"},{"astId":6701,"contract":"contracts/phoneLink.sol:phoneLink","label":"connectedWalletAddress","offset":0,"slot":"3","type":"t_address"},{"astId":6703,"contract":"contracts/phoneLink.sol:phoneLink","label":"isPrimaryWallet","offset":20,"slot":"3","type":"t_bool"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}